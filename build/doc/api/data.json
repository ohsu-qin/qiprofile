{
    "project": {
        "name": "qiprofile API",
        "description": "Quantitative Imaging Profile (QiPr) web application",
        "version": "2.1.1",
        "url": "http://qiprofile.readthedocs.org/en/latest/",
        "configfile": "doc/yuidoc.json"
    },
    "files": {
        "build/src/clinical/breast.js": {
            "name": "build/src/clinical/breast.js",
            "modules": {},
            "classes": {
                "RCB": 1,
                "Breast": 1,
                "BreastPathology": 1,
                "BreastNormalizedAssay": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/clinical/encounter.data.js": {
            "name": "build/src/clinical/encounter.data.js",
            "modules": {},
            "classes": {
                "ClinicalEncounter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/clinical/pathology.data.js": {
            "name": "build/src/clinical/pathology.data.js",
            "modules": {},
            "classes": {
                "Pathology": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/clinical/sarcoma.js": {
            "name": "build/src/clinical/sarcoma.js",
            "modules": {},
            "classes": {
                "Sarcoma": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/clinical/tnm-size.pipe.ts": {
            "name": "build/src/clinical/tnm-size.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/clinical/tnm-stage.pipe.ts": {
            "name": "build/src/clinical/tnm-stage.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/clinical/tnm.js": {
            "name": "build/src/clinical/tnm.js",
            "modules": {
                "clinical": 1
            },
            "classes": {
                "TNM": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collection/collection.component.spec.ts": {
            "name": "build/src/collection/collection.component.spec.ts",
            "modules": {},
            "classes": {
                "CollectionSubectServiceStub": 1,
                "CollectionRouterStub": 1,
                "CollectionActivatedRouteStub": 1,
                "CollectionComponentSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collection/collection.component.ts": {
            "name": "build/src/collection/collection.component.ts",
            "modules": {},
            "classes": {
                "CollectionComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collection/collection.module.ts": {
            "name": "build/src/collection/collection.module.ts",
            "modules": {
                "collection": 1
            },
            "classes": {
                "CollectionModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/collection-item.component.ts": {
            "name": "build/src/collections/collection-item.component.ts",
            "modules": {},
            "classes": {
                "CollectionItemComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/collections.component.spec.ts": {
            "name": "build/src/collections/collections.component.spec.ts",
            "modules": {},
            "classes": {
                "CollectionsHelpServiceStub": 1,
                "CollectionsActivatedRouteStub": 1,
                "CollectionsServiceStub": 1,
                "CollectionsComponentSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/collections.component.ts": {
            "name": "build/src/collections/collections.component.ts",
            "modules": {},
            "classes": {
                "CollectionsComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/collections.e2e-spec.js": {
            "name": "build/src/collections/collections.e2e-spec.js",
            "modules": {},
            "classes": {
                "CollectionListPage": 1,
                "CollectionListSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/collections.module.ts": {
            "name": "build/src/collections/collections.module.ts",
            "modules": {
                "collections": 1
            },
            "classes": {
                "CollectionsModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/collections.resource.ts": {
            "name": "build/src/collections/collections.resource.ts",
            "modules": {},
            "classes": {
                "CollectionsResource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/collections.service.ts": {
            "name": "build/src/collections/collections.service.ts",
            "modules": {},
            "classes": {
                "CollectionsService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/help-text.component.ts": {
            "name": "build/src/collections/help-text.component.ts",
            "modules": {},
            "classes": {
                "CollectionsHelpTextComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/collections/help.component.ts": {
            "name": "build/src/collections/help.component.ts",
            "modules": {},
            "classes": {
                "CollectionsHelpComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/common/boolean.pipe.ts": {
            "name": "build/src/common/boolean.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/common/capitalize.pipe.ts": {
            "name": "build/src/common/capitalize.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/common/choice.pipe.ts": {
            "name": "build/src/common/choice.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/common/common.module.ts": {
            "name": "build/src/common/common.module.ts",
            "modules": {
                "common": 1
            },
            "classes": {
                "CommonModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/common/notSpecified.pipe.ts": {
            "name": "build/src/common/notSpecified.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/common/property-table.component.ts": {
            "name": "build/src/common/property-table.component.ts",
            "modules": {},
            "classes": {
                "PropertyTableComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/configuration/configuration.service.spec.js": {
            "name": "build/src/configuration/configuration.service.spec.js",
            "modules": {},
            "classes": {
                "ConfigurationServiceSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/configuration/configuration.service.ts": {
            "name": "build/src/configuration/configuration.service.ts",
            "modules": {
                "configuration": 1
            },
            "classes": {
                "ConfigurationService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/controls/cascade-select.component.ts": {
            "name": "build/src/controls/cascade-select.component.ts",
            "modules": {},
            "classes": {
                "CascadeSelectComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/controls/controls.module.ts": {
            "name": "build/src/controls/controls.module.ts",
            "modules": {
                "controls": 1
            },
            "classes": {
                "ControlsModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/controls/player.component.ts": {
            "name": "build/src/controls/player.component.ts",
            "modules": {},
            "classes": {
                "PlayerComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/controls/slider.directive.ts": {
            "name": "build/src/controls/slider.directive.ts",
            "modules": {},
            "classes": {
                "SliderDirective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/date/date-helper.js": {
            "name": "build/src/date/date-helper.js",
            "modules": {
                "date": 1
            },
            "classes": {
                "DateHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/date/date-helper.spec.js": {
            "name": "build/src/date/date-helper.spec.js",
            "modules": {
                "data": 1
            },
            "classes": {
                "DateHelperSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/date/moment.pipe.ts": {
            "name": "build/src/date/moment.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/error/error.component.ts": {
            "name": "build/src/error/error.component.ts",
            "modules": {
                "error": 1
            },
            "classes": {
                "ErrorComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/file/file.service.spec.js": {
            "name": "build/src/file/file.service.spec.js",
            "modules": {
                "file": 1
            },
            "classes": {
                "FileServiceSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/file/file.service.ts": {
            "name": "build/src/file/file.service.ts",
            "modules": {},
            "classes": {
                "FileService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/help/help.component.ts": {
            "name": "build/src/help/help.component.ts",
            "modules": {
                "help": 1
            },
            "classes": {
                "HelpComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/help/help.service.ts": {
            "name": "build/src/help/help.service.ts",
            "modules": {},
            "classes": {
                "HelpService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/help/toggle-help.component.ts": {
            "name": "build/src/help/toggle-help.component.ts",
            "modules": {},
            "classes": {
                "ToggleHelpComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/home/home.component.ts": {
            "name": "build/src/home/home.component.ts",
            "modules": {
                "home": 1
            },
            "classes": {
                "HomeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/image/image-store.js": {
            "name": "build/src/image/image-store.js",
            "modules": {},
            "classes": {
                "ImageStore": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/image/image.component.ts": {
            "name": "build/src/image/image.component.ts",
            "modules": {},
            "classes": {
                "ImageComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/image/image.data.js": {
            "name": "build/src/image/image.data.js",
            "modules": {},
            "classes": {
                "Image": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/image/image.module.ts": {
            "name": "build/src/image/image.module.ts",
            "modules": {
                "image": 1
            },
            "classes": {
                "ImageModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/image/papaya.service.ts": {
            "name": "build/src/image/papaya.service.ts",
            "modules": {},
            "classes": {
                "PapayaService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/image/xnat.js": {
            "name": "build/src/image/xnat.js",
            "modules": {},
            "classes": {
                "XNAT": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/image/xnat.spec.js": {
            "name": "build/src/image/xnat.spec.js",
            "modules": {},
            "classes": {
                "XNATSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/language/language.ts": {
            "name": "build/src/language/language.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/main/app.component.ts": {
            "name": "build/src/main/app.component.ts",
            "modules": {},
            "classes": {
                "AppComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/main/app.module.ts": {
            "name": "build/src/main/app.module.ts",
            "modules": {
                "main": 1
            },
            "classes": {
                "AppModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/math/math.ts": {
            "name": "build/src/math/math.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/object/object-helper.js": {
            "name": "build/src/object/object-helper.js",
            "modules": {
                "object": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/object/object-helper.spec.js": {
            "name": "build/src/object/object-helper.spec.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/page/page.component.ts": {
            "name": "build/src/page/page.component.ts",
            "modules": {},
            "classes": {
                "PageComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/page/page.module.ts": {
            "name": "build/src/page/page.module.ts",
            "modules": {
                "page": 1
            },
            "classes": {
                "PageModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/help-text.component.ts": {
            "name": "build/src/projects/help-text.component.ts",
            "modules": {},
            "classes": {
                "ProjectsHelpTextComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/help.component.ts": {
            "name": "build/src/projects/help.component.ts",
            "modules": {},
            "classes": {
                "ProjectsHelpComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/project-item.component.ts": {
            "name": "build/src/projects/project-item.component.ts",
            "modules": {},
            "classes": {
                "ProjectItemComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/projects.component.spec.ts": {
            "name": "build/src/projects/projects.component.spec.ts",
            "modules": {},
            "classes": {
                "ProjectsServiceStub": 1,
                "ProjectsHelpServiceStub": 1,
                "ProjectsComponentSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/projects.component.ts": {
            "name": "build/src/projects/projects.component.ts",
            "modules": {
                "projects": 1
            },
            "classes": {
                "ProjectsComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/projects.e2e-spec.js": {
            "name": "build/src/projects/projects.e2e-spec.js",
            "modules": {},
            "classes": {
                "ProjectListPage": 1,
                "ProjectListSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/projects.module.ts": {
            "name": "build/src/projects/projects.module.ts",
            "modules": {},
            "classes": {
                "ProjectsModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/projects.resource.ts": {
            "name": "build/src/projects/projects.resource.ts",
            "modules": {
                "project": 1
            },
            "classes": {
                "ProjectsResource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/projects/projects.service.ts": {
            "name": "build/src/projects/projects.service.ts",
            "modules": {},
            "classes": {
                "ProjectsService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/rest/rest.js": {
            "name": "build/src/rest/rest.js",
            "modules": {},
            "classes": {
                "REST": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/rest/rest.resource.ts": {
            "name": "build/src/rest/rest.resource.ts",
            "modules": {
                "rest": 1
            },
            "classes": {
                "RestResource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/rest/rest.spec.js": {
            "name": "build/src/rest/rest.spec.js",
            "modules": {},
            "classes": {
                "RESTSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/roman/roman.js": {
            "name": "build/src/roman/roman.js",
            "modules": {
                "roman": 1
            },
            "classes": {
                "Roman": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/roman/roman.spec.js": {
            "name": "build/src/roman/roman.spec.js",
            "modules": {},
            "classes": {
                "RomanSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/roman/romanize.pipe.ts": {
            "name": "build/src/roman/romanize.pipe.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/image-sequence.data.js": {
            "name": "build/src/session/image-sequence.data.js",
            "modules": {},
            "classes": {
                "ImageSequence": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/image-sequence.data.spec.js": {
            "name": "build/src/session/image-sequence.data.spec.js",
            "modules": {},
            "classes": {
                "ImageSequenceSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/image-sequence.service.spec.ts": {
            "name": "build/src/session/image-sequence.service.spec.ts",
            "modules": {
                "imageSequence": 1
            },
            "classes": {
                "ImageSequenceSessionServiceStub": 1,
                "ImageSequenceServiceSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/image-sequence.service.ts": {
            "name": "build/src/session/image-sequence.service.ts",
            "modules": {},
            "classes": {
                "IamgeSequenceService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/modeling.data.js": {
            "name": "build/src/session/modeling.data.js",
            "modules": {},
            "classes": {
                "LabelMap": 1,
                "ParameterResult": 1,
                "ModelingResult": 1,
                "Modeling": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/registration.data.js": {
            "name": "build/src/session/registration.data.js",
            "modules": {},
            "classes": {
                "Registration": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/registration.data.spec.js": {
            "name": "build/src/session/registration.data.spec.js",
            "modules": {},
            "classes": {
                "RegistrationSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/scan.data.js": {
            "name": "build/src/session/scan.data.js",
            "modules": {},
            "classes": {
                "Scan": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/scan.data.spec.js": {
            "name": "build/src/session/scan.data.spec.js",
            "modules": {},
            "classes": {
                "ScanSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session-detail.resource.ts": {
            "name": "build/src/session/session-detail.resource.ts",
            "modules": {},
            "classes": {
                "SessionDetailResource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session.component.spec.ts": {
            "name": "build/src/session/session.component.spec.ts",
            "modules": {},
            "classes": {
                "SessionServiceStub": 1,
                "SessiondRouterStub": 1,
                "SessionActivatedRouteStub": 1,
                "SessionComponentSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session.component.ts": {
            "name": "build/src/session/session.component.ts",
            "modules": {},
            "classes": {
                "SessionComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session.data.js": {
            "name": "build/src/session/session.data.js",
            "modules": {},
            "classes": {
                "Session": 1,
                "SessionTumorExtent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session.data.spec.js": {
            "name": "build/src/session/session.data.spec.js",
            "modules": {},
            "classes": {
                "SessionSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session.module.ts": {
            "name": "build/src/session/session.module.ts",
            "modules": {
                "session": 1
            },
            "classes": {
                "SessionModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session.service.spec.ts": {
            "name": "build/src/session/session.service.spec.ts",
            "modules": {},
            "classes": {
                "SessionSubjectResourceStub": 1,
                "SessionDetailResourceStub": 1,
                "SessionServiceSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/session.service.ts": {
            "name": "build/src/session/session.service.ts",
            "modules": {},
            "classes": {
                "SessionService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/session/time-series.data.js": {
            "name": "build/src/session/time-series.data.js",
            "modules": {},
            "classes": {
                "TimeSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/string/string-helper.js": {
            "name": "build/src/string/string-helper.js",
            "modules": {
                "string": 1
            },
            "classes": {
                "StringHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/string/string-helper.spec.js": {
            "name": "build/src/string/string-helper.spec.js",
            "modules": {},
            "classes": {
                "StringHelperSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/encounter.data.js": {
            "name": "build/src/subject/encounter.data.js",
            "modules": {},
            "classes": {
                "Encounter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.component.spec.ts": {
            "name": "build/src/subject/subject.component.spec.ts",
            "modules": {},
            "classes": {
                "SubjectChangeDetectorRefStub": 1,
                "SubjectServiceStub": 1,
                "SubjectdRouterStub": 1,
                "SubjectActivatedRouteStub": 1,
                "SubjectComponentSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.component.ts": {
            "name": "build/src/subject/subject.component.ts",
            "modules": {},
            "classes": {
                "SubjectComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.data.js": {
            "name": "build/src/subject/subject.data.js",
            "modules": {},
            "classes": {
                "ModelingResults": 1,
                "Subject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.data.spec.js": {
            "name": "build/src/subject/subject.data.spec.js",
            "modules": {},
            "classes": {
                "SubjectSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.module.ts": {
            "name": "build/src/subject/subject.module.ts",
            "modules": {
                "subject": 1
            },
            "classes": {
                "SubjectModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.resource.ts": {
            "name": "build/src/subject/subject.resource.ts",
            "modules": {},
            "classes": {
                "SubjectResource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.service.spec.ts": {
            "name": "build/src/subject/subject.service.spec.ts",
            "modules": {},
            "classes": {
                "SubjectResourceStub": 1,
                "SubjectServiceSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/subject/subject.service.ts": {
            "name": "build/src/subject/subject.service.ts",
            "modules": {},
            "classes": {
                "SubjectService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/testing/findable.js": {
            "name": "build/src/testing/findable.js",
            "modules": {
                "testing": 1
            },
            "classes": {
                "Findable": 1,
                "Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/testing/object.js": {
            "name": "build/src/testing/object.js",
            "modules": {},
            "classes": {
                "ObjectHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/testing/page.js": {
            "name": "build/src/testing/page.js",
            "modules": {},
            "classes": {
                "Page": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/visualization/color-bar.directive.ts": {
            "name": "build/src/visualization/color-bar.directive.ts",
            "modules": {},
            "classes": {
                "ColorBarDirective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/visualization/correlation.component.ts": {
            "name": "build/src/visualization/correlation.component.ts",
            "modules": {},
            "classes": {
                "CorrelationComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/visualization/scatter-plot.directive.ts": {
            "name": "build/src/visualization/scatter-plot.directive.ts",
            "modules": {},
            "classes": {
                "ScatterPlotDirective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/visualization/spark-line.directive.ts": {
            "name": "build/src/visualization/spark-line.directive.ts",
            "modules": {},
            "classes": {
                "SparkLineDirective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/visualization/visualization.module.ts": {
            "name": "build/src/visualization/visualization.module.ts",
            "modules": {
                "visualization": 1
            },
            "classes": {
                "VisualizationModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/volume/volume.component.ts": {
            "name": "build/src/volume/volume.component.ts",
            "modules": {},
            "classes": {
                "VolumeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/volume/volume.data.js": {
            "name": "build/src/volume/volume.data.js",
            "modules": {},
            "classes": {
                "Volume": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/volume/volume.data.spec.js": {
            "name": "build/src/volume/volume.data.spec.js",
            "modules": {},
            "classes": {
                "VolumeSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/volume/volume.e2e-spec.js": {
            "name": "build/src/volume/volume.e2e-spec.js",
            "modules": {},
            "classes": {
                "VolumeDetailPage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/volume/volume.module.ts": {
            "name": "build/src/volume/volume.module.ts",
            "modules": {
                "volume": 1
            },
            "classes": {
                "VolumeModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/volume/volume.service.spec.ts": {
            "name": "build/src/volume/volume.service.spec.ts",
            "modules": {},
            "classes": {
                "VolumeImageSequenceServiceStub": 1,
                "VolumeServiceSpec": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/src/volume/volume.service.ts": {
            "name": "build/src/volume/volume.service.ts",
            "modules": {},
            "classes": {
                "VolumeService": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "clinical": {
            "name": "clinical",
            "submodules": {},
            "elements": {},
            "classes": {
                "RCB": 1,
                "Breast": 1,
                "BreastPathology": 1,
                "BreastNormalizedAssay": 1,
                "ClinicalEncounter": 1,
                "Pathology": 1,
                "Sarcoma": 1,
                "TNM": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/clinical/tnm.js",
            "line": 84,
            "description": "The static clinical utilities.",
            "static": 1,
            "itemtype": "main",
            "return": {
                "description": "the sorted stage values"
            },
            "params": [
                {
                    "name": "tnm",
                    "description": "the TNM object"
                }
            ]
        },
        "collection": {
            "name": "collection",
            "submodules": {},
            "elements": {},
            "classes": {
                "CollectionSubectServiceStub": 1,
                "CollectionRouterStub": 1,
                "CollectionActivatedRouteStub": 1,
                "CollectionComponentSpec": 1,
                "CollectionComponent": 1,
                "CollectionModule": 1,
                "CollectionItemComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/collections/collection-item.component.ts",
            "line": 9,
            "description": "This Collection Detail module exports the following directives:\n{{#crossLink \"CollectionComponent\"}}{{/crossLink}}",
            "itemtype": "main"
        },
        "collections": {
            "name": "collections",
            "submodules": {},
            "elements": {},
            "classes": {
                "CollectionsHelpServiceStub": 1,
                "CollectionsActivatedRouteStub": 1,
                "CollectionsServiceStub": 1,
                "CollectionsComponentSpec": 1,
                "CollectionsComponent": 1,
                "CollectionListPage": 1,
                "CollectionListSpec": 1,
                "CollectionsModule": 1,
                "CollectionsResource": 1,
                "CollectionsService": 1,
                "CollectionsHelpTextComponent": 1,
                "CollectionsHelpComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/collections/help.component.ts",
            "line": 10,
            "description": "This Collections List module exports the following directives:\n{{#crossLink \"CollectionsComponent\"}}{{/crossLink}}",
            "extends": "Page",
            "itemtype": "main"
        },
        "common": {
            "name": "common",
            "submodules": {},
            "elements": {},
            "classes": {
                "CommonModule": 1,
                "PropertyTableComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/common/property-table.component.ts",
            "line": 19,
            "description": "The common module exports the following directives:\n{{#crossLink \"PropertyTableComponent\"}}{{/crossLink}}",
            "itemtype": "main"
        },
        "configuration": {
            "name": "configuration",
            "submodules": {},
            "elements": {},
            "classes": {
                "ConfigurationServiceSpec": 1,
                "ConfigurationService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/configuration/configuration.service.ts",
            "line": 19,
            "description": "The application configuration module.",
            "itemtype": "main"
        },
        "controls": {
            "name": "controls",
            "submodules": {},
            "elements": {},
            "classes": {
                "CascadeSelectComponent": 1,
                "ControlsModule": 1,
                "PlayerComponent": 1,
                "SliderDirective": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/controls/slider.directive.ts",
            "line": 22,
            "description": "The controls module exports the following directives:\n{{#crossLink \"SliderDirective\"}}{{/crossLink}}\n{{#crossLink \"PlayerComponent\"}}{{/crossLink}}\n{{#crossLink \"CascadeSelectComponent\"}}{{/crossLink}}",
            "itemtype": "main"
        },
        "date": {
            "name": "date",
            "submodules": {},
            "elements": {},
            "classes": {
                "DateHelper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/date/date-helper.js",
            "line": 12,
            "description": "The date utilities."
        },
        "data": {
            "name": "data",
            "submodules": {},
            "elements": {},
            "classes": {
                "DateHelperSpec": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/date/date-helper.spec.js",
            "line": 5,
            "description": "The {{#crossLink \"DateHelper\"}}{{/crossLink}} validator."
        },
        "error": {
            "name": "error",
            "submodules": {},
            "elements": {},
            "classes": {
                "ErrorComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/error/error.component.ts",
            "line": 15,
            "description": "The error handler module.",
            "itemtype": "main"
        },
        "file": {
            "name": "file",
            "submodules": {},
            "elements": {},
            "classes": {
                "FileServiceSpec": 1,
                "FileService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/file/file.service.ts",
            "line": 15,
            "description": "The {{#crossLink \"FileService\"}}{{/crossLink}} validator."
        },
        "help": {
            "name": "help",
            "submodules": {},
            "elements": {},
            "classes": {
                "HelpComponent": 1,
                "HelpService": 1,
                "ToggleHelpComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/help/toggle-help.component.ts",
            "line": 10,
            "description": "The help panel component."
        },
        "home": {
            "name": "home",
            "submodules": {},
            "elements": {},
            "classes": {
                "HomeComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/home/home.component.ts",
            "line": 9,
            "description": "The home button component."
        },
        "image": {
            "name": "image",
            "submodules": {},
            "elements": {},
            "classes": {
                "ImageStore": 1,
                "ImageComponent": 1,
                "Image": 1,
                "ImageModule": 1,
                "PapayaService": 1,
                "XNAT": 1,
                "XNATSpec": 1,
                "AppComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/main/app.component.ts",
            "line": 11,
            "description": "This image module is responsible for image load, parsing\nand display. The module exports the following directives:\n{{#crossLink \"ImageComponent\"}}{{/crossLink}}",
            "itemtype": "main"
        },
        "main": {
            "name": "main",
            "submodules": {},
            "elements": {},
            "classes": {
                "AppModule": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/main/app.module.ts",
            "line": 63,
            "description": "This application entry module declares the top-level\nmain {{#crossLink \"AppComponent\"}}{{/crossLink}} and\nprovides the following shared services:\n* the REST resource providers\n* {{#crossLink \"HelpService\"}}{{/crossLink}}\n* {{#crossLink \"ConfigurationService\"}}{{/crossLink}}\n* {{#crossLink \"SubjectService\"}}{{/crossLink}}\n* {{#crossLink \"SessionService\"}}{{/crossLink}}\n* {{#crossLink \"PapayaService\"}}{{/crossLink}}\n\nThese shared services are singletons and should not be\nredundantly provided by the feature submodules.\n\nThe page-level application feature modules are lazy-loaded.\nThese include the following:\n* {{#crossLink \"ProjectsModule\"}}{{/crossLink}}\n* {{#crossLink \"CollectionsModule\"}}{{/crossLink}}\n* {{#crossLink \"CollectionModule\"}}{{/crossLink}}\n* {{#crossLink \"SubjectModule\"}}{{/crossLink}}\n* {{#crossLink \"SessionModule\"}}{{/crossLink}}\n* {{#crossLink \"VolumeModule\"}}{{/crossLink}}",
            "itemtype": "main"
        },
        "object": {
            "name": "object",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/object/object-helper.js",
            "line": 2,
            "description": "Object utilities.",
            "itemtype": "main"
        },
        "page": {
            "name": "page",
            "submodules": {},
            "elements": {},
            "classes": {
                "PageComponent": 1,
                "PageModule": 1,
                "ProjectsHelpTextComponent": 1,
                "ProjectsHelpComponent": 1,
                "ProjectItemComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/projects/project-item.component.ts",
            "line": 9,
            "description": "The page module imports the modal module and\nexports the following directives:\n{{#crossLink \"HomeComponent\"}}{{/crossLink}}\n{{#crossLink \"ToggleHelpComponent\"}}{{/crossLink}}\n{{#crossLink \"HelpComponent\"}}{{/crossLink}}\n{{#crossLink \"ErrorComponent\"}}{{/crossLink}}",
            "itemtype": "main"
        },
        "projects": {
            "name": "projects",
            "submodules": {},
            "elements": {},
            "classes": {
                "ProjectsServiceStub": 1,
                "ProjectsHelpServiceStub": 1,
                "ProjectsComponentSpec": 1,
                "ProjectsComponent": 1,
                "ProjectListPage": 1,
                "ProjectListSpec": 1,
                "ProjectsModule": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/projects/projects.module.ts",
            "line": 35,
            "description": "The Projects List module.",
            "itemtype": "main",
            "extends": "Page"
        },
        "project": {
            "name": "project",
            "submodules": {},
            "elements": {},
            "classes": {
                "ProjectsResource": 1,
                "ProjectsService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/projects/projects.service.ts",
            "line": 14,
            "description": "The project REST resource.",
            "extends": "RestResource"
        },
        "rest": {
            "name": "rest",
            "submodules": {},
            "elements": {},
            "classes": {
                "REST": 1,
                "RestResource": 1,
                "RESTSpec": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/rest/rest.spec.js",
            "line": 4,
            "description": "The REST utilities.",
            "static": 1,
            "itemtype": "main"
        },
        "roman": {
            "name": "roman",
            "submodules": {},
            "elements": {},
            "classes": {
                "Roman": 1,
                "RomanSpec": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/roman/roman.spec.js",
            "line": 5,
            "description": "Roman numeral conversion utilities.",
            "itemtype": "main"
        },
        "session": {
            "name": "session",
            "submodules": {
                "undefined": 1
            },
            "elements": {},
            "classes": {
                "SessionSubjectResourceStub": 1,
                "ImageSequence": 1,
                "ImageSequenceSpec": 1,
                "LabelMap": 1,
                "ParameterResult": 1,
                "ModelingResult": 1,
                "Modeling": 1,
                "Registration": 1,
                "RegistrationSpec": 1,
                "Scan": 1,
                "ScanSpec": 1,
                "SessionDetailResource": 1,
                "SessionServiceStub": 1,
                "SessiondRouterStub": 1,
                "SessionActivatedRouteStub": 1,
                "SessionComponentSpec": 1,
                "SessionComponent": 1,
                "Session": 1,
                "SessionTumorExtent": 1,
                "SessionSpec": 1,
                "SessionModule": 1,
                "SessionDetailResourceStub": 1,
                "SessionServiceSpec": 1,
                "SessionService": 1,
                "TimeSeries": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/session/time-series.data.js",
            "line": 47,
            "description": "This Session Detail module exports the\n{{#crossLink \"SessionComponent\"}}{{/crossLink}}\ndirective.",
            "static": 1,
            "extends": "RestResource",
            "itemtype": "main"
        },
        "imageSequence": {
            "name": "imageSequence",
            "submodules": {},
            "elements": {},
            "classes": {
                "ImageSequenceSessionServiceStub": 1,
                "ImageSequenceServiceSpec": 1,
                "IamgeSequenceService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/session/image-sequence.service.ts",
            "line": 13,
            "description": "The test mock for a `SessionService`."
        },
        "subject": {
            "name": "subject",
            "submodules": {},
            "elements": {},
            "classes": {
                "SubjectChangeDetectorRefStub": 1,
                "Encounter": 1,
                "SubjectServiceStub": 1,
                "SubjectdRouterStub": 1,
                "SubjectActivatedRouteStub": 1,
                "SubjectComponentSpec": 1,
                "SubjectComponent": 1,
                "ModelingResults": 1,
                "Subject": 1,
                "SubjectSpec": 1,
                "SubjectModule": 1,
                "SubjectResource": 1,
                "SubjectResourceStub": 1,
                "SubjectServiceSpec": 1,
                "SubjectService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/subject/subject.service.ts",
            "line": 11,
            "description": "This Subject Detail module exports the\n{{#crossLink \"SubjectComponent\"}}{{/crossLink}}\ndirective.",
            "static": 1,
            "itemtype": "main",
            "extends": "RestResource"
        },
        "string": {
            "name": "string",
            "submodules": {},
            "elements": {},
            "classes": {
                "StringHelper": 1,
                "StringHelperSpec": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/string/string-helper.spec.js",
            "line": 4,
            "description": "String utilities.",
            "itemtype": "main"
        },
        "testing": {
            "name": "testing",
            "submodules": {},
            "elements": {},
            "classes": {
                "ObjectHelper": 1,
                "Findable": 1,
                "Table": 1,
                "Page": 1,
                "ColorBarDirective": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 11,
            "description": "The WebElement extension for finding subelements.",
            "extends": "Findable",
            "example": [
                "\n    Page = require '../testing/page'\n    class LoginPage extends Page\n      constructor: ->\n        super('/login.html')\n      ...\n    login = new LoginPage()\n    expect(login.billboard).to.eventually.equal('Login')"
            ]
        },
        "visualization": {
            "name": "visualization",
            "submodules": {},
            "elements": {},
            "classes": {
                "CorrelationComponent": 1,
                "ScatterPlotDirective": 1,
                "SparkLineDirective": 1,
                "VisualizationModule": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/visualization/visualization.module.ts",
            "line": 31,
            "description": "This D3 facade module exports the following directives:\n{{#crossLink \"ScatterPlotDirective\"}}{{/crossLink}}\n{{#crossLink \"SparkLineDirective\"}}{{/crossLink}}\n{{#crossLink \"ColorBarDirective\"}}{{/crossLink}}",
            "itemtype": "main"
        },
        "volume": {
            "name": "volume",
            "submodules": {},
            "elements": {},
            "classes": {
                "VolumeComponent": 1,
                "Volume": 1,
                "VolumeSpec": 1,
                "VolumeDetailPage": 1,
                "VolumeModule": 1,
                "VolumeImageSequenceServiceStub": 1,
                "VolumeServiceSpec": 1,
                "VolumeService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "build/src/volume/volume.service.ts",
            "line": 10,
            "description": "This Volume Detail module exports the\n{{#crossLink \"VolumeComponent\"}}{{/crossLink}}\ndirective.",
            "extends": "Page",
            "itemtype": "main"
        }
    },
    "classes": {
        "RCB": {
            "name": "RCB",
            "shortname": "RCB",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/breast.js",
            "line": 72,
            "description": "The RCB class based on the RCB index cut-offs.",
            "itemtype": "property"
        },
        "Breast": {
            "name": "Breast",
            "shortname": "Breast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/breast.js",
            "line": 218,
            "description": "Returns the cancer stage.\n\n1f metastasis exists (M1), then the stage is 4.\nOtherwise, the stage is determined by T and N scores as\ndefined in the tumor type factory STAGES associative\nlookup table."
        },
        "BreastPathology": {
            "name": "BreastPathology",
            "shortname": "BreastPathology",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/breast.js",
            "line": 195,
            "description": "The Breast pathology."
        },
        "BreastNormalizedAssay": {
            "name": "BreastNormalizedAssay",
            "shortname": "BreastNormalizedAssay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/breast.js",
            "line": 167,
            "description": "Returns the cancer recurrence score. This score is calculated from\na genetic expression assay according to algorithm in Figure 1 of\nthe following paper:\n\n  Paik, et al., 'A Multigene Assay to Predict Recurrence of\n  Tamoxifen-Treated, Node-Negative Breast Cancer',\n  N Engl J Med 2004; 351:2817-2826\n  (http://www.nejm.org/doi/full/10.1056/NEJMoa041588)\n\n1f metastasis exists (M1), then the stage is 4.\nOtherwise, the stage is determined by T and N scores as\ndefined in the tumor type factory STAGES associative\nlookup table.",
            "itemtype": "property"
        },
        "ClinicalEncounter": {
            "name": "ClinicalEncounter",
            "shortname": "ClinicalEncounter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/encounter.data.js",
            "line": 5,
            "description": "The clinical Encounter REST data object extension utility."
        },
        "Pathology": {
            "name": "Pathology",
            "shortname": "Pathology",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/pathology.data.js",
            "line": 5,
            "description": "The clinical pathology REST data object extension utility."
        },
        "Sarcoma": {
            "name": "Sarcoma",
            "shortname": "Sarcoma",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/sarcoma.js",
            "line": 12,
            "description": "The static sarcoma utility."
        },
        "TNM": {
            "name": "TNM",
            "shortname": "TNM",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "clinical",
            "namespace": "",
            "file": "build/src/clinical/tnm.js",
            "line": 84,
            "description": "The static TNM utility.",
            "static": 1
        },
        "CollectionSubectServiceStub": {
            "name": "CollectionSubectServiceStub",
            "shortname": "CollectionSubectServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collection",
            "namespace": "",
            "file": "build/src/collection/collection.component.spec.ts",
            "line": 9,
            "description": "The stunt {{#crossLink \"SubectService\"}}{{/crossLink}}."
        },
        "CollectionRouterStub": {
            "name": "CollectionRouterStub",
            "shortname": "CollectionRouterStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collection",
            "namespace": "",
            "file": "build/src/collection/collection.component.spec.ts",
            "line": 29,
            "description": "The stunt router."
        },
        "CollectionActivatedRouteStub": {
            "name": "CollectionActivatedRouteStub",
            "shortname": "CollectionActivatedRouteStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collection",
            "namespace": "",
            "file": "build/src/collection/collection.component.spec.ts",
            "line": 38,
            "description": "The stunt route."
        },
        "CollectionComponentSpec": {
            "name": "CollectionComponentSpec",
            "shortname": "CollectionComponentSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collection",
            "namespace": "",
            "file": "build/src/collection/collection.component.spec.ts",
            "line": 54,
            "description": "The {{#crossLink \"CollectionComponent\"}}{{/crossLink}} validator.\n\nFIXME - this second attempt to test in Angular rc.5 results in the\n  following error:\n    undefined is not a constructor (evaluating 'describe')\n  Although the karma plug-ins should provide describe, et al. as globals,\n  perhaps they must be grabbed from some import."
        },
        "CollectionComponent": {
            "name": "CollectionComponent",
            "shortname": "CollectionComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collection",
            "namespace": "",
            "file": "build/src/collection/collection.component.ts",
            "line": 27,
            "description": "The Collection Detail main component."
        },
        "CollectionModule": {
            "name": "CollectionModule",
            "shortname": "CollectionModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collection",
            "namespace": "",
            "file": "build/src/collection/collection.module.ts",
            "line": 33,
            "description": "The collection module metadata."
        },
        "CollectionItemComponent": {
            "name": "CollectionItemComponent",
            "shortname": "CollectionItemComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collection",
            "namespace": "",
            "file": "build/src/collections/collection-item.component.ts",
            "line": 9,
            "description": "The Collections List collection item component"
        },
        "CollectionsHelpServiceStub": {
            "name": "CollectionsHelpServiceStub",
            "shortname": "CollectionsHelpServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.component.spec.ts",
            "line": 12,
            "description": "The stunt showHelp flag service."
        },
        "CollectionsActivatedRouteStub": {
            "name": "CollectionsActivatedRouteStub",
            "shortname": "CollectionsActivatedRouteStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.component.spec.ts",
            "line": 22,
            "description": "The test mock for an `ActivatedRoute\"."
        },
        "CollectionsServiceStub": {
            "name": "CollectionsServiceStub",
            "shortname": "CollectionsServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.component.spec.ts",
            "line": 34,
            "description": "The test mock for a {{#crossLink \"CollectionsService\"}}{{/crossLink}}."
        },
        "CollectionsComponentSpec": {
            "name": "CollectionsComponentSpec",
            "shortname": "CollectionsComponentSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.component.spec.ts",
            "line": 54,
            "description": "The {{#crossLink \"CollectionsComponent\"}}{{/crossLink}} validator.\nThis test is better suited for E2E testing, but confirms that we\ncan test an observable component property with injected stubs and\nsimulated init."
        },
        "CollectionsComponent": {
            "name": "CollectionsComponent",
            "shortname": "CollectionsComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.component.ts",
            "line": 15,
            "description": "The Collection List main component."
        },
        "CollectionListPage": {
            "name": "CollectionListPage",
            "shortname": "CollectionListPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.e2e-spec.js",
            "line": 14,
            "description": "The Collection List E2E page encapsulation."
        },
        "CollectionListSpec": {
            "name": "CollectionListSpec",
            "shortname": "CollectionListSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.e2e-spec.js",
            "line": 77,
            "description": "The Collection List E2E validator."
        },
        "CollectionsModule": {
            "name": "CollectionsModule",
            "shortname": "CollectionsModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.module.ts",
            "line": 38,
            "description": "The collections module metadata."
        },
        "CollectionsResource": {
            "name": "CollectionsResource",
            "shortname": "CollectionsResource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.resource.ts",
            "line": 9,
            "description": "The collection REST resource.",
            "extends": "RestResource"
        },
        "CollectionsService": {
            "name": "CollectionsService",
            "shortname": "CollectionsService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/collections.service.ts",
            "line": 9,
            "description": "The collection data access service."
        },
        "CollectionsHelpTextComponent": {
            "name": "CollectionsHelpTextComponent",
            "shortname": "CollectionsHelpTextComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/help-text.component.ts",
            "line": 10,
            "description": "The collections help text component."
        },
        "CollectionsHelpComponent": {
            "name": "CollectionsHelpComponent",
            "shortname": "CollectionsHelpComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "collections",
            "namespace": "",
            "file": "build/src/collections/help.component.ts",
            "line": 10,
            "description": "The Collections List help panel component. This component is\nadapted from the standard\n{{#crossLink \"HelpComponent\"}}{{/crossLink}}\nbut with a child\n{{#crossLink \"CollectionsHelpTextComponent\"}}{{/crossLink}}\nrather than a `help` input variable. This is done in order\nto allow for the pronunciation button click action, which is\ndisabled by Angular when the standard help component includes\nthe help string variable as inner HTML."
        },
        "CommonModule": {
            "name": "CommonModule",
            "shortname": "CommonModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "common",
            "namespace": "",
            "file": "build/src/common/common.module.ts",
            "line": 24,
            "description": "The common module metadata."
        },
        "PropertyTableComponent": {
            "name": "PropertyTableComponent",
            "shortname": "PropertyTableComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "common",
            "namespace": "",
            "file": "build/src/common/property-table.component.ts",
            "line": 19,
            "description": "The property table displays object properties."
        },
        "ConfigurationServiceSpec": {
            "name": "ConfigurationServiceSpec",
            "shortname": "ConfigurationServiceSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "configuration",
            "namespace": "",
            "file": "build/src/configuration/configuration.service.spec.js",
            "line": 5,
            "description": "The {{#crossLink \"ConfigurationService\"}}{{/crossLink}} validator."
        },
        "ConfigurationService": {
            "name": "ConfigurationService",
            "shortname": "ConfigurationService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "configuration",
            "namespace": "",
            "file": "build/src/configuration/configuration.service.ts",
            "line": 19,
            "description": "The application configuration service."
        },
        "CascadeSelectComponent": {
            "name": "CascadeSelectComponent",
            "shortname": "CascadeSelectComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "controls",
            "namespace": "",
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 11,
            "description": "The cascade select component has subselects."
        },
        "ControlsModule": {
            "name": "ControlsModule",
            "shortname": "ControlsModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "controls",
            "namespace": "",
            "file": "build/src/controls/controls.module.ts",
            "line": 28,
            "description": "The controls module metadata."
        },
        "PlayerComponent": {
            "name": "PlayerComponent",
            "shortname": "PlayerComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "controls",
            "namespace": "",
            "file": "build/src/controls/player.component.ts",
            "line": 10,
            "description": "The player component."
        },
        "SliderDirective": {
            "name": "SliderDirective",
            "shortname": "SliderDirective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "controls",
            "namespace": "",
            "file": "build/src/controls/slider.directive.ts",
            "line": 22,
            "description": "The slider wrapper. This directive is adapted from the\n `ohsu-qin/ng2-nouislider` fork of `ng2-nouislider`.\n\n`ng2-nouislider` is forked to fix the following bugs:\n* ng2-nouislider does not detect changes to the input value.\n* ng2-nouislider does not propagate changes to the parent\n  component.\n\nThe base `ng2-nouislider` implementation operates under a\nmisconception fostered by misleading Angular documentation\nthat a custom control can implement Angular two-way `[(ngModel)]`\nbinding (cf.\nhttps://github.com/angular/angular/issues/6639#issuecomment-242310492\n). The implementation below clears up that misconception and\nprovides both input and output change detection.\n\nThe fork `nouislider.ts` is then copied to this `qiprofile` source\ncode directory because the jspm install of the fork GitHub project\nresults in the following import error:\n\n    Error loading http://localhost:3000/angular2/core as \"angular2/core\" from\n    http://localhost:3000/jspm_packages/github/ohsu-qin/ng2-nouislider@0.3.0/nouislider.js\n\nThis error occurs even though there is no reference to \"angular2/core\"\nin the library, only \"@angular/core\".\n\nAlthough it would be preferable to place `nouislider.ts` in the\n`lib` directory, that in turn results in the infamous `Unexpected token`\njspm error. This opaque error has several obscure causes, but none\nseem to apply to this case. For an unknown reason, placing the file\ninto this `src/controls` directory works. Perhaps `jspm.config.js`\nis missing a magic incantation for the `lib` directory."
        },
        "DateHelper": {
            "name": "DateHelper",
            "shortname": "DateHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "date",
            "namespace": "",
            "file": "build/src/date/date-helper.js",
            "line": 12,
            "description": "The static DateHelper utility.",
            "static": 1
        },
        "DateHelperSpec": {
            "name": "DateHelperSpec",
            "shortname": "DateHelperSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "data",
            "namespace": "",
            "file": "build/src/date/date-helper.spec.js",
            "line": 5,
            "description": "The {{#crossLink \"DateHelper\"}}{{/crossLink}} validator."
        },
        "ErrorComponent": {
            "name": "ErrorComponent",
            "shortname": "ErrorComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "error",
            "namespace": "",
            "file": "build/src/error/error.component.ts",
            "line": 15,
            "description": "The error component. This component consists of a template and\nthe `error` input string."
        },
        "FileServiceSpec": {
            "name": "FileServiceSpec",
            "shortname": "FileServiceSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "file",
            "namespace": "",
            "file": "build/src/file/file.service.spec.js",
            "line": 11,
            "description": "The {{#crossLink \"FileService\"}}{{/crossLink}} validator."
        },
        "FileService": {
            "name": "FileService",
            "shortname": "FileService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "file",
            "namespace": "",
            "file": "build/src/file/file.service.ts",
            "line": 15,
            "description": "The file access service."
        },
        "HelpComponent": {
            "name": "HelpComponent",
            "shortname": "HelpComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "help",
            "namespace": "",
            "file": "build/src/help/help.component.ts",
            "line": 10,
            "description": "The help panel component."
        },
        "HelpService": {
            "name": "HelpService",
            "shortname": "HelpService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "help",
            "namespace": "",
            "file": "build/src/help/help.service.ts",
            "line": 5,
            "description": "This service encapsulates the `showHelp` flag."
        },
        "ToggleHelpComponent": {
            "name": "ToggleHelpComponent",
            "shortname": "ToggleHelpComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "help",
            "namespace": "",
            "file": "build/src/help/toggle-help.component.ts",
            "line": 10,
            "description": "The help toggle button component."
        },
        "HomeComponent": {
            "name": "HomeComponent",
            "shortname": "HomeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "home",
            "namespace": "",
            "file": "build/src/home/home.component.ts",
            "line": 9,
            "description": "The home button component."
        },
        "ImageStore": {
            "name": "ImageStore",
            "shortname": "ImageStore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/image/image-store.js",
            "line": 5,
            "description": "The ImageStore service.\nThis service is an abstract image store provider which delegates\nto the application image store implementation. This default\nimplementation delegates to the Xnat service. A site can adapt\nthis service to its own image store manager by replacing Xnat\nwith its own service.",
            "static": 1
        },
        "ImageComponent": {
            "name": "ImageComponent",
            "shortname": "ImageComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/image/image.component.ts",
            "line": 13,
            "description": "The image display component."
        },
        "Image": {
            "name": "Image",
            "shortname": "Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/image/image.data.js",
            "line": 2,
            "description": "The Image REST data object extension service utility.",
            "static": 1
        },
        "ImageModule": {
            "name": "ImageModule",
            "shortname": "ImageModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/image/image.module.ts",
            "line": 20,
            "description": "The image module metadata."
        },
        "PapayaService": {
            "name": "PapayaService",
            "shortname": "PapayaService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/image/papaya.service.ts",
            "line": 9,
            "description": "The Papaya facade service."
        },
        "XNAT": {
            "name": "XNAT",
            "shortname": "XNAT",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/image/xnat.js",
            "line": 42,
            "description": "The XNAT helper utility.",
            "static": 1
        },
        "XNATSpec": {
            "name": "XNATSpec",
            "shortname": "XNATSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/image/xnat.spec.js",
            "line": 5,
            "description": "The {{#crossLink \"XNAT\"}}{{/crossLink}} validator."
        },
        "AppComponent": {
            "name": "AppComponent",
            "shortname": "AppComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "image",
            "namespace": "",
            "file": "build/src/main/app.component.ts",
            "line": 11,
            "description": "The boot entry point.\n\nThis component initializes the application as follows:\n* Define the main `<qi-app></qi-app>` HTML body context.\n* Clear the help pane on each route transition."
        },
        "AppModule": {
            "name": "AppModule",
            "shortname": "AppModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "main",
            "namespace": "",
            "file": "build/src/main/app.module.ts",
            "line": 63,
            "description": "The global module metadata."
        },
        "ObjectHelper": {
            "name": "ObjectHelper",
            "shortname": "ObjectHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "testing",
            "namespace": "",
            "file": "build/src/testing/object.js",
            "line": 2,
            "description": "The Function test helper.",
            "static": 1
        },
        "PageComponent": {
            "name": "PageComponent",
            "shortname": "PageComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "build/src/page/page.component.ts",
            "line": 1,
            "description": "The abstract page component base class. A *page component* is\na component with a distinct url location and HTML page.",
            "abstract": ""
        },
        "PageModule": {
            "name": "PageModule",
            "shortname": "PageModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "build/src/page/page.module.ts",
            "line": 54,
            "description": "The page module metadata."
        },
        "ProjectsHelpTextComponent": {
            "name": "ProjectsHelpTextComponent",
            "shortname": "ProjectsHelpTextComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "build/src/projects/help-text.component.ts",
            "line": 10,
            "description": "The projects help text component."
        },
        "ProjectsHelpComponent": {
            "name": "ProjectsHelpComponent",
            "shortname": "ProjectsHelpComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "build/src/projects/help.component.ts",
            "line": 10,
            "description": "The Projects List help panel component. This component is\nadapted from the standard\n{{#crossLink \"HelpComponent\"}}{{/crossLink}}\nbut with a child\n{{#crossLink \"ProjectsHelpTextComponent\"}}{{/crossLink}}\nrather than a `help` input variable. This is done in order\nto allow for the pronunciation button click action, which is\ndisabled by Angular when the standard help component includes\nthe help string variable as inner HTML."
        },
        "ProjectItemComponent": {
            "name": "ProjectItemComponent",
            "shortname": "ProjectItemComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "build/src/projects/project-item.component.ts",
            "line": 9,
            "description": "The Projects List project item component"
        },
        "ProjectsServiceStub": {
            "name": "ProjectsServiceStub",
            "shortname": "ProjectsServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "projects",
            "namespace": "",
            "file": "build/src/projects/projects.component.spec.ts",
            "line": 11,
            "description": "The test mock for a {{#crossLink \"ProjectsService\"}}{{/crossLink}}."
        },
        "ProjectsHelpServiceStub": {
            "name": "ProjectsHelpServiceStub",
            "shortname": "ProjectsHelpServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "projects",
            "namespace": "",
            "file": "build/src/projects/projects.component.spec.ts",
            "line": 34,
            "description": "The stunt showHelp flag service."
        },
        "ProjectsComponentSpec": {
            "name": "ProjectsComponentSpec",
            "shortname": "ProjectsComponentSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "projects",
            "namespace": "",
            "file": "build/src/projects/projects.component.spec.ts",
            "line": 69,
            "description": "The {{#crossLink \"ProjectsComponent\"}}{{/crossLink}} validator.\nThis test validates that the projects are listed in sort order."
        },
        "ProjectsComponent": {
            "name": "ProjectsComponent",
            "shortname": "ProjectsComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "projects",
            "namespace": "",
            "file": "build/src/projects/projects.component.ts",
            "line": 21,
            "description": "The Project List main component."
        },
        "ProjectListPage": {
            "name": "ProjectListPage",
            "shortname": "ProjectListPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "projects",
            "namespace": "",
            "file": "build/src/projects/projects.e2e-spec.js",
            "line": 14,
            "description": "The Project List E2E page encapsulation."
        },
        "ProjectListSpec": {
            "name": "ProjectListSpec",
            "shortname": "ProjectListSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "projects",
            "namespace": "",
            "file": "build/src/projects/projects.e2e-spec.js",
            "line": 75,
            "description": "The Project List E2E validator."
        },
        "ProjectsModule": {
            "name": "ProjectsModule",
            "shortname": "ProjectsModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "projects",
            "namespace": "",
            "file": "build/src/projects/projects.module.ts",
            "line": 35,
            "description": "The projects module metadata."
        },
        "ProjectsResource": {
            "name": "ProjectsResource",
            "shortname": "ProjectsResource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "project",
            "namespace": "",
            "file": "build/src/projects/projects.resource.ts",
            "line": 9,
            "description": "The project REST resource."
        },
        "ProjectsService": {
            "name": "ProjectsService",
            "shortname": "ProjectsService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "project",
            "namespace": "",
            "file": "build/src/projects/projects.service.ts",
            "line": 14,
            "description": "The project data access service."
        },
        "REST": {
            "name": "REST",
            "shortname": "REST",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "rest",
            "namespace": "",
            "file": "build/src/rest/rest.js",
            "line": 5,
            "description": "REST utility functions."
        },
        "RestResource": {
            "name": "RestResource",
            "shortname": "RestResource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "rest",
            "namespace": "",
            "file": "build/src/rest/rest.resource.ts",
            "line": 26,
            "description": "The abstract base class for a REST resource. The request\nurl is always `/qirest`. The subclass is required to augment\nthe `@ResourceParams` with a path."
        },
        "RESTSpec": {
            "name": "RESTSpec",
            "shortname": "RESTSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "rest",
            "namespace": "",
            "file": "build/src/rest/rest.spec.js",
            "line": 4,
            "description": "The {{#crossLink \"REST\"}}{{/crossLink}} validator."
        },
        "Roman": {
            "name": "Roman",
            "shortname": "Roman",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "roman",
            "namespace": "",
            "file": "build/src/roman/roman.js",
            "line": 115,
            "description": "The static Roman utility.\nProvides the `romanize`  function to convert between an\ninteger and a roman numeral.\n\nThis module is freely adapted from the suggestions offered at\nhttp://stackoverflow.com/questions/9083037/convert-a-number-into-a-roman-numeral-in-javascript.",
            "static": 1
        },
        "RomanSpec": {
            "name": "RomanSpec",
            "shortname": "RomanSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "roman",
            "namespace": "",
            "file": "build/src/roman/roman.spec.js",
            "line": 5,
            "description": "{{#crossLink \"Roman\"}}{{/crossLink}} validator."
        },
        "ImageSequence": {
            "name": "ImageSequence",
            "shortname": "ImageSequence",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/image-sequence.data.js",
            "line": 6,
            "description": "The ImageSequence REST data object extension utility."
        },
        "ImageSequenceSpec": {
            "name": "ImageSequenceSpec",
            "shortname": "ImageSequenceSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/image-sequence.data.spec.js",
            "line": 5,
            "description": "The {{#crossLink \"ImageSequence\"}}{{/crossLink}} validator."
        },
        "ImageSequenceSessionServiceStub": {
            "name": "ImageSequenceSessionServiceStub",
            "shortname": "ImageSequenceSessionServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "imageSequence",
            "namespace": "",
            "file": "build/src/session/image-sequence.service.spec.ts",
            "line": 24,
            "description": "The test mock for a `SessionService`."
        },
        "ImageSequenceServiceSpec": {
            "name": "ImageSequenceServiceSpec",
            "shortname": "ImageSequenceServiceSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "imageSequence",
            "namespace": "",
            "file": "build/src/session/image-sequence.service.spec.ts",
            "line": 41,
            "description": "The {{#crossLink \"ImageSequenceService\"}}{{/crossLink}} validator."
        },
        "IamgeSequenceService": {
            "name": "IamgeSequenceService",
            "shortname": "IamgeSequenceService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "imageSequence",
            "namespace": "",
            "file": "build/src/session/image-sequence.service.ts",
            "line": 13,
            "description": "The IamgeSequenceService data access service."
        },
        "LabelMap": {
            "name": "LabelMap",
            "shortname": "LabelMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/modeling.data.js",
            "line": 94,
            "description": "The modeling LabelMap REST data object extension utility."
        },
        "ParameterResult": {
            "name": "ParameterResult",
            "shortname": "ParameterResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/modeling.data.js",
            "line": 130,
            "description": "The modeling ParameterResult REST data object extension utility."
        },
        "ModelingResult": {
            "name": "ModelingResult",
            "shortname": "ModelingResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/modeling.data.js",
            "line": 193,
            "description": "The ModelingResult REST data object extension utility."
        },
        "Modeling": {
            "name": "Modeling",
            "shortname": "Modeling",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/modeling.data.js",
            "line": 227,
            "description": "The Modeling REST data object extension utility."
        },
        "Registration": {
            "name": "Registration",
            "shortname": "Registration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/registration.data.js",
            "line": 5,
            "description": "The Registration REST data object extension utility."
        },
        "RegistrationSpec": {
            "name": "RegistrationSpec",
            "shortname": "RegistrationSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/registration.data.spec.js",
            "line": 6,
            "description": "The {{#crossLink \"Registration\"}}{{/crossLink}} validator."
        },
        "Scan": {
            "name": "Scan",
            "shortname": "Scan",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/scan.data.js",
            "line": 6,
            "description": "The Scan REST data object extension utility."
        },
        "ScanSpec": {
            "name": "ScanSpec",
            "shortname": "ScanSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/scan.data.spec.js",
            "line": 5,
            "description": "The {{#crossLink \"Scan\"}}{{/crossLink}} validator."
        },
        "SessionDetailResource": {
            "name": "SessionDetailResource",
            "shortname": "SessionDetailResource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session-detail.resource.ts",
            "line": 9,
            "description": "The session detail REST resource."
        },
        "SessionServiceStub": {
            "name": "SessionServiceStub",
            "shortname": "SessionServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.component.spec.ts",
            "line": 11,
            "description": "The stunt {{#crossLink \"SessionService\"}}{{/crossLink}}."
        },
        "SessiondRouterStub": {
            "name": "SessiondRouterStub",
            "shortname": "SessiondRouterStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.component.spec.ts",
            "line": 44,
            "description": "The stunt router."
        },
        "SessionActivatedRouteStub": {
            "name": "SessionActivatedRouteStub",
            "shortname": "SessionActivatedRouteStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.component.spec.ts",
            "line": 53,
            "description": "The stunt route."
        },
        "SubjectChangeDetectorRefStub": {
            "name": "SubjectChangeDetectorRefStub",
            "shortname": "SubjectChangeDetectorRefStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 68,
            "description": "The stunt change detector."
        },
        "SessionComponentSpec": {
            "name": "SessionComponentSpec",
            "shortname": "SessionComponentSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.component.spec.ts",
            "line": 82,
            "description": "The {{#crossLink \"SessionComponent\"}}{{/crossLink}} validator."
        },
        "SessionComponent": {
            "name": "SessionComponent",
            "shortname": "SessionComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.component.ts",
            "line": 18,
            "description": "The Session Detail page main component."
        },
        "Session": {
            "name": "Session",
            "shortname": "Session",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.data.js",
            "line": 56,
            "description": "The Session REST data object extension utility."
        },
        "SessionTumorExtent": {
            "name": "SessionTumorExtent",
            "shortname": "SessionTumorExtent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.data.js",
            "line": 111,
            "description": "The measured scan tumor length, width and depth."
        },
        "SessionSpec": {
            "name": "SessionSpec",
            "shortname": "SessionSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.data.spec.js",
            "line": 6,
            "description": "The {{#crossLink \"Session\"}}{{/crossLink}} validator.\n\nNote: image load cannot be unit-tested, since it requires an\n  active browser."
        },
        "SessionModule": {
            "name": "SessionModule",
            "shortname": "SessionModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.module.ts",
            "line": 32,
            "description": "The session module metadata."
        },
        "SessionSubjectResourceStub": {
            "name": "SessionSubjectResourceStub",
            "shortname": "SessionSubjectResourceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.service.spec.ts",
            "line": 39,
            "description": "The stunt {{#crossLink \"SubjectResource\"}}{{/crossLink}."
        },
        "SessionDetailResourceStub": {
            "name": "SessionDetailResourceStub",
            "shortname": "SessionDetailResourceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.service.spec.ts",
            "line": 62,
            "description": "The stunt {{#crossLink \"SessionDetailResource\"}}{{/crossLink}}."
        },
        "SessionServiceSpec": {
            "name": "SessionServiceSpec",
            "shortname": "SessionServiceSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.service.spec.ts",
            "line": 85,
            "description": "The {{#crossLink \"SessionService\"}}{{/crossLink}} validator."
        },
        "SessionService": {
            "name": "SessionService",
            "shortname": "SessionService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/session.service.ts",
            "line": 10,
            "description": "The session data access service."
        },
        "TimeSeries": {
            "name": "TimeSeries",
            "shortname": "TimeSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "session",
            "namespace": "",
            "file": "build/src/session/time-series.data.js",
            "line": 47,
            "description": "The TimeSeries REST data object extension utility."
        },
        "StringHelper": {
            "name": "StringHelper",
            "shortname": "StringHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "string",
            "namespace": "",
            "file": "build/src/string/string-helper.js",
            "line": 12,
            "description": "The static StringHelper utility.",
            "static": 1
        },
        "StringHelperSpec": {
            "name": "StringHelperSpec",
            "shortname": "StringHelperSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "string",
            "namespace": "",
            "file": "build/src/string/string-helper.spec.js",
            "line": 4,
            "description": "The {{#crossLink \"StringHelper\"}}{{/crossLink}} validator."
        },
        "Encounter": {
            "name": "Encounter",
            "shortname": "Encounter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/encounter.data.js",
            "line": 2,
            "description": "The Encounter REST data object extension utility."
        },
        "SubjectServiceStub": {
            "name": "SubjectServiceStub",
            "shortname": "SubjectServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 11,
            "description": "The stunt {{#crossLink \"SubjectService\"}}{{/crossLink}}."
        },
        "SubjectdRouterStub": {
            "name": "SubjectdRouterStub",
            "shortname": "SubjectdRouterStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 43,
            "description": "The stunt router."
        },
        "SubjectActivatedRouteStub": {
            "name": "SubjectActivatedRouteStub",
            "shortname": "SubjectActivatedRouteStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 52,
            "description": "The stunt route."
        },
        "SubjectComponentSpec": {
            "name": "SubjectComponentSpec",
            "shortname": "SubjectComponentSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 78,
            "description": "The {{#crossLink \"SubjectComponent\"}}{{/crossLink}} validator."
        },
        "SubjectComponent": {
            "name": "SubjectComponent",
            "shortname": "SubjectComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.component.ts",
            "line": 43,
            "description": "The Subject Detail page component."
        },
        "ModelingResults": {
            "name": "ModelingResults",
            "shortname": "ModelingResults",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.data.js",
            "line": 70,
            "description": "The Subject modeling results."
        },
        "Subject": {
            "name": "Subject",
            "shortname": "Subject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.data.js",
            "line": 134,
            "description": "The Subject REST data object extension utility."
        },
        "SubjectSpec": {
            "name": "SubjectSpec",
            "shortname": "SubjectSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.data.spec.js",
            "line": 7,
            "description": "The {{#crossLink \"Subject\"}}{{/crossLink}} validator.\n\nNote: image load cannot be unit-tested, since it requires an\n  active browser."
        },
        "SubjectModule": {
            "name": "SubjectModule",
            "shortname": "SubjectModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.module.ts",
            "line": 46,
            "description": "The subject module metadata."
        },
        "SubjectResource": {
            "name": "SubjectResource",
            "shortname": "SubjectResource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.resource.ts",
            "line": 9,
            "description": "The subject REST resource."
        },
        "SubjectResourceStub": {
            "name": "SubjectResourceStub",
            "shortname": "SubjectResourceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.service.spec.ts",
            "line": 10,
            "description": "The test mock for a `SubjectResource`."
        },
        "SubjectServiceSpec": {
            "name": "SubjectServiceSpec",
            "shortname": "SubjectServiceSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.service.spec.ts",
            "line": 48,
            "description": "The {{#crossLink \"SubjectService\"}}{{/crossLink}} validator."
        },
        "SubjectService": {
            "name": "SubjectService",
            "shortname": "SubjectService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "subject",
            "namespace": "",
            "file": "build/src/subject/subject.service.ts",
            "line": 11,
            "description": "The Subject data access service."
        },
        "Findable": {
            "name": "Findable",
            "shortname": "Findable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "testing",
            "namespace": "",
            "file": "build/src/testing/findable.js",
            "line": 17,
            "description": "The WebElement extension for finding subelements."
        },
        "Table": {
            "name": "Table",
            "shortname": "Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "testing",
            "namespace": "",
            "file": "build/src/testing/findable.js",
            "line": 413,
            "description": "The Table class represents a table WebElement with the\nfollowing properties:\n\n* header - a promise resolving to the array of `<th/>`\n  WebElement text values\n\n* rows - a promise resolving to the two-dimensional\n  `<tr/> x <td/>` cell value array\n\nThe header values can be either in a separate `thead`\nrow or as the leading `th` element in each `tbody` row,\ne.g.:\n\n    <table id=\"t01\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Gender</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>John</td>\n          <td>Male</td>\n        </tr>\n      </tbody>\n    </table>\n\nor:\n\n    <table id=\"t02\">\n      <tbody>\n        <tr>\n          <th>Name</th>\n          <td>John</td>\n        </tr>\n        <tr>\n          <th>Gender</th>\n          <td>Male</td>\n        </tr>\n      </tbody>\n    </table>\n\nIn the both cases, the Table *heading* resolves to\n['Name', 'Gender']. In the first case, the Table\n*rows* resolves to [['John', 'Male]]. In the second\ncase, the Table *rows* resolves to [['John'], ['Male]].\n\nIf this table contains a `<tbody/>` subelement, then this\nproperty includes the rows in the first such body\nsubelement. Otherwise, this methods returns all `<tr/>`\nrows contained in the table.\n\nNote - If there are multiple `<tbody/>` elements in the\n  table, only the rows of the first `<tbody>` are returned.\n\nNote - The rows of nested `<table/>` elements are returned\n  along with the parent rows.\n\nTODO - address the above two notes by adding a Table\n  subTables property for subtables and include only the\n  direct rows in a parent Table.\n\nNote - The Table class is not defined in it's own file\n  because there is a cyclical Findable dependency."
        },
        "Page": {
            "name": "Page",
            "shortname": "Page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "testing",
            "namespace": "",
            "file": "build/src/testing/page.js",
            "line": 26,
            "description": "The E2E page base encapsulation. Page folows the PageObject pattern\n(https://code.google.com/p/selenium/wiki/PageObjects). If the Page\nis instantiated with an url argument, then the given url is visited.\nThe Page class has accessors for the common qiprofile layout elements,\ne.g. the billboard text and help pane.\n\nPage is intended to encapsulate structural HTML access. Extend Page\nfor each partial to be tested. Each Page accessor function should\nvalidate that an element which should always be present exists,\nbut should not validate that the element content reflects the model.\nElement content validation is the responsibility of the Mocha 'it'\nclauses.",
            "example": [
                "\n    Page = require '../testing/page'\n    class LoginPage extends Page\n      constructor: ->\n        super('/login.html')\n      ...\n    login = new LoginPage()\n    expect(login.billboard).to.eventually.equal('Login')"
            ]
        },
        "ColorBarDirective": {
            "name": "ColorBarDirective",
            "shortname": "ColorBarDirective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "testing",
            "namespace": "",
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 11,
            "description": "Draws an interpolated color bar. The data points\nare mapped into the\n(Inferno)[https://github.com/d3/d3-scale/blob/master/README.md#interpolateInferno]\ncolor spectrum."
        },
        "CorrelationComponent": {
            "name": "CorrelationComponent",
            "shortname": "CorrelationComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "visualization",
            "namespace": "",
            "file": "build/src/visualization/correlation.component.ts",
            "line": 11,
            "description": "The correlation component coordinates X, Y property selection\nand data series display."
        },
        "ScatterPlotDirective": {
            "name": "ScatterPlotDirective",
            "shortname": "ScatterPlotDirective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "visualization",
            "namespace": "",
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 17,
            "description": "Draws a D3 scatter plot. The\n{{#crossLink \"ScatterPlotDirective/data:property\"}}{{/crossLink}}\ninput, optionally filtered by the\n{{#crossLink \"ScatterPlotDirective/selection:property\"}}{{/crossLink}},\nis the domain used to acquire the\n{{#crossLink \"ScatterPlotDirective/x:property\"}}{{/crossLink}}\nand\n{{#crossLink \"ScatterPlotDirective/y:property\"}}{{/crossLink}},\ndata points."
        },
        "SparkLineDirective": {
            "name": "SparkLineDirective",
            "shortname": "SparkLineDirective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "visualization",
            "namespace": "",
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 12,
            "description": "Draws a D3 spark line which plots a uniform sequential\none-based index vs values. The X values are the discrete\none-based\n{{#crossLink \"SparkLineDirective/data:property\"}}{{/crossLink}}\nindexes. The\n{{#crossLink \"SparkLineDirective/data:property\"}}{{/crossLink}}\nitems are the Y axis data points."
        },
        "VisualizationModule": {
            "name": "VisualizationModule",
            "shortname": "VisualizationModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "visualization",
            "namespace": "",
            "file": "build/src/visualization/visualization.module.ts",
            "line": 31,
            "description": "The visualization module metadata."
        },
        "VolumeComponent": {
            "name": "VolumeComponent",
            "shortname": "VolumeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.component.ts",
            "line": 21,
            "description": "The Volume main component.",
            "extends": "PageComponent"
        },
        "Volume": {
            "name": "Volume",
            "shortname": "Volume",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.data.js",
            "line": 6,
            "description": "The Volume REST data object extension utility.",
            "static": 1
        },
        "VolumeSpec": {
            "name": "VolumeSpec",
            "shortname": "VolumeSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.data.spec.js",
            "line": 5,
            "description": "The {{#crossLink \"Volume\"}}{{/crossLink}} validator."
        },
        "VolumeDetailPage": {
            "name": "VolumeDetailPage",
            "shortname": "VolumeDetailPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.e2e-spec.js",
            "line": 13,
            "description": "The Volume Detail E2E page encapsulation."
        },
        "VolumeModule": {
            "name": "VolumeModule",
            "shortname": "VolumeModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.module.ts",
            "line": 36,
            "description": "The volume module metadata."
        },
        "VolumeImageSequenceServiceStub": {
            "name": "VolumeImageSequenceServiceStub",
            "shortname": "VolumeImageSequenceServiceStub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.service.spec.ts",
            "line": 25,
            "description": "The test mock for an\n{{#crossLink \"ImageSequenceService\"}}{{/crossLink}}."
        },
        "VolumeServiceSpec": {
            "name": "VolumeServiceSpec",
            "shortname": "VolumeServiceSpec",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.service.spec.ts",
            "line": 43,
            "description": "The {{#crossLink \"VolumeService\"}}{{/crossLink}} validator."
        },
        "VolumeService": {
            "name": "VolumeService",
            "shortname": "VolumeService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "volume",
            "namespace": "",
            "file": "build/src/volume/volume.service.ts",
            "line": 10,
            "description": "The volume data access service."
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "build/src/clinical/breast.js",
            "line": 116,
            "description": "The breast cancer grade determinants, consisting of the\nfollowing properties:\n* *RANGES* - the three grade score ranges, as follows:\n  - Grade 1: score 3,5\n  - Grade 2: score 6,7\n  - Grade 3: score 8,9\n* *SCORES* - the grade score factor properties\n  `tubularFormation`, `mitoticCount` and `nuclearPleomorphism`",
            "itemtype": "property",
            "name": "Grade",
            "static": 1,
            "class": "Breast",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/breast.js",
            "line": 134,
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "encounter",
                    "description": "the Breast patient clinical encounter"
                }
            ],
            "return": {
                "description": "the augmented clinical encounter object"
            },
            "class": "Breast",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/encounter.data.js",
            "line": 16,
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "encounter",
                    "description": "the clinical encounter"
                },
                {
                    "name": "subject",
                    "description": "the parent subject REST object"
                }
            ],
            "return": {
                "description": "the augmented clinical encounter object"
            },
            "class": "ClinicalEncounter",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/encounter.data.js",
            "line": 24,
            "itemtype": "method",
            "name": "isBiopsy",
            "return": {
                "description": "whether the encounter class is `Biopsy`"
            },
            "class": "ClinicalEncounter",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/encounter.data.js",
            "line": 32,
            "itemtype": "method",
            "name": "isSurgery",
            "return": {
                "description": "whether the encounter class ends in `Surgery`"
            },
            "class": "ClinicalEncounter",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/encounter.data.js",
            "line": 41,
            "description": "'Surgery' for a surgery encounter,\n otherwise the encounter class",
            "itemtype": "property",
            "name": "title",
            "class": "ClinicalEncounter",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/pathology.data.js",
            "line": 16,
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "pathology",
                    "description": "the pathology REST object"
                }
            ],
            "return": {
                "description": "the augmented pathology object"
            },
            "class": "Pathology",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/pathology.data.js",
            "line": 40,
            "description": "The largest TNM tumor size over all tumors.",
            "itemtype": "property",
            "name": "tumorSize",
            "class": "Pathology",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/pathology.data.js",
            "line": 51,
            "description": "The aggregate tumor length over all tumors.",
            "itemtype": "property",
            "name": "tumorLength",
            "class": "Pathology",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/sarcoma.js",
            "line": 22,
            "description": "The sarcoma cancer grade determinants, consisting of the\nfollowing properties:\n* _RANGES_ - the three grade score ranges, as follows:\n  - Grade 1: score 2,3\n  - Grade 2: score 4,5\n  - Grade 3: score 6,8\n* _SCORES_ - the grade score factor properties\n  `differentiation`, `mitoticCount` and `necrosisScore`",
            "itemtype": "property",
            "name": "Grade",
            "static": 1,
            "class": "Sarcoma",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/sarcoma.js",
            "line": 40,
            "itemtype": "method",
            "name": "stageExtent",
            "return": {
                "description": "the sorted stage values"
            },
            "class": "Sarcoma",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/sarcoma.js",
            "line": 48,
            "description": "Returns the cancer stage.\n\nIf metastasis exists (M1), then the stage is 4.\nOtherwise, the stage is determined by T and N scores as\ndefined in the tumor type factory STAGES associative\nlookup table.",
            "itemtype": "method",
            "name": "stage",
            "params": [
                {
                    "name": "tnm",
                    "description": "the TNM object"
                },
                {
                    "name": "summaryGrade",
                    "description": "the summary grade (1 to 3)"
                }
            ],
            "return": {
                "description": "the cancer stage object, as described in tnm.coffee\n   stage"
            },
            "class": "Sarcoma",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm-size.pipe.ts",
            "line": 5,
            "description": "Formats the database TNM size object to a display value.",
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm-size.pipe.ts",
            "line": 13,
            "description": "Formats the size of the input TNM size object for display.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the TNM size input",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the size display string",
                "type": "String"
            },
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm-stage.pipe.ts",
            "line": 5,
            "description": "Formats the database TNM object to a stage display value.",
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm-stage.pipe.ts",
            "line": 13,
            "description": "Computes the stage of the input TNM object for display.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the TNM input",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the stage display string",
                "type": "String"
            },
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm.js",
            "line": 22,
            "itemtype": "method",
            "name": "tumorTypeService",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "tumorType",
                    "description": "the tumor type name, e.g. 'Breast'"
                }
            ],
            "return": {
                "description": "the tumorTypeService factory for that tumor type"
            },
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm.js",
            "line": 37,
            "description": "Calculates the cumulative grade as the sum of the component\ntumor type factory SCORES property values.",
            "itemtype": "method",
            "name": "cumulativeGrade",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "tnm",
                    "description": "the TNM object"
                }
            ],
            "return": {
                "description": "the cumulative grade, or null if a score is missing"
            },
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm.js",
            "line": 93,
            "itemtype": "method",
            "name": "formatSize",
            "params": [
                {
                    "name": "size",
                    "description": "the size composite object"
                }
            ],
            "return": {
                "description": "the standard size string, e.g. 'p2b'"
            },
            "throws": {
                "description": "Error if the tumorSize property value is missing"
            },
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm.js",
            "line": 128,
            "description": "Calculates the summary grade based on the cumulative grade\nas defined in the tumor type factory RANGES lookup table.",
            "itemtype": "method",
            "name": "summaryGrade",
            "params": [
                {
                    "name": "grade",
                    "description": "the grade composite object"
                }
            ],
            "return": {
                "description": "the summary grade"
            },
            "throws": {
                "description": "ReferenceError if the grade scores are not supported"
            },
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/clinical/tnm.js",
            "line": 139,
            "description": "Calculates the tumor stage for the given TNM composite\nobject.\n\nThis function returns the cancer stage as a string\nconsisting of a digit in the range 1 to 4 optionally\nfollowed by a suffix A, B or C. This facilitates\naccurate comparison, in contrast to the roman numeral\ngrade, e.g. '1A' < '2B' , but 'IA' > 'IIB'.\nThe romanize filter can be used to display the stage\nin the standard archaic medical format.",
            "itemtype": "method",
            "name": "stage",
            "params": [
                {
                    "name": "tnm",
                    "description": "the TNM object."
                }
            ],
            "return": {
                "description": "the cancer stage object"
            },
            "class": "TNM",
            "module": "clinical"
        },
        {
            "file": "build/src/collection/collection.component.spec.ts",
            "line": 18,
            "itemtype": "method",
            "name": "getSubjects",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the mock collection objects sequence",
                "type": "Observable"
            },
            "class": "CollectionSubectServiceStub",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.spec.ts",
            "line": 46,
            "description": "The hard-coded stunt route params.",
            "itemtype": "property",
            "name": "params",
            "type": "Observable<Object>",
            "class": "CollectionActivatedRouteStub",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.spec.ts",
            "line": 67,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(CollectionComponent, SubectService)"
                }
            ],
            "class": "CollectionComponentSpec",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 34,
            "description": "The project name.",
            "itemtype": "property",
            "name": "project",
            "type": "String",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 41,
            "description": "The collection name.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 48,
            "description": "The subject session objects.",
            "itemtype": "property",
            "name": "sessions",
            "type": "Object[]",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 55,
            "description": "The session display state array (or null to display\nall session data).",
            "itemtype": "property",
            "name": "domainSelection",
            "type": "Boolean[]",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 63,
            "description": "The data => symbol type method.",
            "itemtype": "property",
            "name": "symbolType",
            "type": "(d: Object) => string",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 70,
            "description": "The sessions chart margin is scooched down to allow room\nfor the Y axis label at the top.",
            "itemtype": "property",
            "name": "sessionsChartMargin",
            "type": "Number[]",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 78,
            "description": "The subject vs visit day sessions chart {x, y, height}\nconfiguration. The X and Y values are constants.\nThe height is determined after the sessions are fetched\nfrom the database, alloting 24 pixels per subject.",
            "itemtype": "property",
            "name": "sessionsChart",
            "type": "Object",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 91,
            "description": "The axis callback sets the axis label and ticks.",
            "itemtype": "method",
            "name": "_onAxis",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "property",
                    "description": "the axis property",
                    "type": "String"
                },
                {
                    "name": "axis",
                    "description": "the D3 axis object",
                    "type": "Object"
                }
            ],
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 105,
            "description": "The correlation chart height apportions the remainder\nof the usable real estate.",
            "itemtype": "property",
            "name": "correlationChartHeight",
            "type": "Number",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 113,
            "description": "The initial correlation chart {x, y} [[topic, label], ...] array,\none item per chart.",
            "itemtype": "property",
            "name": "correlations",
            "type": "Object[]",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 121,
            "description": "The {topic: {label: path}} correlation choices.",
            "itemtype": "property",
            "name": "propertyChoices",
            "type": "Object",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 128,
            "description": "The discrete property {path: {value: label}} tick label choices.",
            "itemtype": "property",
            "name": "valueChoices",
            "type": "Object",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 135,
            "description": "The subject objects.",
            "itemtype": "property",
            "name": "subjects",
            "type": "Object[]",
            "access": "private",
            "tagname": "",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 143,
            "description": "The {path: domain} associative object for the displayable\nproperties.",
            "itemtype": "property",
            "name": "domains",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 151,
            "description": "Flag indicating whether the domain selection is\nbased on the subject checkboxes.",
            "itemtype": "property",
            "name": "isCheckboxSelection",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 160,
            "description": "The properties to exclude.",
            "itemtype": "property",
            "name": "exclude",
            "type": "String[]",
            "access": "private",
            "tagname": "",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 168,
            "description": "The SVG element.",
            "itemtype": "property",
            "name": "svg",
            "type": "d3.Selection<any>",
            "access": "private",
            "tagname": "",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 176,
            "description": "The tick values for a subject number axis.",
            "itemtype": "property",
            "name": "subjectAxisTickValues",
            "access": "private",
            "tagname": "",
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 214,
            "description": "The symbol is specific to the session number.",
            "itemtype": "method",
            "name": "symbolType",
            "params": [
                {
                    "name": "d",
                    "description": "the session object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the session number symbol type",
                "type": "String"
            },
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 225,
            "description": "The session chart callback adds axis labels and subject\nhyperlinks.",
            "itemtype": "method",
            "name": "onSessionsChartPlotted",
            "params": [
                {
                    "name": "svg",
                    "description": "the root SVG group D3 selection",
                    "type": "Object"
                }
            ],
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 295,
            "description": "Relays a brush selection to all charts.",
            "itemtype": "method",
            "name": "onBrushSelect",
            "params": [
                {
                    "name": "selection",
                    "description": "the selection state array",
                    "type": "Boolean[]"
                }
            ],
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 312,
            "description": "Delegates to\n{{#crossLink \"ConfigurationService/getTextLabel\"}}{{/crossLink}},",
            "itemtype": "method",
            "name": "getLabel",
            "params": [
                {
                    "name": "property",
                    "description": "the property path",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display text label",
                "type": "String"
            },
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 324,
            "description": "Returns the D3 symbol type for the given data.",
            "itemtype": "method",
            "name": "symbolType",
            "params": [
                {
                    "name": "d",
                    "description": "the session object",
                    "type": "Object"
                }
            ],
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 335,
            "description": "Opens the Subect Detail page.",
            "itemtype": "method",
            "name": "visitSubject",
            "params": [
                {
                    "name": "subjectNbr",
                    "description": "the subject number",
                    "type": "Number"
                }
            ],
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 390,
            "description": "Makes the initial correlation [[topic, label], ...]\nconfiguration from the preferences configuration [Correlation]\nsection x and y entries.",
            "itemtype": "method",
            "name": "initialCorrelationChoices",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "the correlation choices",
                "type": "String[][]"
            },
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 463,
            "itemtype": "method",
            "name": "createCorrelationConfiguration",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "the chartable property configuration",
                "type": "Object"
            },
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 524,
            "description": "Returns the {path: label} object for those paths which\nhave a valid value. A path with an object value is recursively\nexpanded to include child paths.",
            "itemtype": "method",
            "name": "expand",
            "params": [
                {
                    "name": "paths",
                    "description": "the object whose keys are the starting paths",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the {path: label} lookup",
                "type": "Object"
            },
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 590,
            "description": "Concatenates the parent path to the given key as follows:\n* If there is not a path or the path is `this`, then return the key\n* Otherwise, if the key is numeric, then return _path_`[`_key_`]`\n* Otherwise, return _path_`.`_key_",
            "itemtype": "method",
            "name": "concatPath",
            "params": [
                {
                    "name": "key",
                    "description": "the accessor",
                    "type": "String|number"
                },
                {
                    "name": "path",
                    "description": "the optional parent property path",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the concatenated path",
                "type": "String"
            },
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collection/collection.component.ts",
            "line": 610,
            "description": "This axis callback sets the X axis Day tick interval to 10 rather\nthan the default 5.",
            "itemtype": "method",
            "name": "_onSessionsChartAxis",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "property",
                    "description": "the axis property",
                    "type": "String"
                },
                {
                    "name": "axis",
                    "description": "the D3 axis object",
                    "type": "Object"
                }
            ],
            "class": "CollectionComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collections/collection-item.component.ts",
            "line": 19,
            "description": "Opens the Collection Info page.",
            "itemtype": "method",
            "name": "visitInfo",
            "class": "CollectionItemComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collections/collection-item.component.ts",
            "line": 28,
            "description": "Opens the Collection Detail page.",
            "itemtype": "method",
            "name": "visitDetail",
            "class": "CollectionItemComponent",
            "module": "collection"
        },
        {
            "file": "build/src/collections/collections.component.spec.ts",
            "line": 43,
            "itemtype": "method",
            "name": "getCollections",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the mock collection objects sequence",
                "type": "Observable"
            },
            "class": "CollectionsServiceStub",
            "module": "collections"
        },
        {
            "file": "build/src/collections/collections.component.spec.ts",
            "line": 64,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(CollectionsComponent, CollectionsService)"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "CollectionsComponentSpec",
            "module": "collections"
        },
        {
            "file": "build/src/collections/collections.component.ts",
            "line": 21,
            "description": "The collection REST objects.",
            "itemtype": "property",
            "name": "collections",
            "type": "Object[]",
            "class": "CollectionsComponent",
            "module": "collections"
        },
        {
            "file": "build/src/collections/collections.component.ts",
            "line": 28,
            "description": "Flag indicating whether there are no collections.\nThis property is necessary in order to asynchronously convey\nto the view whether there are subjects. The view cannot test\n`collections.length` directly, since `collections` is only\nset when the collections are fetched.",
            "itemtype": "property",
            "name": "isEmpty",
            "type": "Boolean",
            "class": "CollectionsComponent",
            "module": "collections"
        },
        {
            "file": "build/src/collections/collections.service.ts",
            "line": 17,
            "itemtype": "method",
            "name": "getCollections",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the REST collection objects",
                "type": "Observable"
            },
            "class": "CollectionsService",
            "module": "collections"
        },
        {
            "file": "build/src/common/boolean.pipe.ts",
            "line": 3,
            "description": "Formats the display value of a three-valued boolean input.",
            "class": "CommonModule",
            "module": "collections"
        },
        {
            "file": "build/src/common/boolean.pipe.ts",
            "line": 11,
            "description": "Returns the string representation of the given input value\nas follows:\n* true => the *trueStr*\n* false => the *falseStr*\n* null or undefined => 'Not Specified'",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the boolean or null input",
                    "type": "Boolean"
                },
                {
                    "name": "trueStr",
                    "description": "the true conversion (default `True`)",
                    "type": "String"
                },
                {
                    "name": "falseStr",
                    "description": "the false conversion (default `False`)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the string representation",
                "type": "String"
            },
            "throws": {
                "description": "if the value is not boolean, null or undefined",
                "type": "TypeError"
            },
            "class": "CommonModule",
            "module": "collections"
        },
        {
            "file": "build/src/common/capitalize.pipe.ts",
            "line": 4,
            "description": "Capitalizes string input.",
            "class": "CommonModule",
            "module": "collections"
        },
        {
            "file": "build/src/common/capitalize.pipe.ts",
            "line": 12,
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the string or null input",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the captalized string",
                "type": "String"
            },
            "class": "CommonModule",
            "module": "collections"
        },
        {
            "file": "build/src/common/choice.pipe.ts",
            "line": 7,
            "description": "Transforms a database value to a display value.",
            "class": "CommonModule",
            "module": "collections"
        },
        {
            "file": "build/src/common/choice.pipe.ts",
            "line": 19,
            "description": "Looks up the input value within the `choices.cfg` section\nfor the given topic. If found, then this method returns\nthe look-up result, otherwise this method returns the\ninput value. If the input value is an array, then this\nmethod collects the item transformations.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the _topic_._value_\n  property value",
                    "type": "String|string[]"
                }
            ],
            "return": {
                "description": "the display string",
                "type": "String|string[]"
            },
            "class": "CommonModule",
            "module": "collections"
        },
        {
            "file": "build/src/common/notSpecified.pipe.ts",
            "line": 4,
            "description": "Adds `Not Specified` as the value for missing data.",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/notSpecified.pipe.ts",
            "line": 12,
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the input",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "the input, if it exists, otherwise `Not Specified`",
                "type": "Any"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 26,
            "description": "The input object holding the properties to display.",
            "itemtype": "property",
            "name": "object: Object",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 33,
            "description": "The property path to the\n{{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}.\nIf this input path is set, then it is prepended to each object property\npath for label lookup.",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 43,
            "description": "The optional title displayed above the table.",
            "itemtype": "property",
            "name": "title: string",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 50,
            "description": "The property name => label function, used as described in\n{{#crossLink \"PropertyTableComponent/getLabel\"}}{{/crossLink}}.\n\nThe return value can be unescaped HTML, i.e. embedded HTML is\ninterpreted. For example, `&tau;<sub>i</sub>` displays as\n<span>&tau;<sub>i</sub></span>.  A simple string return value\nis displayed as the string value. A null or undefined return\nis displayed as the\n{{#crossLink \"PropertyTableComponent/getLabel\"}}{{/crossLink}}\ndefault.",
            "itemtype": "property",
            "name": "label",
            "type": "Function",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 66,
            "description": "The display value formatting function. If there is a format\nfunction, then the property value is passed to this function\nto get the display value.\n\n*Note*: {{#crossLink \"PropertyTableComponent/format:property\"}}{{/crossLink}}\nand {{#crossLink \"PropertyTableComponent/valueChoices:property\"}}{{/crossLink}}\nare mutually exclusive. If\n{{#crossLink \"PropertyTableComponent/valueChoices:property\"}}{{/crossLink}}\nis set, then this\n{{#crossLink \"PropertyTableComponent/format:property\"}}{{/crossLink}}\nproperty is ignored.",
            "itemtype": "property",
            "name": "format",
            "type": "Function",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 83,
            "description": "The optional value {path: {value: label}} associative object,\nwhere *path* is the property select choice path.",
            "itemtype": "property",
            "name": "valueChoices",
            "type": "Object",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 91,
            "description": "The optional property names to always include, whether\nor not there is a non-null property value. This property\nhas precedence if the\n{{#crossLink \"PropertyTableComponent/validate\"}}{{/crossLink}}\nflag is `true`.",
            "itemtype": "property",
            "name": "include",
            "type": "String[]",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 102,
            "description": "The optional property names to ignore. If the\n{{#crossLink \"PropertyTableComponent/parent:property\"}}{{/crossLink}}\nis set, then any property which references the parent is ignored.",
            "itemtype": "property",
            "name": "exclude",
            "type": "String[]",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 111,
            "description": "Flag indicating whether to display `Not Specified`\nfor properties which are set to null (default true).",
            "itemtype": "property",
            "name": "validate",
            "type": "Boolean",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 119,
            "description": "Flag indicating whether to expand each child object into\nits own property table (default true).",
            "itemtype": "property",
            "name": "expand",
            "type": "Boolean",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 127,
            "description": "The object which contains the\n{{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}.\nAny property which references the parent is ignored.",
            "itemtype": "property",
            "name": "parent",
            "type": "Object",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 136,
            "description": "The sorted\n{{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}\nkeys which hold a non-empy string or finite numeric value.",
            "itemtype": "property",
            "name": "simpleKeys",
            "type": "String[]",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 145,
            "description": "The sorted\n{{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}\nkeys which hold a non-empty object value.",
            "itemtype": "property",
            "name": "compositeKeys",
            "type": "String[]",
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 187,
            "description": "Returns the label for the given\n{{#crossLink \"PropertyTableComponent/simpleKeys:property\"}}{{/crossLink}}\nkey. If the\n{{#crossLink \"PropertyTableComponent/label:property\"}}{{/crossLink}}\nfunction is set, then that function is called on the key. If there\nis a result, then that is the label. Otherwise, the default label\nis the humanized, capitalized property name described in\n{{#crossLink \"StringHelper/labelize\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getLabel",
            "params": [
                {
                    "name": "property",
                    "description": "the child property name (not a path)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display value",
                "type": "String"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 214,
            "description": "Returns the display value for the given\n{{#crossLink \"PropertyTableComponent/simpleKeys:property\"}}{{/crossLink}}\nkey.",
            "itemtype": "method",
            "name": "getDisplayValue",
            "params": [
                {
                    "name": "key",
                    "description": "the simple key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display value",
                "type": "Any"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 228,
            "description": "Returns the child objects for the given\n{{#crossLink \"PropertyTableComponent/compositeKeys:property\"}}{{/crossLink}}\nkey.",
            "itemtype": "method",
            "name": "children",
            "params": [
                {
                    "name": "key",
                    "description": "the composite key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the child objects",
                "type": "Object[]"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 242,
            "description": "Augments the given property with the\n{{#crossLink \"PropertyTableComponent/path:property\"}}{{/crossLink}},\nif that parent path is set.",
            "itemtype": "method",
            "name": "getPath",
            "params": [
                {
                    "name": "property",
                    "description": "a property path relative to the\n  {{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the augmented property path",
                "type": "String"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 256,
            "description": "Returns whether this table's\n{{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}\nhas displayable properties.",
            "itemtype": "method",
            "name": "hasContent",
            "return": {
                "description": "whether there is displayable content",
                "type": "Boolean"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 268,
            "description": "Returns the display value for the given\n{{#crossLink \"PropertyTableComponent/getDisplayValue:property\"}}{{/crossLink}}\nkey and value.",
            "itemtype": "method",
            "name": "getDisplayValue",
            "params": [
                {
                    "name": "value",
                    "description": "the value to display",
                    "type": "Any"
                },
                {
                    "name": "key",
                    "description": "the simple key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display value",
                "type": "Any"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 301,
            "description": "Returns whether the given property key is not in the\n{{#crossLink \"PropertyTableComponent/exclude:property\"}}{{/crossLink}}\nlist, does not reference the\n{{#crossLink \"PropertyTableComponent/parent:property\"}}{{/crossLink}}\nand satisfies\n{{#crossLink \"ObjectHelper/hasValidContent\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "isDisplayable",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "key",
                    "description": "the composite key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "whether the property should be displayed",
                "type": "Boolean"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/common/property-table.component.ts",
            "line": 328,
            "description": "Returns whether this table's\n{{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}\nhas no displayable properties.",
            "return": {
                "description": "whether there has no displayable content",
                "type": "Boolean"
            },
            "class": "PropertyTableComponent",
            "module": "common"
        },
        {
            "file": "build/src/configuration/configuration.service.spec.js",
            "line": 13,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(CollectionsComponent, CollectionsService)"
                }
            ],
            "class": "ConfigurationServiceSpec",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 25,
            "description": "The preferences configuration object.",
            "itemtype": "property",
            "name": "preferences",
            "type": "Object",
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 32,
            "description": "The choices configuration {path: {value: label}} object,\nwhere *path* is the property select choice path.",
            "itemtype": "property",
            "name": "valueChoices",
            "type": "Object",
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 40,
            "description": "The data model configuration object. This input is\nparsed into the\n{{#crossLink \"ConfigurationService/labelLookup:property\"}}{{/crossLink}}\nfor use by\n{{#crossLink \"ConfigurationService/getLabel\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "dataModel",
            "type": "Object",
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 51,
            "description": "The application data model configuration object built\nfrom the `data_model.cfg` input file. The input file\ntopics are conceptual objects. The input sections\nassign a property path to a label, e.g. the section:\n\n    [Demographics]\n    Age = age\n\nspecifies that a Demographics object has the property\n*age* with display label `Age`.\n\nA topic can be parameterized by a qualifier, e.g. the topic:\n\n    [Pathology<Breast>]\n\npertains only to the `Breast` qualifier. Only topics\ncan be parameterized.\n\nThe property value `this` is a logical aggregation, e.g.\nthe section:\n\n    [RCB]\n    RCB Summary = this\n    RCB Detail = this\n\ngroups the RCB object into two logical aggregations.\n\nAn atomic property entry, i.e. an entry that does not\nrefer to another topic, can be annotated by an HTML label,\ne.g. the entry:\n\n    tau_i = tauI (&tau;<sub>i</sub>)\n\nspecifies that the *tauI* property has text label `tau_i`\nwith HTML representation &tau;<sub>i</sub>.\n\nThe file is parsed into this\n{{#crossLink \"ConfigurationService/dataModel:property\"}}{{/crossLink}}.\nThe parsed object consists of {context: config} properties,\nwhere *context* is `common` for the shared data model or a\nparameterized qualifier as described above, and *config*\nis the parsed configuration for that context.\n\nEach parsed configuration is a\n{topic: {property: {_label, child...}}}\nassociative label lookup object, where *_label* is a\n{`text`, `html`} label object and *child* is a child\nproperty.\n\nEvery object has a label but only non-atomic properties\nhave child properties. This sets up the convenient label\nlookup configs for the common and extension configurations\nas sketched in the following function:\n\n    (topic, path) => _.get(config, `${topic}.${path}.${_label}`)",
            "example": [
                "\n    [Clinical]\n    Demographics = subject\n    Biopsy = subject.biopsy\n\n    [Demographics]\n    Age = age\n\n    [Biopsy]\n    Pathology = pathology\n\n    [Pathology]\n    PrimaryTumor = tumors[0]\n\n    [PrimaryTumor]\n    TNM = tnm\n\n    [PrimaryTumor<Breast>]\n    RCB = rcb\n\n    [TNM]\n    TNM Size = size.tumorSize\n    ...\n\n is parsed to:\n\n    {\n      common:\n        subject: {\n          _label: {text: 'Demographics'},\n          age: {_label: {text: 'Age'}},\n          biopsy: {\n            _label: {text: 'Biopsy'},\n            pathology: {\n              _label: {text: 'Pathology'},\n              tumors: [\n                {\n                  _label: {text: 'Primary Tumor'},\n                  tnm: {\n                    _label: {text: 'TNM'},\n                    size: {\n                      tumorSize: {_label: {text: 'TNM Size'}},\n                      ...\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n      Breast: {\n        ... // same as common with the following exception:\n                tumors: [\n                  {\n                    _label: ...\n                    tnm: ...\n                    rcb: ...   // <== breast-specific\n      }\n    }\n\nThis example has a parameterized extension `Breast`\nwhich augments the common configuration with breast\npatient specializations. Note that each section topic\nand section entry parses to a `_label property, but\nthe atomic property items only contain this `_label`\nproperty. Label lookups are then a matter of calling\nthe lodash `_get` function with an augmented property\npath. For example, the path:\n\n    common.Clinical.subject.biopsy.pathology.tumors[0].tnm.size.tumorSize._label.text\n\nresolves to `TNM Size` as described in\n{{#crossLink \"ConfigurationService/getLabel\"}}{{/crossLink}}.\n\nNote that an array index is supported, e.g. `tumors[0]`\nin the above example."
            ],
            "itemtype": "property",
            "name": "dataModel",
            "type": "Object",
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 196,
            "description": "The parsed\n{{#crossLink \"ConfigurationService/dataModel:property\"}}{{/crossLink}}\nconfiguration object built on demand.",
            "itemtype": "property",
            "name": "_labelLookup",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 212,
            "description": "Returns the HTML label for the given display property.\nThe HTML label is determined as described in\n{{#crossLink \"ConfigurationService/getTextLabel\"}}{{/crossLink}},\nwith the following difference:\n* If the label lookup search returns a matching {text, html} label\n  object and has a *html* value, then that value is returned.",
            "itemtype": "method",
            "name": "getHTMLLabel",
            "params": [
                {
                    "name": "property",
                    "description": "the property path",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "the optional parameterized extension",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display HTML label",
                "type": "String"
            },
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 234,
            "description": "Returns the HTML label for the given display property.\nThe text label is determined as follows:\n* If the label lookup search returns a matching {text, html}\n  label object, then the *text* value is returned.\n* If the search fails, then this method delegates to\n  {{#crossLink \"ConfigurationService/defaultLabel\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getTextLabel",
            "params": [
                {
                    "name": "property",
                    "description": "the property path",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "the optional parameterized extension",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display text label",
                "type": "String"
            },
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 256,
            "description": "Returns the {text, html} label object for the given display property.\nThe label is searched as described in\n{{#crossLink \"ConfigurationService/getLabel\"}}{{/crossLink}}.\n\nIf the label lookup search returns a matching {text, html} label object, then\nthe *html* value is returned, if it exists, otherwise the\n*text* value is returned. If the search fails, then this method\ndelegates to\n{{#crossLink \"StringHelper/labelize\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getLabel",
            "params": [
                {
                    "name": "property",
                    "description": "the property path",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "the optional parameterized extension",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the configured label object, if it exists,\n  otherwise `undefined`",
                "type": "Object"
            },
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 284,
            "description": "If the label path contains `normalizedAssay`, then\nthis method delegates to\n{{#crossLink \"StringHelper/labelize\"}}{{/crossLink}}\ncalled on the terminal property name in the *property*\npath.",
            "itemtype": "method",
            "name": "defaultLabel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "property",
                    "description": "the property path",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the target label",
                "type": "String"
            },
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 306,
            "description": "Returns the label for the given genomics property.\nThis method specializes\n{{#crossLink \"ConfigurationService/defaultLabel\"}}{{/crossLink}}\nfor a property name of length six or less to upper-case.",
            "example": [
                "\n    'er'  => 'ER'\n    'scube2'  => 'SCUBE2'\n    'survivin'  => 'Survivin'"
            ],
            "itemtype": "method",
            "name": "defaultGenomicsLabel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "property",
                    "description": "the property name (not path)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the default label",
                "type": "String"
            },
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 330,
            "description": "Converts the data model configuration input file into\nthe configuration object as described in\n{{#crossLink \"ConfigurationService/labelLookup:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "parseDataModel",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "the parsed data model object",
                "type": "Object"
            },
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/configuration/configuration.service.ts",
            "line": 453,
            "description": "Converts the given data model configuration value into a\n[property, html] pair. The input value must be a property\npath optionally followed by a html qualifier.",
            "example": [
                "\n    'c'                     =>  ['c', undefined]\n    'c.d.e'                 =>  ['c.d.e', undefined]\n    'c.vI (v<sub>i</sub>)'  =>  ['c.vI', 'v<sub>i</sub>']\n    'c.d.e[0]'  =>  ['c.d.e[0]', undefined]"
            ],
            "itemtype": "method",
            "name": "parseDataModelValue",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "the input data model item value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the parsed item [property, html] pair",
                "type": "String[]"
            },
            "class": "ConfigurationService",
            "module": "configuration"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 18,
            "description": "The select choices Object.",
            "itemtype": "property",
            "name": "choices",
            "type": "Object",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 25,
            "description": "The initial selection path for this chooser and the cascaded\nchild choosers.",
            "itemtype": "property",
            "name": "path",
            "type": "String[]",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 35,
            "description": "The cascaded selection path change event.",
            "itemtype": "property",
            "name": "pathChange",
            "type": "EventEmitter<any>",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 46,
            "description": "The selected choice.",
            "itemtype": "property",
            "name": "selection",
            "type": "String",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 53,
            "description": "If this chooser is not terminal, then the child chooser choices\nare the keys of the\n{{#crossLink \"CascadeSelectComponent/choices:property\"}}{{/crossLink}}\nvalue for this select's\n{{#crossLink \"CascadeSelectComponent/selection:property\"}}{{/crossLink}}.\nIf this chooser is terminal, then there are no child choices.",
            "itemtype": "property",
            "name": "childChoices",
            "type": "Object",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 65,
            "description": "The internal\n{{#crossLink \"CascadeSelectComponent/path:property\"}}{{/crossLink}}\nrepresentation.",
            "itemtype": "property",
            "name": "_path",
            "type": "String[]",
            "access": "private",
            "tagname": "",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 77,
            "description": "Sets the\n{{#crossLink \"CascadeSelectComponent/selection:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "ngOnChanges",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 92,
            "description": "Handle a\n{{#crossLink \"CascadeSelectComponent/choices:property\"}}{{/crossLink}}\nchange by resetting the\n{{#crossLink \"CascadeSelectComponent/selection:property\"}}{{/crossLink}}\nif the previous value is no longer available in the new choices.",
            "itemtype": "method",
            "name": "ngOnChanges",
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 114,
            "itemtype": "method",
            "name": "choiceKeys",
            "return": {
                "description": "the sorted\n  {{#crossLink \"CascadeSelectComponent/choices:property\"}}{{/crossLink}}\n  object keys.",
                "type": "String[]"
            },
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 124,
            "description": "Sets the\n{{#crossLink \"CascadeSelectComponent/selection:property\"}}{{/crossLink}}\nto the given choice.\nIn addition, if the choice value is terminal (i.e., if\n{{#crossLink \"CascadeSelectComponent/isTerminal\"}}{{/crossLink}}\nreturns `true`), then\n{{#crossLink \"CascadeSelectComponent/value:property\"}}{{/crossLink}}\nis triggered with the\n{{#crossLink \"CascadeSelectComponent/choices:property\"}}{{/crossLink}}\nvalue for the *choice* property.",
            "itemtype": "method",
            "name": "onSelectChange",
            "params": [
                {
                    "name": "choice",
                    "description": "the choice text",
                    "type": "String"
                }
            ],
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 144,
            "description": "Forwards the select path to the parent listener.\nThe select path is formed by prepending this select's\nselection to the given child select path.",
            "itemtype": "method",
            "name": "onTerminalSelect",
            "params": [
                {
                    "name": "value",
                    "description": "the cascaded terminal selection path",
                    "type": "String"
                }
            ],
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/cascade-select.component.ts",
            "line": 157,
            "description": "If the choice value is terminal (i.e., if the value is not a plain\nJavascript object, then trigger\n{{#crossLink \"CascadeSelectComponent/value:property\"}}{{/crossLink}}\nwith the associated\n{{#crossLink \"CascadeSelectComponent/choices:property\"}}{{/crossLink}}\nvalue.\nOtherwise, set the\n{{#crossLink \"CascadeSelectComponent/childChoices:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "onSelect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "defer",
                    "description": "whether to delay emitting changes until\n  after the current digest cycle completes",
                    "type": "Boolean"
                }
            ],
            "class": "CascadeSelectComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 17,
            "description": "The current value.",
            "itemtype": "property",
            "name": "value",
            "type": "Any",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 24,
            "description": "The time in milliseconds to pause until the next request\nis made during play. The default is half a second.",
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 32,
            "description": "Cancels any pending action if set.",
            "itemtype": "property",
            "name": "cancel",
            "type": "Boolean",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 39,
            "description": "Signals that the parent component should obtain either the\n`previous` or `next` value.",
            "itemtype": "property",
            "name": "next",
            "type": "EventEmitter<boolean>",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 47,
            "description": "Flag indicating whether to loop over the values.",
            "itemtype": "property",
            "name": "isPlaying",
            "type": "Boolean",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 54,
            "description": "Flag indicating whether a value request is pending.",
            "itemtype": "property",
            "name": "isWaiting",
            "type": "Boolean",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 61,
            "description": "The time of the last player iteration, or zero to start.",
            "itemtype": "property",
            "name": "stopWatch",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 69,
            "description": "The queued `previous` or `next` action to be emitted when\nthe next value is available.",
            "itemtype": "property",
            "name": "queued",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 78,
            "description": "Handles a value change or\n{{#crossLink \"PlayerComponent/cancel:property\"}}{{/crossLink}}\nrequest.\n\nThe state machine is as follows:\n\n    next|previous -> clear play; request -> receive ->\n    clear waiting flag\n\n    play -> set play; request -> receive -> repeat\n\nIf the {{#crossLink \"PlayerComponent/isWaiting:property\"}}{{/crossLink}}\nflag is set, then the request is queued.\nOtherwise, the request is issued and the waiting flag is set.\n\nWhen the request is fulfilled, if there is a queued request\nthen fire the queued request and retain the waiting state.\nOtherwise, clear the waiting flag.\n\nThe repeat is paused, if necessary, until the\n{{#crossLink \"PlayerComponent/delay:property\"}}{{/crossLink}}\ntime elapses.",
            "itemtype": "method",
            "name": "ngOnChanges",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 170,
            "description": "Toggles the player as a result of a user click on the\nplay button.",
            "itemtype": "method",
            "name": "togglePlay",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 193,
            "description": "If the player is already waiting on a value change, then\nqueue up the given action. Otherwise, fire the action\nimmediately.",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "action",
                    "description": "the action to dispatch",
                    "type": "String"
                }
            ],
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 210,
            "description": "Obtains the previous value.",
            "itemtype": "method",
            "name": "onPrevious",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/player.component.ts",
            "line": 222,
            "description": "Obtains the next value.",
            "itemtype": "method",
            "name": "onNext",
            "class": "PlayerComponent",
            "module": "controls"
        },
        {
            "file": "build/src/controls/slider.directive.ts",
            "line": 80,
            "description": "The optional slider height in pixels.",
            "itemtype": "property",
            "name": "height",
            "class": "SliderDirective",
            "module": "controls"
        },
        {
            "file": "build/src/controls/slider.directive.ts",
            "line": 89,
            "description": "The optional slider width in pixels.",
            "itemtype": "property",
            "name": "width",
            "class": "SliderDirective",
            "module": "controls"
        },
        {
            "file": "build/src/controls/slider.directive.ts",
            "line": 96,
            "description": "The slider value. This value is initially set to the\n*value* input property bound in the parent view.\nSubsequently, the value is changed when either the slider\nvalue or the *value* property is changed.",
            "itemtype": "property",
            "name": "_value",
            "access": "private",
            "tagname": "",
            "class": "SliderDirective",
            "module": "controls"
        },
        {
            "file": "build/src/controls/slider.directive.ts",
            "line": 128,
            "description": "Handles a change to the slider value that arises externally\nrather than by the slider user action. The change does not\nprecipitate a `changed` event.",
            "itemtype": "method",
            "name": "ngOnChanges",
            "class": "SliderDirective",
            "module": "controls"
        },
        {
            "file": "build/src/date/date-helper.js",
            "line": 22,
            "itemtype": "method",
            "name": "isDate",
            "params": [
                {
                    "name": "value",
                    "description": "the value to check"
                }
            ],
            "return": {
                "description": "whether the value is a javascript `Date` or\n  moment object"
            },
            "class": "DateHelper",
            "module": "date"
        },
        {
            "file": "build/src/date/date-helper.js",
            "line": 32,
            "description": "Converts the input to a moment. The input can be a date string,\ne.g. `07 Sep 1986`, or the number of milliseconds since\nthe Unix Epoch (Jan 1 1970 12AM UTC).\n\nA string input must contain the date in the format\nDD MMM YYYY, e.g. `Tue, 03 Feb 2012 00:00:00 GMT`.\nOtherwise, an error is thrown. Note that the time in\nthe example input is ignored.",
            "itemtype": "method",
            "name": "asMoment",
            "params": [
                {
                    "name": "date",
                    "description": "the date integer or string"
                }
            ],
            "return": {
                "description": "the parsed moment date, or the input date\n   if the input date is undefined or null"
            },
            "class": "DateHelper",
            "module": "date"
        },
        {
            "file": "build/src/date/date-helper.js",
            "line": 65,
            "description": "Anonymizes the given date by changing the month and day to\nJuly 7.",
            "itemtype": "method",
            "name": "anonymize",
            "params": [
                {
                    "name": "date",
                    "description": "the date to anonymize"
                }
            ],
            "return": {
                "description": "the new anonymized date, or undefined\n   if the input date is undefined or null"
            },
            "class": "DateHelper",
            "module": "date"
        },
        {
            "file": "build/src/date/moment.pipe.ts",
            "line": 3,
            "description": "Transforms a database value to a display value.",
            "class": "ErrorComponent",
            "module": "data"
        },
        {
            "file": "build/src/date/moment.pipe.ts",
            "line": 11,
            "description": "Looks up the input value within the `choices.cfg` section\nfor the given topic. If found, then this method returns\nthe look-up result, otherwise this method returns the\ninput value. If the input value is an array, then this\nmethod collects the item transformations.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the moment date input",
                    "type": "Object"
                },
                {
                    "name": "format",
                    "description": "the optional date format",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display string",
                "type": "String"
            },
            "class": "ErrorComponent",
            "module": "data"
        },
        {
            "file": "build/src/error/error.component.ts",
            "line": 22,
            "description": "The error message to display.",
            "itemtype": "property",
            "name": "error",
            "type": "String",
            "class": "ErrorComponent",
            "module": "error"
        },
        {
            "file": "build/src/error/error.component.ts",
            "line": 29,
            "description": "The error pop-up dismissal event.",
            "itemtype": "property",
            "name": "dismissed",
            "type": "EventEmitter",
            "class": "ErrorComponent",
            "module": "error"
        },
        {
            "file": "build/src/file/file.service.spec.js",
            "line": 19,
            "description": "The mock backend provider.",
            "itemtype": "property",
            "name": "backend",
            "access": "private",
            "tagname": "",
            "class": "FileServiceSpec",
            "module": "file"
        },
        {
            "file": "build/src/file/file.service.ts",
            "line": 23,
            "description": "Reads the given server file.\n\nNote: the response is returned even if there is an\nHTTP error. The error is caught and the response is\nreturned.\n\nNote: If the file content is plaintext, this method returns\nan ArrayBuffer rather than the expected string in the\ncorresponding unit test. The contents are a mystery, and not,\ne.g., deeply equal to the encoded string. Since so far we only\nuse FileService for readBinary, the method is made private and\nthe corresponding unit test is disabled for now. The test result\nmight be a testing artifact.",
            "itemtype": "method",
            "name": "read",
            "params": [
                {
                    "name": "url",
                    "description": "the file path relative to the web app root"
                },
                {
                    "name": "options",
                    "description": "additional HTTP options"
                }
            ],
            "return": {
                "description": "an observable which resolves\n  to the file content",
                "type": "Observable<any>"
            },
            "class": "FileService",
            "module": "file"
        },
        {
            "file": "build/src/file/file.service.ts",
            "line": 50,
            "description": "A convenience function to read a binary file into an\nArrayBuffer. This method uncompresses compressed data\nfor files ending in '.gz' or '.zip'.",
            "itemtype": "method",
            "name": "readBinary",
            "params": [
                {
                    "name": "url",
                    "description": "the file path relative to the web app root"
                },
                {
                    "name": "options",
                    "description": "additional HTTP options"
                }
            ],
            "return": {
                "description": "an observable which resolves to the file content"
            },
            "class": "FileService",
            "module": "file"
        },
        {
            "file": "build/src/file/file.service.ts",
            "line": 71,
            "description": "Encodes and posts the given content. The input data parameter\nis an unencoded Javascript object rather than a JSON object.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "url",
                    "description": "(string) the server URL to receive the object"
                },
                {
                    "name": "data",
                    "description": "the unencoded Javascript object to send",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "an observable which resolves to the\n  POST response body",
                "type": "Observable<any>"
            },
            "class": "FileService",
            "module": "file"
        },
        {
            "file": "build/src/help/help.service.ts",
            "line": 11,
            "description": "Flag indicating whether to display the help pane.",
            "itemtype": "property",
            "name": "showHelp",
            "class": "HelpService",
            "module": "help"
        },
        {
            "file": "build/src/help/help.service.ts",
            "line": 18,
            "description": "Inverts the `showHelp` flag.",
            "itemtype": "method",
            "name": "toggleHelp",
            "class": "HelpService",
            "module": "help"
        },
        {
            "file": "build/src/help/toggle-help.component.ts",
            "line": 18,
            "description": "Flag indicating whether the help is shown.",
            "itemtype": "property",
            "name": "showHelp",
            "type": "Boolean",
            "readonly": "",
            "class": "ToggleHelpComponent",
            "module": "help"
        },
        {
            "file": "build/src/help/toggle-help.component.ts",
            "line": 28,
            "description": "Toggles the help flag.",
            "itemtype": "method",
            "name": "toggleHelp",
            "class": "ToggleHelpComponent",
            "module": "help"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 21,
            "description": "The input image data object.",
            "itemtype": "property",
            "name": "image",
            "type": "Image",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 28,
            "description": "The loaded event.",
            "itemtype": "property",
            "name": "loaded",
            "type": "EventEmitter",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 35,
            "description": "The coordinate change event.",
            "itemtype": "property",
            "name": "coordinateChanged",
            "type": "EventEmitter",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 42,
            "description": "The error event.",
            "itemtype": "property",
            "name": "error",
            "type": "EventEmitter",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 49,
            "description": "Flag indicating whether this component has already\nstarted (or restarted) Papaya.\n\nNote: a new component instance is created when the browser returns\nto the parent page. However, Papaya is a global service and\nretains the Papaya viewer and content during the navigation.\nTherefore, this flag marks whether *this instance* called the\n{{#crossLink \"PapayaService/start\"}}{{/crossLink}} method.\nThat service method calls Papaya restart if Papaya is already\nstarted.",
            "itemtype": "property",
            "name": "isStarted",
            "access": "private",
            "tagname": "",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 66,
            "description": "Monkey-patches the Papaya file loader and error handler.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "papaya",
                    "description": ""
                }
            ],
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 117,
            "description": "Unsets the\n{{#crossLink \"PapayaService/errorHandler:property\"}}{{/crossLink}}\nand\n{{#crossLink \"PapayaService/finishedLoadingCallback:property\"}}{{/crossLink}}\nproperties.",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 131,
            "description": "Render the image in the Papaya container.",
            "itemtype": "method",
            "name": "ngAfterViewChecked",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.component.ts",
            "line": 151,
            "description": "If the image changed after the initial display, then swap in\nthe new image.",
            "itemtype": "method",
            "name": "ngOnChanges",
            "class": "ImageComponent",
            "module": "image"
        },
        {
            "file": "build/src/image/image.data.js",
            "line": 15,
            "description": "Makes the following changes to the given REST Image object:\n* adds the *identifier* virtual property",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "image",
                    "description": "the REST Image object to extend"
                }
            ],
            "return": {
                "description": "the extended Image object"
            },
            "class": "Image",
            "module": "image"
        },
        {
            "file": "build/src/image/image.data.js",
            "line": 29,
            "description": "A string that uniquely and durably identifies this image\nin the scope of the database. The path is the image\nhierarchy, e.g.\n`QIN_Test/Breast/1/1/1/reg_7ka3z/volume001.nii.gz`\nfor the first volume of the Subject 1 Session 1 Scan 1\nregistration with name `reg_7ka3z`.",
            "itemtype": "property",
            "name": "identifier",
            "type": "String",
            "class": "Image",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 15,
            "description": "The function called when an image load error is encountered.",
            "itemtype": "property",
            "name": "errorHandler",
            "type": "Function",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 22,
            "description": "The function called when image load is successfully completed.\nThe *contents* callback parameter is a {header, data} object,\nwhere *header* is the loaded Papaya volume header and *data*\nis the Papaya volume *imageData*.\n\nNote: this callback is called if and only if there is not an\nimage load error. The client is responsible for capturing an\nerror in the\n{{#crossLink \"PapayaService/errorHandler:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "finishedLoadingCallback",
            "type": "Function",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 37,
            "description": "The function called when the viewer coordinate has changed.",
            "itemtype": "property",
            "name": "coordinateChangedCallback",
            "type": "Function",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 44,
            "description": "The Papaya viewer if Papaya is started, undefined otherwise.\nThe Papaya viewer controls the display.",
            "itemtype": "property",
            "name": "viewer",
            "type": "Any",
            "readonly": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 58,
            "description": "Flag indicating whether Papaya has started.",
            "itemtype": "property",
            "name": "isPapayaStarted",
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 66,
            "description": "This flag is set while a volume is being replaced in\norder to disable Papaya mouse event handlers during\nthe swap.",
            "itemtype": "property",
            "name": "isSwappingVolume",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 76,
            "itemtype": "property",
            "name": "currentCoordinate  the [x, y, z] coordinate!~YUIDOC_LINE~!  in the cross-hairs",
            "type": "Number[]",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 84,
            "description": "Monkey-patches Papaya to disable drag-and-drop, replace the\nerror handler, disable the non-View menu items, inject a finished\nload callback and fix several bugs.",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 105,
            "description": "Returns whether the\n{{#crossLink \"PapayaService/viewer:property\"}}{{/crossLink}}\nhas been successfully initialized.",
            "itemtype": "method",
            "name": "isInitialized",
            "return": {
                "description": "whether the viewer is initialized",
                "type": "Boolean"
            },
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 117,
            "description": "Starts Papaya on the given image and overlays.\n\nIf Papaya was already successfully started on an image,\nthen this method delegates to the\n{{#crossLink \"PapayaService/restart\"}}{{/crossLink}} method\ninstead.",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "image",
                    "description": "the {{#crossLink \"Image\"}}{{/crossLink}}\n  to display",
                    "type": "Image"
                },
                {
                    "name": "overlays",
                    "description": "the image overlays",
                    "type": "Image[]"
                }
            ],
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 150,
            "description": "Restarts Papaya on the given image and overlays.",
            "itemtype": "method",
            "name": "restart",
            "params": [
                {
                    "name": "image",
                    "description": "the {{#crossLink \"Image\"}}{{/crossLink}}\n  to display",
                    "type": "Image"
                },
                {
                    "name": "overlays",
                    "description": "the image overlays",
                    "type": "Image[]"
                }
            ],
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 168,
            "itemtype": "method",
            "name": "viewerDimensions",
            "return": {
                "description": "the viewer [width, height], if known, otherwise null"
            },
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 176,
            "description": "Swaps a new image into the existing Papaya viewer and repaints the\nslice views.",
            "itemtype": "method",
            "name": "replaceImage",
            "params": [
                {
                    "name": "image",
                    "description": "the new {{#crossLink \"Image\"}}{{/crossLink}}\n  object",
                    "type": "Object"
                }
            ],
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 260,
            "description": "Gets the voxel value for the current or cached image data.",
            "itemtype": "method",
            "name": "getVoxelValue",
            "params": [
                {
                    "name": "coordinate",
                    "description": "the [x, y, z] coordinate",
                    "type": "Number[]"
                },
                {
                    "name": "imageData",
                    "description": "the cached volume image data to reference\n   (default is the current volume)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the voxel value in the image data",
                "type": "Number"
            },
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 296,
            "description": "Gets the voxel value for the current image at the given coordinates.",
            "itemtype": "method",
            "name": "getVoxelValueAt",
            "params": [
                {
                    "name": "x",
                    "description": "the X coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the Y coordinate",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "the Z coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the voxel value",
                "type": "Number"
            },
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 315,
            "description": "Starts Papaya on the given image URLs.",
            "itemtype": "method",
            "name": "startPapaya",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "urls",
                    "description": "the base image and overlays",
                    "type": "String[]"
                }
            ],
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 346,
            "description": "In the case of a hot reload, a new PapayaService is created but\nthe previous patched Papaya library is retained. If that is the\ncase, the papaya.viewer.Viewer.prototype._finishedLoading patch\nfunction already exists. This method returns whether that function\nexists, which serves as a proxy for whether Papaya is already\nmonkey-patched.",
            "itemtype": "method",
            "name": "isPapayaPatched",
            "return": {
                "description": "whether Papaya has already been monkey-patched",
                "type": "Boolean"
            },
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 361,
            "description": "Monkey-patches the misplaced Papaya resize button and kills\nthe other misplaced and/or irrelevant \"main\" buttons.",
            "itemtype": "method",
            "name": "fixResize",
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 475,
            "description": "Removes the 'Drag a file' message from the Papaya Viewer.drawEmptyViewer\nfunction. Adds a new Viewer.drawHelpMessage function that displays a\n'Select a Time Point' message. This function should be called on load\n error.",
            "itemtype": "method",
            "name": "disableDnD",
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 532,
            "description": "Guard against the following behavior:\n* When the mouse moves or is clicked outside of the image viewport\n  while a volume is being loaded, Papaya sporadically tries to\n  dereference an empty viewer volume header, resulting in the\n  following error message:\n\n      Cannot read property 'xDim' of null\n\nThe remedy is to check the\n{{#crossLink \"PapayaService/isSwappingVolume:property\"}}{{/crossLink}}\nflag.",
            "itemtype": "method",
            "name": "disableMouseEventsWhileLoading",
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 596,
            "description": "Monkey-patches the Papaya image loader to call the\n{{#crossLink \"PapayaService/errorHandler:property\"}}{{/crossLink}},\nif it exists, otherwise throw an exception.",
            "itemtype": "method",
            "name": "replaceErrorHandler",
            "throws": {
                "description": "a default error if there is no error handler"
            },
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 622,
            "description": "Monkey-patches the Papaya image loader to call the\n{{#crossLink \"PapayaService/finishedLoadingCallback:property\"}}{{/crossLink}}\nwith the loaded Papaya volume {header, data} object.",
            "itemtype": "method",
            "name": "injectFinishedLoadingCallback",
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/papaya.service.ts",
            "line": 650,
            "description": "Monkey-patches the Papaya cross-hair reposition handlers\nto call the\n{{#crossLink \"PapayaService/coordinateChangedCallback:property\"}}{{/crossLink}}\nwith the new coordinate.",
            "itemtype": "method",
            "name": "injectFinishedLoadingCallback",
            "access": "private",
            "tagname": "",
            "class": "PapayaService",
            "module": "image"
        },
        {
            "file": "build/src/image/xnat.js",
            "line": 8,
            "itemtype": "method",
            "name": "projectLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "project",
                    "description": "the project name"
                }
            ],
            "return": {
                "description": "the image store project directory"
            },
            "class": "XNAT",
            "module": "image"
        },
        {
            "file": "build/src/image/xnat.js",
            "line": 20,
            "description": "If the image sequence is a scan, then this method\nreturns the image sequence. Otherwise, this method\nreturns the scan from which the image sequence is\nderived.",
            "itemtype": "method",
            "name": "scanFor",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "the image sequence scan"
            },
            "class": "XNAT",
            "module": "image"
        },
        {
            "file": "build/src/image/xnat.js",
            "line": 51,
            "itemtype": "method",
            "name": "location",
            "params": [
                {
                    "name": "image",
                    "description": "the REST TimeSeries or Volume object"
                }
            ],
            "return": {
                "description": "the image file path relative to the web app root"
            },
            "class": "XNAT",
            "module": "image"
        },
        {
            "file": "build/src/language/language.ts",
            "line": 3,
            "description": "Makes an array filled with a value.",
            "itemtype": "method",
            "name": "dup",
            "params": [
                {
                    "name": "value",
                    "description": "the array item value",
                    "type": "Any"
                },
                {
                    "name": "n",
                    "description": "the array size",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the array of size *n* filled with *value*"
            },
            "class": "AppComponent",
            "module": "image"
        },
        {
            "file": "build/src/math/math.ts",
            "line": 3,
            "description": "Computes the minimum and maxiumum value of `collection`.\nThis method complements the lodash\n[http://devdocs.io/lodash~4/index#minBy](minBy) and\n[http://devdocs.io/lodash~4/index#maxBy](maxBy) functions\nby allowing an Object `collection`, supplying the\n`iteratee` two arguments (_value_, _key_), and iterating\nonly once over the collection. Non-numeric and non-finite\niteration results are ignored. If there is no numeric,\nfinite iteration result, then this method returns\n`undefined`.",
            "itemtype": "method",
            "name": "bounds",
            "params": [
                {
                    "name": "collection",
                    "description": "the collection to\n  iterate over",
                    "type": "Object|any[]"
                },
                {
                    "name": "iteratee",
                    "description": "the iteratee\n  invoked per element",
                    "type": "function=_.identity"
                }
            ],
            "return": {
                "description": "the [min, max] bounds"
            },
            "class": "ObjectHelper",
            "module": "main"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 72,
            "itemtype": "method",
            "name": "associate",
            "params": [
                {
                    "name": "key",
                    "description": "the property name"
                },
                {
                    "name": "value",
                    "description": "the property value"
                }
            ],
            "return": {
                "description": "the {key, value} object",
                "type": "Object"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 85,
            "itemtype": "method",
            "name": "delegate",
            "params": [
                {
                    "name": "objects",
                    "description": "the delegate objects"
                }
            ],
            "return": {
                "description": "a new object with properties from the given objects"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 96,
            "description": "Returns whether the given value has non-nil, non-empty\ncontent, determined as follows:\n* If the value is a string, then return whether the value\n  length is non-zero.\n* If the value is a number, then return whether the value\n  is finite.\n* If the value is an array or object, then return\n  whether the value has an indexed item with content.\n* Otherwise, return whether the value is neither undefined\n  nor null.\n\nThis method recurses into children to determine whether\nthe children have content.\n\nExamples:\n    ObjectHelper.hasContent(null) // => false\n    ObjectHelper.hasContent(NaN) // => false\n    ObjectHelper.hasContent(3) // => true\n    ObjectHelper.hasContent('a') // => true\n    ObjectHelper.hasContent([3, 2]) // => true\n    ObjectHelper.hasContent([]) // => false\n    ObjectHelper.hasContent([null]) // => false\n    ObjectHelper.hasContent({a: 1}) // => true\n    ObjectHelper.hasContent([{}, [[{}, [5]]]]) // => true",
            "itemtype": "method",
            "name": "hasContent",
            "params": [
                {
                    "name": "value",
                    "description": "the value to check",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "whether the value has content",
                "type": "Boolean"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 128,
            "description": "Returns whether the given value is nil, a string,\na number, a date or an array of simple values.\n\nExamples:\n    ObjectHelper.isSimple(null) // => true\n    ObjectHelper.isSimple({a: 1}) // => false\n    ObjectHelper.isSimple([3]) // => true\n    ObjectHelper.isSimple([2, [4, 1]]) // => true",
            "itemtype": "method",
            "name": "isSimple",
            "params": [
                {
                    "name": "value",
                    "description": "the value to check",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "whether the value is simple",
                "type": "Boolean"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 144,
            "description": "Pretty prints the given object in a readable format. This function\nhandles cycles by substituting an elipsis ('...') if a referenced\nobject has already been visited.",
            "itemtype": "method",
            "name": "prettyPrint",
            "params": [
                {
                    "name": "obj",
                    "description": "the object to print"
                }
            ],
            "return": {
                "description": "the string representation"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 175,
            "itemtype": "method",
            "name": "sortValuesByKey",
            "params": [
                {
                    "name": "obj",
                    "description": "the associative object"
                }
            ],
            "return": {
                "description": "the concatenated values array"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 182,
            "itemtype": "method",
            "name": "collectValues",
            "params": [
                {
                    "name": "objects",
                    "description": "the objects from which to collect the values"
                },
                {
                    "name": "accessor",
                    "description": "the associative object accessor callback or\n  property name"
                }
            ],
            "return": {
                "description": "the concatenated value objects"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 191,
            "description": "Concatenates the given current associative object\nvalues sorted by the associative keys to the given\naccumulator array.",
            "itemtype": "method",
            "name": "concatValues",
            "params": [
                {
                    "name": "accumulator",
                    "description": "the previous result array"
                },
                {
                    "name": "current",
                    "description": "the current associative object"
                }
            ],
            "return": {
                "description": "the concatenated results array"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 211,
            "itemtype": "method",
            "name": "propertiesEqual",
            "params": [
                {
                    "name": "obj",
                    "description": "the first object to compare"
                },
                {
                    "name": "other",
                    "description": "the second object to compare"
                }
            ],
            "return": {
                "description": "whether both objects have the same properties and\n  the corresponding property values are equal"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 235,
            "description": "Aliases the source object properties which are not already\ndefined in the destination object.",
            "itemtype": "method",
            "name": "aliasProperties",
            "params": [
                {
                    "name": "source",
                    "description": "the copy source object"
                },
                {
                    "name": "dest",
                    "description": "the copy destination object"
                },
                {
                    "name": "filter",
                    "description": "an optional function that filters the\n  properties to alias"
                }
            ],
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 251,
            "itemtype": "method",
            "name": "defineAlias",
            "params": [
                {
                    "name": "prop",
                    "description": "the source property to alias in the destination"
                }
            ],
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 280,
            "description": "Aliases the source object properties which are not already\ndefined in the destination object and satisfy thew following\nconditions:\n* the property name does not begin with an underscore (_)\n  or dollar sign ($)\n* the source property value is not a function",
            "itemtype": "method",
            "name": "aliasPublicDataProperties",
            "params": [
                {
                    "name": "source",
                    "description": "the copy source object"
                },
                {
                    "name": "dest",
                    "description": "the copy destination object"
                }
            ],
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 301,
            "description": "Parses the JSON data into a Javascript object and creates\ncamelCase property aliases for underscore property names.\nIf the input data is an array Eve REST result, signified\nby the presence of an _items array property, then this\nmethod returns an array of Javascript objects, each of\nwhich is recursively transformed by this function.",
            "itemtype": "method",
            "name": "fromJson",
            "params": [
                {
                    "name": "data",
                    "description": "the REST JSON data"
                }
            ],
            "return": {
                "description": "the Javascript object"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 315,
            "description": "Aliases the given underscore property.",
            "itemtype": "method",
            "name": "camelizeProperty",
            "params": [
                {
                    "name": "obj",
                    "description": "the input object to modify"
                },
                {
                    "name": "property",
                    "description": "the input property to alias"
                }
            ],
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/object/object-helper.js",
            "line": 344,
            "description": "Aliases underscore properties with camelCase properties.",
            "itemtype": "method",
            "name": "camelizeProperties",
            "params": [
                {
                    "name": "obj",
                    "description": "the input object to modify"
                }
            ],
            "return": {
                "description": "the input object"
            },
            "class": "ObjectHelper",
            "module": "object"
        },
        {
            "file": "build/src/page/page.component.ts",
            "line": 10,
            "description": "The help content.",
            "itemtype": "property",
            "name": "help",
            "type": "String",
            "class": "PageComponent",
            "module": "page"
        },
        {
            "file": "build/src/page/page.component.ts",
            "line": 17,
            "description": "The error message to display.",
            "itemtype": "property",
            "name": "error",
            "type": "String",
            "class": "PageComponent",
            "module": "page"
        },
        {
            "file": "build/src/page/page.component.ts",
            "line": 24,
            "description": "The help string is fed into the help pull-down when the help button\nis clicked. The standard mechanism is the `qi-help` directive\nincluded by partial.pug in the help block. Superclasses which\ndon't supply a help argument are responsible for overriding\nthe help block, e.g. as is done by\n{{#crossLink \"CollectionsComponent\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "help",
                    "description": "the optional help text",
                    "type": "String"
                }
            ],
            "class": "PageComponent",
            "module": "page"
        },
        {
            "file": "build/src/page/page.component.ts",
            "line": 39,
            "description": "Sets the error property which triggers the error pop-pup.\nThe subclass has the responsibility of binding an error event\nto this handler, e.g.:\n\n    qi-some-directive((error)=\"onError($event)\")",
            "itemtype": "method",
            "name": "onError",
            "params": [
                {
                    "name": "message",
                    "description": "the error messaage",
                    "type": "String"
                }
            ],
            "class": "PageComponent",
            "module": "page"
        },
        {
            "file": "build/src/page/page.component.ts",
            "line": 53,
            "description": "Unsets the error property.",
            "itemtype": "method",
            "name": "clearError",
            "class": "PageComponent",
            "module": "page"
        },
        {
            "file": "build/src/projects/project-item.component.ts",
            "line": 19,
            "description": "Opens the Collections List page for the given project.",
            "itemtype": "method",
            "name": "visitCollections",
            "params": [
                {
                    "name": "project",
                    "description": "the project name to visit",
                    "type": "String"
                }
            ],
            "class": "ProjectItemComponent",
            "module": "page"
        },
        {
            "file": "build/src/projects/projects.component.spec.ts",
            "line": 18,
            "itemtype": "method",
            "name": "getProjects",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the mock project objects sequence",
                "type": "Observable"
            },
            "class": "ProjectsServiceStub",
            "module": "projects"
        },
        {
            "file": "build/src/projects/projects.component.spec.ts",
            "line": 52,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "body",
                    "description": "the\n  test body",
                    "type": "Function(CollectionsComponent, CollectionsService)"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ProjectsHelpServiceStub",
            "module": "projects"
        },
        {
            "file": "build/src/projects/projects.component.ts",
            "line": 27,
            "description": "The project REST objects.",
            "itemtype": "property",
            "name": "projects",
            "type": "Object[]",
            "class": "ProjectsComponent",
            "module": "projects"
        },
        {
            "file": "build/src/projects/projects.component.ts",
            "line": 34,
            "description": "Flag indicating whether there are no projects.\nSee {{#crossLink \"CollectionsComponent\"}}{{/crossLink}}\nfor the rationale for this property.",
            "itemtype": "property",
            "name": "isEmpty",
            "type": "Boolean",
            "class": "ProjectsComponent",
            "module": "projects"
        },
        {
            "file": "build/src/projects/projects.service.ts",
            "line": 22,
            "itemtype": "method",
            "name": "getProjects",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the REST project objects",
                "type": "Observable"
            },
            "class": "ProjectsService",
            "module": "project"
        },
        {
            "file": "build/src/rest/rest.js",
            "line": 17,
            "description": "Formats the {where: condition} Eve REST query parameter. Each key\nin the condition parameters is quoted. The condition value is\nunquoted for numbers, escape-quoted otherwise. A non-numeric\ncondition value is converted to a string before being quoted.\n\nExamples:\n    where({number: 2}) => {where:\"{\\\"number: 2}\"\n\n    where({project: QIN}) => {where:\"{\\\"project: \\\"QIN\\\"}\"\n\nTODO - add moment parameter date conversion.\n\nTODO - add object parameter embedded document conversion, e.g.:\n  where({session: {number: 3}}) => {where:\"{\\\"session.number\\\": 3}\"",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "params",
                    "description": "the input parameters"
                }
            ],
            "return": {
                "description": "the REST condition query parameter"
            },
            "class": "REST",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.js",
            "line": 39,
            "itemtype": "method",
            "name": "formatFieldCondition",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "field",
                    "description": "the request field"
                },
                {
                    "name": "value",
                    "description": "the request value"
                }
            ],
            "return": {
                "description": "the formatted Eve",
                "type": "Where: condition"
            },
            "class": "REST",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.js",
            "line": 72,
            "description": "Formats the {field: flag} Eve REST query projection parameter.\nThe fields argument can be a single field name or an array of\nfield names.",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "fields",
                    "description": "the Javascript camelCase data properties to select"
                }
            ],
            "return": {
                "description": "the formatted Eve",
                "type": "Projection: critierion"
            },
            "class": "REST",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.js",
            "line": 95,
            "description": "Formats the {field: flag} Eve REST query projection parameter.",
            "itemtype": "method",
            "name": "omit",
            "params": [
                {
                    "name": "fields",
                    "description": "the Javascript camelCase data properties to exclude"
                }
            ],
            "return": {
                "description": "the formatted Eve",
                "type": "Projection: critierion"
            },
            "class": "REST",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.js",
            "line": 113,
            "description": "Parses the JSON data into a Javascript object and creates\ncamelCase property aliases for underscore property names.\nIf the input data is an array Eve REST result, signified\nby the presence of an _items array property, then this\nmethod returns an array of Javascript objects, each of\nwhich is recursively transformed by this function.",
            "itemtype": "method",
            "name": "transformResponse",
            "params": [
                {
                    "name": "res",
                    "description": "the HTTP response object"
                }
            ],
            "return": {
                "description": "the Javascript object"
            },
            "class": "REST",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.js",
            "line": 127,
            "description": "Aliases the given underscore property.",
            "itemtype": "method",
            "name": "camelizeProperty",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "the input object to modify"
                },
                {
                    "name": "property",
                    "description": "the input property to alias"
                }
            ],
            "class": "REST",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.js",
            "line": 157,
            "description": "Aliases underscore properties with camelCase properties.",
            "itemtype": "method",
            "name": "camelizeProperties",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "the input object to modify"
                }
            ],
            "return": {
                "description": "the input object"
            },
            "class": "REST",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.resource.ts",
            "line": 34,
            "description": "Fetches the sole REST object which satisfies the given MongoDB\nsearch criterion, if any.",
            "example": [
                "\n    import REST from '../rest/rest.coffee;'\n    criterion = REST.where({id: id});\n    subject = resource.findOne(criterion);\n    subject.subscribe(sbj => console.log(\"Subject \", sbj.number));"
            ],
            "itemtype": "method",
            "name": "findOne",
            "params": [
                {
                    "name": "criterion",
                    "description": "the search criterion",
                    "type": "String"
                }
            ],
            "return": {
                "description": "an observable which resolves to the\n  single search result object, or null if no match",
                "type": "Observable<any"
            },
            "class": "RestResource",
            "module": "rest"
        },
        {
            "file": "build/src/rest/rest.resource.ts",
            "line": 55,
            "description": "Fetches the REST objects which satisfy the given MongoDB\nsearch criterion.\n\nAlthough the MongoDB response is always a single JSON object,\nthe base class `Resource.query` response contains an array of\nmatching REST objects embedded in the `_items` response entry.\nThis method unpacks the response and returns a `Observable`\nwhich emits one matching REST object array.",
            "example": [
                "\n    import REST from '../rest/rest.coffee;'\n    criterion = REST.where({project: projectName});\n    subjects = resource.find(criterion);\n    subjects.subscribe(sbjs => console.log('%s subjects', sbjs.length));"
            ],
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "criterion",
                    "description": "the optional search criterion",
                    "type": "String"
                }
            ],
            "return": {
                "description": "an observable sequence of search result\n  objects",
                "type": "Observable"
            },
            "class": "RestResource",
            "module": "rest"
        },
        {
            "file": "build/src/roman/roman.js",
            "line": 12,
            "itemtype": "method",
            "name": "repeat",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "s",
                    "description": "the string to repeat"
                },
                {
                    "name": "n",
                    "description": "the number of repititions"
                }
            ],
            "return": {
                "description": "the string repeated n times"
            },
            "class": "Roman",
            "module": "roman"
        },
        {
            "file": "build/src/roman/roman.js",
            "line": 26,
            "itemtype": "method",
            "name": "genRomans",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "one",
                    "description": "the one character"
                },
                {
                    "name": "five",
                    "description": "the five character"
                },
                {
                    "name": "ten",
                    "description": "the ten character"
                },
                {
                    "name": "max",
                    "description": "the number of roman numerals to generate\n  (0 to 10, default 10)"
                }
            ],
            "return": {
                "description": "an array of the roman numerals"
            },
            "throws": {
                "description": "Error if one of the characters or the max is invalid"
            },
            "class": "Roman",
            "module": "roman"
        },
        {
            "file": "build/src/roman/roman.js",
            "line": 46,
            "itemtype": "method",
            "name": "genRoman",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "n",
                    "description": "the input integer"
                }
            ],
            "return": {
                "description": "the corresponding roman numeral in one, five\n   and ten units"
            },
            "class": "Roman",
            "module": "roman"
        },
        {
            "file": "build/src/roman/roman.js",
            "line": 96,
            "itemtype": "method",
            "name": "incrementMax",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "the input `sum` shifted left one unit place\n  and incremented by the number of roman numerals for\n  the given `place`."
            },
            "class": "Roman",
            "module": "roman"
        },
        {
            "file": "build/src/roman/roman.js",
            "line": 129,
            "itemtype": "method",
            "name": "romanize",
            "params": [
                {
                    "name": "value",
                    "description": "the input string or integer"
                }
            ],
            "return": {
                "description": "the roman numeral string"
            },
            "throws": {
                "description": "RangeError if the string value is not a string consisting of\n  positive digits less than 4000"
            },
            "class": "Roman",
            "module": "roman"
        },
        {
            "file": "build/src/roman/roman.js",
            "line": 154,
            "description": "Prepends the roman numeral conversion of the right-most digit to the\ngiven roman numeral. This function removes the right-most digit from\nthe digits array.",
            "itemtype": "method",
            "name": "prepend",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "roman",
                    "description": "the roman numeral to augment"
                },
                {
                    "name": "place",
                    "description": "the roman numeral place index"
                }
            ],
            "return": {
                "description": "the augmented roman numeral"
            },
            "class": "Roman",
            "module": "roman"
        },
        {
            "file": "build/src/roman/romanize.pipe.ts",
            "line": 5,
            "description": "Transforms an Arabic integer to a Roman numberal (seriously).",
            "class": "ImageSequence",
            "module": "roman"
        },
        {
            "file": "build/src/roman/romanize.pipe.ts",
            "line": 13,
            "description": "Delegates to\n{{#crossLink \"Roman/romanize\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "the input integer",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the corresponding roman numberal",
                "type": "String"
            },
            "class": "ImageSequence",
            "module": "roman"
        },
        {
            "file": "build/src/session/image-sequence.data.js",
            "line": 17,
            "description": "Recursively extends the image sequence time series and\nvolumes.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "imageSequence",
                    "description": "the scan or registration REST object\n  to extend"
                }
            ],
            "return": {
                "description": "the extended REST image sequence object"
            },
            "class": "ImageSequence",
            "module": "session"
        },
        {
            "file": "build/src/session/image-sequence.data.js",
            "line": 42,
            "itemtype": "method",
            "name": "isMultiVolume",
            "return": {
                "description": "whether this image sequence contain more than one\n  volume"
            },
            "class": "ImageSequence",
            "module": "session"
        },
        {
            "file": "build/src/session/image-sequence.data.js",
            "line": 51,
            "description": "Determines the volume with maximal intensity, determined as\nfollows:\n* If there is only one volume, then return that volume.\n* Otherwise, if at least one volume has an `averageIntensity`\n  property value, then return the volume with the maximal\n  intensity value.\n* Otherwise, return null.",
            "itemtype": "method",
            "name": "maximalIntensityVolume",
            "return": {
                "description": "the  volume with maximal intensity, or null if\n  such a volume could not be determined"
            },
            "class": "ImageSequence",
            "module": "session"
        },
        {
            "file": "build/src/session/image-sequence.service.spec.ts",
            "line": 31,
            "itemtype": "method",
            "name": "getSession",
            "params": [
                {
                    "name": "params",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the hard-coded session object",
                "type": "Observable<any>"
            },
            "class": "ImageSequenceSessionServiceStub",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/image-sequence.service.spec.ts",
            "line": 48,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(SubjectsComponent, SubjectService)"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ImageSequenceServiceSpec",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/image-sequence.service.ts",
            "line": 21,
            "description": "Makes the image sequence secondary key from the given\nroute parameters. The image sequence secondary key is\nthe scan or registration number and the sequence parent\nsecondary key, recursively defined up to the subject\nsecondary key.",
            "example": [
                "\n    secondaryKey({\n      project: 'QIN', collection: 'Breast', subject: '4',\n      session: 3, scan: 1, registration: 1\n    }) =>\n    {\n      scan: {\n        session: {\n          subject: {project: 'QIN', collection: 'Breast', number: 4},\n          number: 3\n        },\n        number: 1\n      },\n      number: 1\n    }"
            ],
            "itemtype": "method",
            "name": "secondaryKey",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the corresponding secondary key",
                "type": "Object"
            },
            "class": "IamgeSequenceService",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/image-sequence.service.ts",
            "line": 61,
            "description": "Makes a place-holder image sequence sufficient to display a title.\nThe place-holder extends the\n{{#crossLink \"ImageSequenceService/secondaryKey\"}}{{/crossLink}}\nusing the various data utility service `extend` methods,\nwhich in turn enables the sequence *title* virtual property.",
            "itemtype": "method",
            "name": "placeHolder",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the place-holder image sequence object",
                "type": "ImageSequence"
            },
            "class": "IamgeSequenceService",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/image-sequence.service.ts",
            "line": 90,
            "itemtype": "method",
            "name": "getImageSequence",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the REST image sequence object, or null if not found",
                "type": "Any"
            },
            "class": "IamgeSequenceService",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/image-sequence.service.ts",
            "line": 105,
            "itemtype": "method",
            "name": "findImageSequence",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                },
                {
                    "name": "session",
                    "description": "the session object holding the volume",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the REST image sequence object, or null if not found",
                "type": "Any"
            },
            "class": "IamgeSequenceService",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 6,
            "itemtype": "method",
            "name": "associate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "accum",
                    "description": "the object in which to place the\n  source type:  associations",
                    "type": "Source id: result"
                },
                {
                    "name": "session",
                    "description": "the session object"
                }
            ],
            "return": {
                "description": "the accumulator object"
            },
            "class": "LabelMap",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 47,
            "itemtype": "method",
            "name": "flattenBySource",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "protocolId",
                    "description": "protocol database id"
                },
                {
                    "name": "srcAssoc",
                    "description": "the `[[{source type: {source id: results}}`\n  object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the `[[{protocol, source, results}, ...], ...]`\n  array",
                "type": "Object[]"
            },
            "class": "LabelMap",
            "module": "imageSequence"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 104,
            "description": "Adds the following modeling label map properties:\n* parameterResult - the parent parameter result object\n* key - the parent parameterResult key",
            "itemtype": "method",
            "name": "extend",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "labelMap",
                    "description": "the object to extend"
                },
                {
                    "name": "paramResult",
                    "description": "the parent parameter result"
                }
            ],
            "class": "LabelMap",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 140,
            "description": "Adds the following modeling parameter result properties:\n* key - the parameter result access property name\n* modelingResult - the parent modeling result\n  reference\n* overlay - the label map, if it exists and has a\n  color table\n\nIn addition, if there is a label map, then this function\nsets the label map parent modeling parameter reference.",
            "itemtype": "method",
            "name": "extend",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "paramResult",
                    "description": "the object to extend"
                },
                {
                    "name": "modelingResult",
                    "description": "the parent modeling result object"
                },
                {
                    "name": "key",
                    "description": "the parameter result access property name"
                }
            ],
            "class": "ParameterResult",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 167,
            "itemtype": "method",
            "name": "overlay",
            "return": {
                "description": "the parameter result label map"
            },
            "class": "ParameterResult",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 177,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "the parameter result title"
            },
            "class": "ParameterResult",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 203,
            "description": "Extends the parameter result objects as described\nin\n{{#crossLink \"ParameterResult/extend\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "extend",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "modelingResult",
                    "description": "the modeling result object to extend"
                }
            ],
            "class": "ModelingResult",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 237,
            "description": "Extends the modeling results as described in\n{{#crossLink \"ModelingResult/extend\"}}{{/crossLink}}\nand adds the following modeling object properties:\n* session - the parent session object reference\n* overlays - the modeling result overlays\n* intensities - the modeling result {param: intensity}\n  object\n* title - the parent session title followed by the\n  modeling resource name",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "modeling",
                    "description": "the modeling object to extend"
                },
                {
                    "name": "session",
                    "description": "the parent session object"
                }
            ],
            "class": "Modeling",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 260,
            "itemtype": "method",
            "name": "intensities",
            "return": {
                "description": "the modeling result parameter \n  object",
                "type": "Name: intensity"
            },
            "class": "Modeling",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 271,
            "itemtype": "method",
            "name": "overlays",
            "return": {
                "description": "the modeling results which have an overlay,\n  sorted by modeling parameter name"
            },
            "class": "Modeling",
            "module": "session"
        },
        {
            "file": "build/src/session/modeling.data.js",
            "line": 296,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "the modeling title"
            },
            "class": "Modeling",
            "module": "session"
        },
        {
            "file": "build/src/session/registration.data.js",
            "line": 16,
            "description": "Extends the given registration object as follows:\n* Adds the scan parent reference property\n* Adds the ImageSequence properties\n* Sets the registration number\n* Adds the title and session virtual properties",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "registration",
                    "description": "the Registration object to extend"
                },
                {
                    "name": "scan",
                    "description": "the source scan"
                },
                {
                    "name": "number",
                    "description": "the one-based registration number within the scan"
                }
            ],
            "return": {
                "description": "the extended registration object"
            },
            "class": "Registration",
            "module": "session"
        },
        {
            "file": "build/src/session/registration.data.js",
            "line": 35,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "the display title"
            },
            "class": "Registration",
            "module": "session"
        },
        {
            "file": "build/src/session/registration.data.js",
            "line": 45,
            "description": "An ImageSequence present a uniform interface, which\nincludes a bolus arrival index and session reference.",
            "itemtype": "method",
            "name": "session",
            "return": {
                "description": "the registration scan session"
            },
            "class": "Registration",
            "module": "session"
        },
        {
            "file": "build/src/session/registration.data.js",
            "line": 58,
            "itemtype": "method",
            "name": "bolusArrivalIndex",
            "return": {
                "description": "the registration scan bolus arrival"
            },
            "class": "Registration",
            "module": "session"
        },
        {
            "file": "build/src/session/registration.data.js",
            "line": 71,
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "scan",
                    "description": "the Scan object to search"
                },
                {
                    "name": "number",
                    "description": "the registration number within the scan"
                }
            ],
            "return": {
                "description": "the scan object"
            },
            "throws": {
                "description": "ReferenceError if the session does not have the scan"
            },
            "class": "Registration",
            "module": "session"
        },
        {
            "file": "build/src/session/scan.data.js",
            "line": 17,
            "description": "Extends the scan REST object as follows:\n* Adds the session parent reference property\n* Converts the scan number to an integer\n* Adds the ImageSequence properties\n* Extends the reg follows:\n  Registration.extend",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "scan",
                    "description": "the scan to extend"
                },
                {
                    "name": "session",
                    "description": "the parent session object"
                }
            ],
            "return": {
                "description": "the extended scan object"
            },
            "class": "Scan",
            "module": "session"
        },
        {
            "file": "build/src/session/scan.data.js",
            "line": 37,
            "description": "The parent {{#crossLink \"Session\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "session",
            "type": "Object",
            "class": "Scan",
            "module": "session"
        },
        {
            "file": "build/src/session/scan.data.js",
            "line": 44,
            "description": "The DICOM scan number.",
            "itemtype": "property",
            "name": "number",
            "type": "Number",
            "class": "Scan",
            "module": "session"
        },
        {
            "file": "build/src/session/scan.data.js",
            "line": 52,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "the display title"
            },
            "class": "Scan",
            "module": "session"
        },
        {
            "file": "build/src/session/scan.data.js",
            "line": 73,
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "session",
                    "description": "the session object to search"
                },
                {
                    "name": "number",
                    "description": "the scan number"
                }
            ],
            "return": {
                "description": "the scan object"
            },
            "throws": {
                "description": "ReferenceError if the session does not have the scan"
            },
            "class": "Scan",
            "module": "session"
        },
        {
            "file": "build/src/session/session.component.spec.ts",
            "line": 23,
            "itemtype": "method",
            "name": "secondaryKey",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the mock session object sequence",
                "type": "Observable"
            },
            "class": "SessionServiceStub",
            "module": "session"
        },
        {
            "file": "build/src/session/session.component.spec.ts",
            "line": 33,
            "itemtype": "method",
            "name": "getSessions",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the mock session object sequence",
                "type": "Observable"
            },
            "class": "SessionServiceStub",
            "module": "session"
        },
        {
            "file": "build/src/session/session.component.spec.ts",
            "line": 64,
            "description": "The hard-coded stunt route params.",
            "itemtype": "property",
            "name": "params",
            "type": "Observable<Object>",
            "class": "SessionActivatedRouteStub",
            "module": "session"
        },
        {
            "file": "build/src/session/session.component.spec.ts",
            "line": 88,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(SessionComponent, SubectService)"
                }
            ],
            "class": "SessionComponentSpec",
            "module": "session"
        },
        {
            "file": "build/src/session/session.component.ts",
            "line": 25,
            "description": "The session REST object.",
            "itemtype": "property",
            "name": "session",
            "type": "Object",
            "class": "SessionComponent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.component.ts",
            "line": 32,
            "description": "The project name.",
            "itemtype": "property",
            "name": "project",
            "type": "String",
            "readonly": "",
            "class": "SessionComponent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.component.ts",
            "line": 71,
            "description": "Opens the Volume Detail page.",
            "itemtype": "method",
            "name": "visitVolume",
            "params": [
                {
                    "name": "volume",
                    "description": "the volume REST object",
                    "type": "Object"
                }
            ],
            "class": "SessionComponent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 14,
            "itemtype": "method",
            "name": "getOverlays",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "session",
                    "description": "the session to navigate"
                }
            ],
            "return": {
                "description": "the session \n  associative object, or null if there are no overlays",
                "type": "Modeling protocol: overlays"
            },
            "class": "Session",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 25,
            "itemtype": "method",
            "name": "associate",
            "params": [
                {
                    "name": "accum",
                    "description": "the  associative\n  accumulator object",
                    "type": "Modeling protocol: overlays"
                },
                {
                    "name": "modeling",
                    "description": "the modeling object to check"
                }
            ],
            "return": {
                "description": "the augmented accumulator"
            },
            "class": "Session",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 66,
            "description": "Fixes the session acquisition date and adds the following\nsession properties:\n* number - the one-based session number in acquisition order\n* subject - the session parent subject reference\n* overlays - the {modeling protocol id: [label map objects]}\n  for those label maps which have a color table",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "session",
                    "description": "the REST session object to extend"
                },
                {
                    "name": "subject",
                    "description": "the parent REST subject object"
                },
                {
                    "name": "number",
                    "description": "the session number"
                }
            ],
            "return": {
                "description": "the extended session object"
            },
            "class": "Session",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 82,
            "description": "The one-based subject session index in date order.",
            "itemtype": "property",
            "name": "number",
            "type": "Number",
            "class": "Session",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 119,
            "description": "The extent length x width x depth in cubic\ncentimeters.",
            "itemtype": "property",
            "name": "volume",
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 136,
            "description": "Fetches the session detail REST object for the given session.\nThe session object is extended with the detail properties.",
            "itemtype": "method",
            "name": "extendDetail",
            "params": [
                {
                    "name": "detail",
                    "description": "the detail object fetched from the database"
                }
            ],
            "return": {
                "description": "a promise which resolves to the extended session\n  object"
            },
            "throws": {
                "description": "ReferenceError if the detail was not found"
            },
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 164,
            "description": "The display title.",
            "itemtype": "property",
            "name": "title",
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 175,
            "description": "The inclusive one-based number of days from the first\nsession date to this session date.",
            "itemtype": "property",
            "name": "day",
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 187,
            "description": "The [_parent_, {session: _session_}] path, where:\n* _parent_ is the parent subject path items\n* _session_ is the session number",
            "itemtype": "property",
            "name": "path",
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 204,
            "description": "The first modeling with a scan source.",
            "itemtype": "property",
            "name": "scanModeling",
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 215,
            "description": "The first modeling with a registration source.",
            "itemtype": "property",
            "name": "registrationModeling",
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 226,
            "description": "The sum of all tumor volumes.",
            "itemtype": "property",
            "name": "tumorVolume",
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.data.js",
            "line": 238,
            "itemtype": "method",
            "name": "hasDetailProperties",
            "return": {
                "description": "whether this session is extended with the session\n  detail REST database object"
            },
            "class": "SessionTumorExtent",
            "module": "session"
        },
        {
            "file": "build/src/session/session.service.spec.ts",
            "line": 46,
            "itemtype": "method",
            "name": "findOne",
            "params": [
                {
                    "name": "params",
                    "description": "the search specification",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the hard-coded subject, or null if\n   no match",
                "type": "Observable<any>"
            },
            "class": "SessionSubjectResourceStub",
            "module": "subject"
        },
        {
            "file": "build/src/session/session.service.spec.ts",
            "line": 69,
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "params",
                    "description": "the search specification",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the hard-coded session detail, or null if\n   no match",
                "type": "Observable<any>"
            },
            "class": "SessionDetailResourceStub",
            "module": "session"
        },
        {
            "file": "build/src/session/session.service.spec.ts",
            "line": 92,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(SessionsComponent, SessionService)"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "SessionServiceSpec",
            "module": "session"
        },
        {
            "file": "build/src/session/session.service.ts",
            "line": 21,
            "description": "Makes the {_subject_, number: _number_} secondary key from the\ngiven route parameters, where:\n* _subject_ is the {{#crossLink \"SubjectService\"}}{{/crossLink}}\n  secondary key\n* _number_ is the _session_ parameter",
            "itemtype": "method",
            "name": "secondaryKey",
            "params": [
                {
                    "name": "params",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the corresponding secondary key",
                "type": "Object"
            },
            "class": "SessionService",
            "module": "session"
        },
        {
            "file": "build/src/session/session.service.ts",
            "line": 38,
            "itemtype": "method",
            "name": "getSession",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                },
                {
                    "name": "detail",
                    "description": "flag indicating whether to fetch the\n  session detail and add the detail content to the session\n  object",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the REST session object, if found,\n  otherwise null",
                "type": "Observable<any>"
            },
            "class": "SessionService",
            "module": "session"
        },
        {
            "file": "build/src/session/session.service.ts",
            "line": 69,
            "description": "Fetches the detail REST object for the given session object.",
            "itemtype": "method",
            "name": "getSessionDetail",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "session",
                    "description": "the session whose detail is to be fetched",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "an observable which resolves to the\n  session object extended with the detail properties",
                "type": "Observable<Object>"
            },
            "class": "SessionService",
            "module": "session"
        },
        {
            "file": "build/src/session/time-series.data.js",
            "line": 5,
            "description": "Adds the following properties to the given REST Image\nobject:\n* the Image.extend properties\n* _timeSeries_ - the parent time series\n* _resource_ - the parent time series name",
            "itemtype": "method",
            "name": "extendImage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "image",
                    "description": "the child Image object"
                },
                {
                    "name": "timeSeries",
                    "description": "the parent TimeSeries object"
                }
            ],
            "class": "TimeSeries",
            "module": "session"
        },
        {
            "file": "build/src/session/time-series.data.js",
            "line": 24,
            "itemtype": "method",
            "name": "resource",
            "return": {
                "description": "the parent time series name"
            },
            "class": "TimeSeries",
            "module": "session"
        },
        {
            "file": "build/src/session/time-series.data.js",
            "line": 34,
            "itemtype": "method",
            "name": "imageSequence",
            "return": {
                "description": "the parent time series parent image sequence"
            },
            "class": "TimeSeries",
            "module": "session"
        },
        {
            "file": "build/src/session/time-series.data.js",
            "line": 57,
            "description": "Adds the following properties to the given REST TimeSeries\nobject:\n* _imageSequence_ - the abstract parent image sequence\n  reference\n* the concrete parent *scan* or *registration* reference\n\nThe time series *image* is also extended as described in\n`extendImage`.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "timeSeries",
                    "description": "the REST TimeSeries object to extend"
                },
                {
                    "name": "imageSequence",
                    "description": "the parent ImageSequence object"
                }
            ],
            "return": {
                "description": "the extended TimeSeries"
            },
            "class": "TimeSeries",
            "module": "session"
        },
        {
            "file": "build/src/session/time-series.data.js",
            "line": 86,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "the display title"
            },
            "class": "TimeSeries",
            "module": "session"
        },
        {
            "file": "build/src/string/string-helper.js",
            "line": 22,
            "description": "Improves on underscore.string dasherize by converting each\nsequence of two or more capital letters to lowercase without\ndashes, e.g.:\n    StringHelper.dasherize('TNM')\nreturns 'tnm' rather than the underscore.string result '-t-n-m'.",
            "itemtype": "method",
            "name": "dasherize",
            "params": [
                {
                    "name": "s",
                    "description": "the input string"
                }
            ],
            "return": {
                "description": "the lowercase dashed conversion"
            },
            "class": "StringHelper",
            "module": "string"
        },
        {
            "file": "build/src/string/string-helper.js",
            "line": 55,
            "description": "Humanizes and capitalizes the input string.\n\nExample:\n    StringHelper.labelize(\"abcDef_g\");\n    // => \"Abc Def G\"",
            "itemtype": "method",
            "name": "labelize",
            "params": [
                {
                    "name": "s",
                    "description": "the input string"
                }
            ],
            "return": {
                "description": "the lowercase dashed conversion"
            },
            "class": "StringHelper",
            "module": "string"
        },
        {
            "file": "build/src/subject/encounter.data.js",
            "line": 15,
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "encounter",
                    "description": "the subject encounter"
                },
                {
                    "name": "subject",
                    "description": "the parent subject REST object"
                }
            ],
            "return": {
                "description": "the augmented encounter object"
            },
            "class": "Encounter",
            "module": "subject"
        },
        {
            "file": "build/src/subject/encounter.data.js",
            "line": 29,
            "description": "The parent {{#crossLink \"Subject\"}}{{/crossLink}} REST object.",
            "itemtype": "property",
            "name": "subject",
            "class": "Encounter",
            "module": "subject"
        },
        {
            "file": "build/src/subject/encounter.data.js",
            "line": 36,
            "itemtype": "method",
            "name": "isSession",
            "return": {
                "description": "whether the encounter class is `Session`"
            },
            "class": "Encounter",
            "module": "subject"
        },
        {
            "file": "build/src/subject/encounter.data.js",
            "line": 44,
            "itemtype": "method",
            "name": "isClinical",
            "return": {
                "description": "whether the encounter is not a session"
            },
            "class": "Encounter",
            "module": "subject"
        },
        {
            "file": "build/src/subject/encounter.data.js",
            "line": 53,
            "description": "The patient age at the time of the encounter.",
            "itemtype": "property",
            "name": "age",
            "class": "Encounter",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 22,
            "itemtype": "method",
            "name": "secondaryKey",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the mock subject object sequence",
                "type": "Observable"
            },
            "class": "SubjectServiceStub",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 32,
            "itemtype": "method",
            "name": "getSubjects",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the mock subject object sequence",
                "type": "Observable"
            },
            "class": "SubjectServiceStub",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 60,
            "description": "The hard-coded stunt route params.",
            "itemtype": "property",
            "name": "params",
            "type": "Observable<Object>",
            "class": "SubjectActivatedRouteStub",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.spec.ts",
            "line": 85,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(SubjectComponent, SubectService)"
                }
            ],
            "class": "SubjectComponentSpec",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 26,
            "description": "The modeling display formats, `chart` or `table`.",
            "itemtype": "property",
            "name": "MODELING_FORMATS",
            "type": "String",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 49,
            "description": "The subject to display.",
            "itemtype": "property",
            "name": "subject",
            "type": "Object",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 56,
            "description": "The subject demographics sub-object.",
            "itemtype": "property",
            "name": "demographics",
            "type": "Object",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 66,
            "description": "The modeling display format, `chart` or `table`.",
            "itemtype": "property",
            "name": "modelingFormat",
            "type": "String",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 75,
            "description": "A\n{{#crossLink \"SubjectComponent/getLabel\"}}{{/crossLink}}\nwrapper that can be used in templates.",
            "itemtype": "property",
            "name": "label",
            "type": "Function",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 84,
            "description": "The discrete property {path: {value: label}} tick label choices.",
            "itemtype": "property",
            "name": "valueChoices",
            "type": "Object",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 91,
            "description": "The project name.",
            "itemtype": "property",
            "name": "project",
            "type": "String",
            "readonly": "",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 101,
            "description": "The\n{{#crossLink \"SubjectComponent/MODELING_FORMATS:property\"}}{{/crossLink}}\nindex to obtain the\n{{#crossLink \"SubjectComponent/modelingFormat:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_modelingFormatIndex",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 144,
            "description": "Delegates to\n{{#crossLink \"ConfigurationService/getHTMLLabel\"}}{{/crossLink}},",
            "itemtype": "method",
            "name": "getLabel",
            "params": [
                {
                    "name": "property",
                    "description": "the property path",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the display HTML label",
                "type": "String"
            },
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 156,
            "description": "Delegates to\n{{#crossLink \"ObjectHelper/hasValidContent\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "value",
                    "description": "the value to check",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "whether the value has displayable content",
                "type": "Boolean"
            },
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 168,
            "description": "Returns the image {{#crossLink \"ImageStore\"}}{{/crossLink}}\nfile location.",
            "itemtype": "method",
            "name": "location",
            "params": [
                {
                    "name": "image",
                    "description": "the image object",
                    "type": "Image"
                }
            ],
            "return": {
                "description": "the server image file path relative to the server\n  web app root",
                "type": "String"
            },
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 181,
            "description": "Sets the\n{{#crossLink \"SubjectComponent/modelingFormat:property\"}}{{/crossLink}}\nto the other value.",
            "itemtype": "method",
            "name": "tnmStageHelp",
            "raise": "{Error} if the collection does not have help",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 194,
            "description": "Shows the PK modeling help pop-up.",
            "itemtype": "method",
            "name": "openModelingHelp",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 208,
            "description": "Shows the TNM stage modal help pop-up. The help is\nspecialized for the subject collection.",
            "itemtype": "method",
            "name": "tnmStageHelp",
            "raise": "{Error} if the collection does not have help",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 234,
            "description": "Shows the recurrence score help pop-up.",
            "itemtype": "method",
            "name": "openRecurrenceScoreHelp",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 248,
            "description": "Shows the RCB help pop-up.",
            "itemtype": "method",
            "name": "openRCBHelp",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 262,
            "description": "Shows the dosage amount help pop-up.",
            "itemtype": "method",
            "name": "openDosageAmountHelp",
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.component.ts",
            "line": 276,
            "description": "Opens the Session Detail page.",
            "itemtype": "method",
            "name": "visitSession",
            "params": [
                {
                    "name": "session",
                    "description": "the session REST object",
                    "type": "Object"
                }
            ],
            "class": "SubjectComponent",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 80,
            "description": "Collects the modeling results into a [_modelings_] array,\nwhere _modelings_ is a {{source, protocol, results}},\nthe ``source`` value is a {source type, source protocol}\nobject, ``protocol`` is the modeling protocol, and\n``results`` is an array of modeling results in session\nnumber order.",
            "itemtype": "method",
            "name": "collect",
            "params": [
                {
                    "name": "subject",
                    "description": "the parent subject",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the\n  {_sourceType_: {_sourceProtocol_: {_modelingProtocol_: _results_}}}\n  associative object,\n  where the results are an array in session number order",
                "type": "Object"
            },
            "class": "ModelingResults",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 144,
            "description": "Makes the following changes to the given subject object:\n* add parent references\n* add the subject modeling property\n* add the age property\n* anonymize the birth date by setting it to July 7\n* convert the session and encounter dates into moments\n* set the subject isMultiSession method",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subject",
                    "description": "the REST Subject object to extend"
                }
            ],
            "return": {
                "description": "the extended Subject"
            },
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 163,
            "itemtype": "property",
            "name": "title",
            "return": {
                "description": "the subject display title"
            },
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 173,
            "description": "Determines this subject's age relative to the preferred\nreference date, determined as follows:\n* the diagnosis date, if available\n* otherwise, the first encounter date, if any\n* otherwise, today if there are no encounters",
            "itemtype": "method",
            "name": "age",
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 199,
            "itemtype": "property",
            "name": "clinicalEncounters",
            "return": {
                "description": "the clinical encounters"
            },
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 218,
            "itemtype": "property",
            "name": "sessions",
            "return": {
                "description": "the session encounters"
            },
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 237,
            "itemtype": "property",
            "name": "biopsy",
            "return": {
                "description": "the unique biopsy encounter, if there is exactly\n  one, otherwise null"
            },
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 265,
            "itemtype": "property",
            "name": "surgery",
            "return": {
                "description": "the unique surgery encounter, if there is exactly\n  one, otherwise null"
            },
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.data.js",
            "line": 293,
            "description": "The {{#crossLink \"ModelingResults\"}}{{/crossLink}}\narray.",
            "itemtype": "property",
            "name": "modelings",
            "type": "Object[]",
            "class": "Subject",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.spec.ts",
            "line": 17,
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "params",
                    "description": "the search specification",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the hard-coded subject objects",
                "type": "Observable<Object[]>"
            },
            "class": "SubjectResourceStub",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.spec.ts",
            "line": 30,
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "params",
                    "description": "the search specification",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the hard-coded subject, or null if\n   no match",
                "type": "Observable<any>"
            },
            "class": "SubjectResourceStub",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.spec.ts",
            "line": 55,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(SubjectsComponent, SubjectService)"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "SubjectServiceSpec",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.ts",
            "line": 22,
            "itemtype": "method",
            "name": "getSubjects",
            "params": [
                {
                    "name": "project",
                    "description": "the project name",
                    "type": "String"
                },
                {
                    "name": "collection",
                    "description": "the collection name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the subject REST objects",
                "type": "Observable"
            },
            "class": "SubjectService",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.ts",
            "line": 43,
            "description": "Caches the given subject in this service. There is only one object\nin the cache. Retrieve the object with `getSubject(id)`.",
            "itemtype": "method",
            "name": "cache",
            "params": [
                {
                    "name": "subject",
                    "description": "the subject REST object to cache",
                    "type": "Object"
                }
            ],
            "class": "SubjectService",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.ts",
            "line": 54,
            "description": "Clears the cached subject in this service, if there is one.",
            "itemtype": "method",
            "name": "cache",
            "class": "SubjectService",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.ts",
            "line": 63,
            "description": "Picks the {project, collection, subject number} secondary\nkey from the given route parameters.",
            "itemtype": "method",
            "name": "secondaryKey",
            "params": [
                {
                    "name": "params",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the corresponding secondary key",
                "type": "Object"
            },
            "class": "SubjectService",
            "module": "subject"
        },
        {
            "file": "build/src/subject/subject.service.ts",
            "line": 93,
            "description": "Fetches the subject based on the given route parameters.\nThe search criterion is the\n{{#crossLink \"SubjectService/secondaryKey\"}}{{/crossLink}}.\nIf this service has a cached subject which matches that key,\nthen that object is returned.\nOtherwise, the object is fetched from the database and cached.",
            "itemtype": "method",
            "name": "getSubject",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the subject REST object, if found,\n  otherwise null",
                "type": "Observable<any>"
            },
            "class": "SubjectService",
            "module": "subject"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 28,
            "description": "Finds the element with the given search selection chain.\nEach selector is either a Protractor By object or a search\ncondition string. The search condition string can be CSS,\nan id or an xpath, determined as follows:\n\n* If the string contains a '/' or equals '..', then the\n  string is assumed to be an xpath.\n\n* Otherwise, if the string starts with '#', then the search\n  is on the id following the hash.\n\n* Otherwise, if the search argument starts with '.', then\n  the search is by CSS.\n\n* Otherwise, the search is by tag name.\n\nFor example,\n\n    page.find('.qi-billboard', 'h3', '..')\n\nreturns the parent of the h3 elt within the .qi-billboard\nelt on the page.\n\nThe ElementFinder result is extended with a find function\nfor chaining, so the above example is equivalent to:\n\n    page.element(By.css('.qi-billboard'))\n      .then (bb) ->\n        bb.element(By.tagName('h3'))\n      .then (h3) ->\n        h3.element(By.xpath('..'))",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "selectors",
                    "description": "the search conditions"
                }
            ],
            "return": {
                "description": "a promise which resolves to the target\n  Findable, or null if no such WebElement exists"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 80,
            "itemtype": "method",
            "name": "_find",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "selectors",
                    "description": "the search conditions"
                }
            ],
            "return": {
                "description": "a promise which resolves to the target\n  ElementFinder, or null if no such elt exists"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 92,
            "itemtype": "method",
            "name": "next",
            "params": [
                {
                    "name": "current",
                    "description": "the Findable to search from, or this\n  Page to search from the document root"
                },
                {
                    "name": "locator",
                    "description": "the protractor By object"
                }
            ],
            "return": {
                "description": "the result of calling *elt* on the current\n  object with the given locator"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 123,
            "description": "Finds the elements with the given search selection.\nThe selectors are described in the find function.\nUnlike the find function, findAll only accepts one\nselector argument.\n\nEach Findable in the array result is extended\nwith a find function for chaining.",
            "itemtype": "method",
            "name": "findAll",
            "params": [
                {
                    "name": "selectors",
                    "description": "the search condition"
                }
            ],
            "return": {
                "description": "a promise which resolves to the target\n  Findable array"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 155,
            "itemtype": "method",
            "name": "_findAll",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "selectors",
                    "description": "the search condition"
                }
            ],
            "return": {
                "description": "a promise which resolves to the target\n  WebElement array"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 167,
            "itemtype": "method",
            "name": "next",
            "params": [
                {
                    "name": "parent",
                    "description": "the Findable to search from, or\n  this Page to search from the document root"
                },
                {
                    "name": "locator",
                    "description": "the protractor By object"
                }
            ],
            "return": {
                "description": "the search result WebElement array"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 190,
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "selectors",
                    "description": "the search condition"
                }
            ],
            "return": {
                "description": "a promise which resolves to this WebElement's visible\n  text, or null if either:\n  * the search result does not exist\n  * the element is not displayed\n  * the text content is empty"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 231,
            "description": "Clicks on this element, captures the visited URL,\nand returns.",
            "itemtype": "method",
            "name": "visit",
            "return": {
                "description": "the visited URL"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 241,
            "description": "Navigates to the previous page, if necessary.",
            "itemtype": "method",
            "name": "restore",
            "params": [
                {
                    "name": "prev_url",
                    "description": "the previous location"
                }
            ],
            "return": {
                "description": "the URL of the page navigated from"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 271,
            "description": "Finds a nested hyperlink. The hyperlink is the href\nattribute of an anchor element (<a href=...></a>) contained\nwithin this Findable's HTML.",
            "itemtype": "method",
            "name": "hyperlink",
            "params": [
                {
                    "name": "selectors",
                    "description": "the search condition"
                }
            ],
            "return": {
                "description": "a promise which resolves to the hyperlink URL"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 295,
            "description": "Finds all nested hyperlinks.\nSee the hyperlink method.",
            "itemtype": "method",
            "name": "hyperlinks",
            "params": [
                {
                    "name": "selectors",
                    "description": "the search condition"
                }
            ],
            "return": {
                "description": "a promise which resolves to the hyperlink URLs"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 316,
            "description": "Finds the table WebElement for the given find() selector.\nThe return value is a promisr resolving to a Table object.\nEach table promise resolves to an object {header, body},\nwhere:\n* header is a promise which resolves to an array of table\n  heading text value promises\n* body is a promise which resolves to an array of row promises\n\nEach row promise resolves to an array of column text promises.\n\nIf the function argument is provided, then it is applied to\neach table cell text value promise.",
            "itemtype": "method",
            "name": "findTable",
            "params": [
                {
                    "name": "bindings",
                    "description": "the table  \n  bindings",
                    "type": "Field: ng-bind expression"
                },
                {
                    "name": "selectors",
                    "description": "the table elt find selectors"
                }
            ],
            "return": {
                "description": "a promise resolving to the table WebElement\n  with the field properties, or null if the table\n  does not exist"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 352,
            "description": "Finds the table WebElements for the given Page.findAll()\nselector. The return value is an array of table promises.\nEach table promise resolves to an object {header, body},\nwhere:\n* header is a promise which resolves to an array of table\n  heading text value promises\n* body is a promise which resolves to an array of row promises\n\nEach row promise resolves to an array of column text promises.\n\nIf the function argument is provided, then it is applied to\neach table cell text value promise.",
            "itemtype": "method",
            "name": "findTables",
            "params": [
                {
                    "name": "selector",
                    "description": "the Protractor CSS locator argument"
                }
            ],
            "return": {
                "description": "a promise resolving to the Table array"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 380,
            "itemtype": "method",
            "name": "_locatorFor",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "selector",
                    "description": "the search condition"
                }
            ],
            "return": {
                "description": "the By locator object"
            },
            "class": "Findable",
            "module": "testing"
        },
        {
            "file": "build/src/testing/findable.js",
            "line": 493,
            "description": "Adds *field* properties to this table which resolve to the\nthe value given by the corresponding AngularJS binding\nexpression.",
            "itemtype": "method",
            "name": "addBindings",
            "params": [
                {
                    "name": "bindings",
                    "description": "the {field: binding} object, where\n  *binding* is the AngularJS expression to which the field\n  element is bound",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "this table WebElement"
            },
            "class": "Table",
            "module": "testing"
        },
        {
            "file": "build/src/testing/object.js",
            "line": 10,
            "description": "A convenience function for defining an instance property\non the class prototype.\n\nThe definition argument is a property {_name_: _descriptor_} object,\nwhere:\n* _name_ is the property name\n* _descriptor_ is the property getter function or\n  {get: getter, set: setter} object\n\nThe property is enumerable by default.",
            "example": [
                "\n    class Name\n      constructor: (@first, @last) ->\n  \n      full: -> \"#{first} #{last}\"\n  \n      proper: ->\n         get: -> \"#{last}, #{first}\"\n         set: (name) -> [@last, @first] = name.split(', ')"
            ],
            "itemtype": "method",
            "name": "property",
            "params": [
                {
                    "name": "definition",
                    "description": "the {name: descriptor} property definition",
                    "type": "Object"
                }
            ],
            "class": "ObjectHelper",
            "module": "testing"
        },
        {
            "file": "build/src/testing/page.js",
            "line": 58,
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "url",
                    "description": "the page request URL"
                },
                {
                    "name": "helpShown",
                    "description": "flag indicating whether the help box is\n  initially shown (default false)"
                }
            ],
            "class": "Page",
            "module": "testing"
        },
        {
            "file": "build/src/testing/page.js",
            "line": 77,
            "itemtype": "method",
            "name": "url_pattern",
            "params": [
                {
                    "name": "url",
                    "description": "the URL without host or port\n  (default this page's URL)"
                }
            ],
            "return": {
                "description": "the full URL matcher"
            },
            "class": "Page",
            "module": "testing"
        },
        {
            "file": "build/src/testing/page.js",
            "line": 114,
            "itemtype": "method",
            "name": "findHomeButton",
            "return": {
                "description": "the Home button"
            },
            "class": "Page",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 20,
            "description": "The data object array.",
            "itemtype": "property",
            "name": "data",
            "type": "Number[]",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 27,
            "description": "The optional value accessor property name or\nproperty path. The default is to use the input\ndata directly.",
            "itemtype": "property",
            "name": "property",
            "type": "String",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 36,
            "description": "The additional data access argument.",
            "itemtype": "property",
            "name": "extra",
            "type": "Any",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 43,
            "description": "The [min, max] domain extent.\nThe default is the data min and max.",
            "itemtype": "property",
            "name": "max",
            "type": "Number[]",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 51,
            "description": "The bar width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 58,
            "description": "The bar height",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 65,
            "description": "The directive element.",
            "itemtype": "property",
            "name": "elementRef",
            "type": "ElementRef",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 72,
            "description": "The D3 SVG root group element.",
            "itemtype": "property",
            "name": "svg",
            "type": "d3.Selection<any>",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/color-bar.directive.ts",
            "line": 79,
            "description": "The bar fill function.",
            "itemtype": "property",
            "name": "fill",
            "type": "Function",
            "class": "ColorBarDirective",
            "module": "testing"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 19,
            "description": "The data object array.",
            "itemtype": "property",
            "name": "data",
            "type": "Object[]",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 26,
            "description": "This input domain filter is relayed from this component\nto the embedded\n{{#crossLink \"ScatterPlotDirective/selection:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "domainSelection",
            "type": "Boolean[]",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 35,
            "description": "The optional value {path: {value: label}} associative object,\nwhere *path* is the property select choice path.",
            "itemtype": "property",
            "name": "valueChoices",
            "type": "Object",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 43,
            "description": "The optional color chooser property path.",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 50,
            "description": "The optional symbol type chooser function.",
            "itemtype": "property",
            "name": "symbolType",
            "type": "Function",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 57,
            "description": "The X axis select options hierarchy Object.",
            "itemtype": "property",
            "name": "xPropertyChoices",
            "type": "Object",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 64,
            "description": "The Y axis select options hierarchy Object.",
            "itemtype": "property",
            "name": "yPropertyChoices",
            "type": "Object",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 71,
            "description": "The initial X chooser path.",
            "itemtype": "property",
            "name": "xPropertyPath",
            "type": "String[]",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 78,
            "description": "The initial Y chooser path.",
            "itemtype": "property",
            "name": "yPropertyPath",
            "type": "String[]",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 85,
            "description": "The select event transmits a user brush domain object select.",
            "itemtype": "property",
            "name": "select",
            "type": "EventEmitter<boolean[]>",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 92,
            "description": "The X property path.",
            "itemtype": "property",
            "name": "x",
            "type": "String",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 99,
            "description": "The Y property path.",
            "itemtype": "property",
            "name": "y",
            "type": "String",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 106,
            "description": "The X {value: label} associative object.",
            "itemtype": "property",
            "name": "xValueChoices",
            "type": "Object",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 113,
            "description": "The Y {value: label} associative object.",
            "itemtype": "property",
            "name": "yValueChoices",
            "type": "Object",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 120,
            "description": "The correlation chart margin has a small pad at the top\nfor the cascade select control and bottom for spacing.",
            "itemtype": "property",
            "name": "margin",
            "type": "Number[]",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 130,
            "description": "Sets the initial\n{{#crossLink \"CorrelationComponent/x:property\"}}{{/crossLink}}\nand\n{{#crossLink \"CorrelationComponent/y:property\"}}{{/crossLink}}\nproperty paths and the\n{{#crossLink \"CorrelationComponent/xValueChoices:property\"}}{{/crossLink}}\nand\n{{#crossLink \"CorrelationComponent/yValueChoices:property\"}}{{/crossLink}}\nvalue choices.",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 164,
            "description": "Updates the\n{{#crossLink \"CorrelationComponent/x:property\"}}{{/crossLink}}\nand\n{{#crossLink \"CorrelationComponent/xValueChoices:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "onXChange",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 179,
            "description": "Updates the\n{{#crossLink \"CorrelationComponent/y:property\"}}{{/crossLink}}\nand\n{{#crossLink \"CorrelationComponent/yValueChoices:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "onYChange",
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/correlation.component.ts",
            "line": 194,
            "description": "Forwards the user brush select to the parent component.",
            "itemtype": "method",
            "name": "onBrushSelect",
            "params": [
                {
                    "name": "selected",
                    "description": "the selected state",
                    "type": "Boolean[]"
                }
            ],
            "class": "CorrelationComponent",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 32,
            "description": "The data object array.",
            "itemtype": "property",
            "name": "data",
            "type": "Object[]",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 39,
            "description": "The optional selection array filters the data domain. The default\nis to use all of the data objects. Missing inputs are always ignored.",
            "itemtype": "property",
            "name": "selection",
            "type": "Boolean[]",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 47,
            "description": "The required X value property name or path.",
            "itemtype": "property",
            "name": "x",
            "type": "String",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 54,
            "description": "The required Y value property name or path.",
            "itemtype": "property",
            "name": "y",
            "type": "String",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 61,
            "description": "The optional property name or path whose value determines the data point\n(color, opacity) assignment. A data point is assigned a color and opacity\nbased on the result of calling the color function. Distinct data points\nare assigned the same (color, opacity) combination if and only if applying\nthe color function returns the same color value.\n\nThe default color function is the zero-based position of the input object\nin the {{#crossLink \"ScatterPlotDirective/data:property\"}}{{/crossLink}}\narray.",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 76,
            "description": "The flag indicating whether the X domain is discrete rather than\ncontinuous. The default is `true` if the first non-nil X value\nis a string or boolean, `false` otherwise.",
            "itemtype": "property",
            "name": "xDiscrete",
            "type": "Boolean",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 85,
            "description": "The flag indicating whether the Y domain is discrete rather than\ncontinuous. The default is `true` if the first non-nil Y value\nis a string or boolean, `false` otherwise.",
            "itemtype": "property",
            "name": "yDiscrete",
            "type": "Boolean",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 94,
            "description": "The optional X {value: label} associative object for a discrete domain.",
            "itemtype": "property",
            "name": "xChoices",
            "type": "Object",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 101,
            "description": "The optional Y {value: label} associative object for a discrete domain.",
            "itemtype": "property",
            "name": "yChoices",
            "type": "Object",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 108,
            "description": "The optional symbol type function (default `circle`).",
            "itemtype": "property",
            "name": "symbolType",
            "type": "Function",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 115,
            "description": "The optional chart width. The default width is the parent element\nwidth.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 123,
            "description": "The optional chart height. The default height is the\n{{#crossLink \"ScatterPlotDirective/width:property\"}}{{/crossLink}}\ntimes the\n{{#crossLink \"ScatterPlotDirective/aspect:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 133,
            "description": "The optional chart [top, left, bottom, right] margin within the SVG\nroot element.",
            "itemtype": "property",
            "name": "margin",
            "type": "Number[]",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 141,
            "description": "The optional chart width:height ratio. The default is the window\naspect.",
            "itemtype": "property",
            "name": "aspect",
            "type": "Number",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 149,
            "description": "The optional least squares trend line flag. The default is `false`.",
            "itemtype": "property",
            "name": "trendLine",
            "type": "Boolean",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 156,
            "description": "The axis customization callback.",
            "itemtype": "property",
            "name": "onAxis",
            "type": "Function",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 163,
            "description": "The plotted event transmits the root SVG group D3 selection\nafter the chart is drawn.",
            "itemtype": "property",
            "name": "plotted",
            "type": "EventEmitter<Object>",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 171,
            "description": "The select event transmits the domain object selection state.",
            "itemtype": "property",
            "name": "select",
            "type": "EventEmitter<boolean[]>",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 178,
            "description": "The plot configuration parameters. This object is built by\n{{#crossLink \"ScatterPlotDirective/createChart\"}}{{/crossLink}}\nand consists of data-independent properties, e.g. the plot\norigin and the visibility function.",
            "itemtype": "property",
            "name": "plot",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 189,
            "description": "The domain references encapsulation. This object is built\nby\n{{#crossLink \"ScatterPlotDirective/createDomains\"}}{{/crossLink}}\nand consists of the following properties:\n* _data_: the valid data object array\n* _dataRefs_: the _data_ =>\n  {{#crossLink \"ScatterPlotDirective/data:property\"}}{{/crossLink}}\n  index array\n* _pointData_: the valid data points array\n* _toData_: the data point => _data_ index array\n* _fromData_: the _data_ => [data point] index array\n* _x_, _y_: the {value, indexes, domain, scale} axis\n  properties",
            "itemtype": "property",
            "name": "domains",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 209,
            "description": "The D3 SVG root group element.",
            "itemtype": "property",
            "name": "svg",
            "type": "d3.Selection<any>",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 217,
            "description": "The data point X cooordinate function.",
            "itemtype": "property",
            "name": "dx",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 225,
            "description": "The data point Y cooordinate function.",
            "itemtype": "property",
            "name": "dy",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 233,
            "description": "The time of the transitions in progress.",
            "itemtype": "property",
            "name": "pendingTransitionTime",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 241,
            "description": "The internal chart padding to accomodate the top and\nbottom axes. The right pad allows for the last X tick\nlabel. The left pad accomodates a `-n.nn` number.\nNon-numeric labels are slanted to fit within the pad.",
            "itemtype": "property",
            "name": "pad",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 254,
            "description": "Handle the following changes:\n* If the\n  {{#crossLink \"ScatterPlotDirective/selection:property\"}}{{/crossLink}}\n  changed, then reset the visibility.\n* If the\n  {{#crossLink \"ScatterPlotDirective/x:property\"}}{{/crossLink}} or\n  {{#crossLink \"ScatterPlotDirective/y:property\"}}{{/crossLink}}\n  property changed, then reset the data point coordinates.",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 291,
            "description": "Makes the D3 SVG root group element and draws the plot.",
            "itemtype": "method",
            "name": "createChart",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 370,
            "description": "Makes the plot data-independent parameters.",
            "itemtype": "method",
            "name": "configurePlot",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 442,
            "description": "Reconfigures and redraws the D3 plot.",
            "itemtype": "method",
            "name": "updatePlot",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 469,
            "description": "Draws the D3 points in the given plot.",
            "itemtype": "method",
            "name": "drawPoints",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "plot",
                    "description": "the D3 plot selection",
                    "type": "Object"
                }
            ],
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 528,
            "description": "Resets the data point visibility style based on the\n{{#crossLink \"ScatterPlotDirective/isDataPointVisible\"}}{{/crossLink}}\nresult.",
            "itemtype": "method",
            "name": "resetVisibility",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 565,
            "description": "Sets the data-dependent portion of the plot.",
            "itemtype": "method",
            "name": "createDomains",
            "access": "private",
            "tagname": "",
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 608,
            "description": "Creates the\n{{#crossLink \"ScatterPlotDirective/domain:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "configureDomains",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "getX",
                    "description": "the X accessor",
                    "type": "Function"
                },
                {
                    "name": "getY",
                    "description": "the Y accessor",
                    "type": "Function"
                }
            ],
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 689,
            "description": "Collects the values for a discrete domain.\nIf there is a trend line, then the domain is sorted as\nfollows:\n* If both axes are discrete, then the sort criterion is\n  the orthogonal count.\n* Otherwise, the discrete axis sort criterion is the\n  orthogonal mean.\nIf there is not a trend line, then the domain is sorted\nin the natural order.",
            "itemtype": "method",
            "name": "getDiscreteValues",
            "params": [
                {
                    "name": "discrete",
                    "description": "the discrete axis value accessor\n  object",
                    "type": "Function"
                },
                {
                    "name": "other",
                    "description": "the orthogonal axis value accessor",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "the sorted discrete values",
                "type": "Any[]"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 747,
            "description": "The discrete groups are sorted as follows:\n* If both axes are discrete, then the sort criterion is\n  the orthogonal count.\n* Otherwise, the discrete axis sort criterion is the\n  orthogonal mean.",
            "itemtype": "method",
            "name": "getDiscreteSortCriterion",
            "params": [
                {
                    "name": "groups",
                    "description": "the discrete {value: [data objects]}\n  object",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "the orthogonal value accessor",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "the group sort criteria",
                "type": "Object"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 770,
            "description": "Sets the\n{{#crossLink \"ScatterPlotDirective/domains:property\"}}{{/crossLink}}\nproperties `data`, `dataRefs`, `toData`, `fromData`, `x.discrete`,\n`y.discrete`, `x.indexes` and `y.indexes`.",
            "itemtype": "method",
            "name": "configureDomainRefs",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "getX",
                    "description": "the X accessor",
                    "type": "Function"
                },
                {
                    "name": "getY",
                    "description": "the Y accessor",
                    "type": "Function"
                }
            ],
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 905,
            "description": "The point locator function.",
            "itemtype": "method",
            "name": "pointTransform",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "d",
                    "description": "the data object",
                    "type": "Object"
                },
                {
                    "name": "i",
                    "description": "the data point (not *data*) index",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the `translate` SVG directive",
                "type": "String"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 918,
            "description": "Returns whether the data point at the given index is both\nvalid and selected.",
            "itemtype": "method",
            "name": "isDataPointVisible",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "the data point (not *data*) array index",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "whether the data point is selected and valid",
                "type": "Boolean"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 967,
            "description": "Makes the seletion D3 brush.",
            "itemtype": "method",
            "name": "createBrush",
            "return": {
                "description": "the D3 brush",
                "type": "Object"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 1049,
            "description": "Determines the subset of\n{{#crossLink \"ScatterPlotDirective/data:property\"}}{{/crossLink}}\ndata points within the D3 brush bounding box.\n\n_Note_: this method is intended for use solely by the D3 callback.",
            "itemtype": "method",
            "name": "getSelectedData",
            "return": {
                "description": "the data selection"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 1092,
            "description": "Draws the correlation trend line and correlation\ncoefficient, if the correlation is well-defined, as\ndescribed in\n{{#crossLink \"ScatterPlotDirective/leastSquares\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "drawTrendLine",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "plot",
                    "description": "the plot SVG element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the data selection"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 1149,
            "description": "Calculate the least-squares trend line parameters. This\nfunction is adapted, with improvements, from\nhttp://bl.ocks.org/benvandyke/8459843. The return value\nis the {slope, intercept, rSquare} object, if well-defined,\notherwise null. The correlation is not well-defined if\neither all of the X values or all of the Y values are equal.",
            "itemtype": "method",
            "name": "leastSquares",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "the trend line slope, intercept and r-square",
                "type": "Object"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/scatter-plot.directive.ts",
            "line": 1192,
            "description": "Determines the continuous [min, max] domain for the\ngiven value function applied over the\n{{#crossLink \"ScatterPlotDirective/data:property\"}}{{/crossLink}}\ninput.",
            "itemtype": "method",
            "name": "getContinuousDomain",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "accessor",
                    "description": "the X or Y domain object => value\n  accessor or property path",
                    "type": "Function|string"
                }
            ],
            "return": {
                "description": "the [min, max] domain"
            },
            "class": "ScatterPlotDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 24,
            "description": "The data objects. The data can be either an input array for\na single data series or a {_key_: array, ...} for one or\nmore data series, where _key_ is the data series designator.",
            "itemtype": "property",
            "name": "data",
            "type": "Object|Object[]",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 33,
            "description": "The [min, max] domain extent.\nThe default is the data min and max.",
            "itemtype": "property",
            "name": "domain",
            "type": "Number[]",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 41,
            "description": "The optional X value access property name or\nproperty path. The default is to input data\npoint index.",
            "itemtype": "property",
            "name": "x",
            "type": "String",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 50,
            "description": "The optional Y value accessor property name or\nproperty path. The default is to use the input\ndata directly.",
            "itemtype": "property",
            "name": "y",
            "type": "String",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 59,
            "description": "The optional additional data access argument.",
            "itemtype": "property",
            "name": "extra",
            "type": "Any",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 66,
            "description": "The optional domain arrays, used as folows:\n* If the input is an array of two items, then the\n  Y domain is that input.\n* Otherwise, if the input is a {x, y} object, e.g.\n`{x: [0, 12], y: [1, 100]}`, then the X and Y domains\nare the respective property values.\n\nThe default X or Y domain is the respective mapped data\nmin and max.",
            "itemtype": "property",
            "name": "domain",
            "type": "Any",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 81,
            "description": "The line width.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 88,
            "description": "The line height.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 95,
            "description": "A flag indicating whether to draw a dotted\nvertical guide line in the middle of the\nspark line.",
            "itemtype": "property",
            "name": "guide",
            "type": "Boolean",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 104,
            "description": "The optional {_key_: _label_} legend, where _key_ is the\ndata series designator. The default for a single series is\nno legend, otherwise the default is the capitalized data key.",
            "itemtype": "property",
            "name": "legend",
            "type": "Object",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 113,
            "description": "The D3 SVG root group element.",
            "itemtype": "property",
            "name": "svg",
            "type": "d3.Selection<any>",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 120,
            "description": "The D3 line.",
            "itemtype": "property",
            "name": "line",
            "type": "d3.Line<number, number>",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 130,
            "description": "Makes the D3 SVG root group element and draws the plot.",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/visualization/spark-line.directive.ts",
            "line": 251,
            "description": "Handle the following changes:\n* If the data changed, then reset the line data, which will\n  induce d3 to replot the line.\n\n_Note_: the other inputs are for initialization only, and\nchanges to them are ignored. For example, resizing the window\nresets the width input, but that is ignored. Handling a resize\nnecessitates detaching and recreating the entire plot, which\nresults in a DOM memory leak.",
            "class": "SparkLineDirective",
            "module": "visualization"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 29,
            "description": "The default horizontal slider configuration.",
            "itemtype": "property",
            "name": "HORIZONTAL_SLIDER_CONFIG",
            "type": "Object",
            "static": 1,
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 43,
            "description": "The default vertical slider configuration.",
            "itemtype": "property",
            "name": "VERTICAL_SLIDER_CONFIG",
            "type": "Object",
            "static": 1,
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 54,
            "description": "The route parameters are retained in case the session or\nvolume changes.",
            "itemtype": "property",
            "name": "routeParams",
            "type": "Object",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 62,
            "description": "The place-holder object for the display title and home\nnavigation project.",
            "itemtype": "property",
            "name": "placeHolder",
            "type": "String",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 70,
            "description": "The image to display.",
            "itemtype": "property",
            "name": "image",
            "type": "Object",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 77,
            "description": "The loaded volume REST object.",
            "itemtype": "property",
            "name": "volume",
            "type": "Object",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 84,
            "description": "The current coordinate time series voxel values.",
            "itemtype": "property",
            "name": "timePointIntensities",
            "type": "Number[]",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 91,
            "description": "The physical space voxel values about the current coordinate.",
            "itemtype": "property",
            "name": "physicalIntensities",
            "type": "Number[]",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 98,
            "description": "The physical intensity gradient chart legend.",
            "itemtype": "property",
            "name": "physicalIntensitiesLegend",
            "type": "Object",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 109,
            "description": "The physical intensity gradient chart width in pixels\nis a bit less than 20% of the window width to match\nthe CSS .qi-time-series .qi-right setting and allow\nfor a small right margin.",
            "itemtype": "property",
            "name": "gradientWidth",
            "type": "Number",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 119,
            "description": "The intensity charts top position is the image view base\nplus a small margin.",
            "itemtype": "property",
            "name": "intensityGradientsTop",
            "type": "Number",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 127,
            "description": "The vertical time point slider height is calculated\nto span the image view height minus a small margin.",
            "itemtype": "property",
            "name": "timePointSliderHeight",
            "type": "Number",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 135,
            "description": "The time point slider configuration.",
            "itemtype": "property",
            "name": "timePointSliderConfig",
            "type": "Object",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 142,
            "description": "The session slider configuration.",
            "itemtype": "property",
            "name": "sessionSliderConfig",
            "type": "Object",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 149,
            "description": "Flag indicating whether to stop an active time point player.",
            "itemtype": "property",
            "name": "cancelTimePointPlayer",
            "type": "Boolean",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 156,
            "description": "Flag indicating whether to stop an active session player.",
            "itemtype": "property",
            "name": "cancelSessionPlayer",
            "type": "Boolean",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 163,
            "description": "The intensity [min, max].",
            "itemtype": "property",
            "name": "domain",
            "type": "Number[]",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 171,
            "description": "The project name.",
            "itemtype": "property",
            "name": "project",
            "type": "String",
            "readonly": "",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 181,
            "description": "The _coordinate_ => {_orientation_: _intensities_, ...}\nfunction described in\n{{#crossLink \"VolumeComponent/createPhysicalIntensitiesFactory\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "createPhysicalIntensities",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 192,
            "description": "Fetches the volume specified by the route parameters as\ndescribed in\n{{#crossLink \"VolumeComponent/getVolume\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "constructor",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 217,
            "description": "Adjusts the slider and intensity chart placement and dimensions.",
            "itemtype": "method",
            "name": "onResize",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 227,
            "description": "Sets the following style properties:\n* {{#crossLink \"VolumeComponent/timePointSliderHeight:property\"}}{{/crossLink}}\n* {{#crossLink \"VolumeComponent/intensityGradientsBottom:property\"}}{{/crossLink}}\n* {{#crossLink \"VolumeComponent/intensityGradientsWidth:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "calibrateStyles",
            "access": "private",
            "tagname": "",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 244,
            "description": "Sets the\n{{#crossLink \"VolumeComponent/volume:property\"}}{{/crossLink}}\nproperty to notify the respective choosers.",
            "itemtype": "method",
            "name": "onLoaded",
            "params": [
                {
                    "name": "volume",
                    "description": "the loaded volume",
                    "type": "Object"
                }
            ],
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 281,
            "description": "Turn off any active player and display the standard error\npop-up.",
            "itemtype": "method",
            "name": "onLoadError",
            "params": [
                {
                    "name": "message",
                    "description": "the error message",
                    "type": "String"
                }
            ],
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 300,
            "itemtype": "method",
            "name": "volumeCount",
            "return": {
                "description": "the number of volume parent images",
                "type": "Number"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 310,
            "description": "Fetches the requested volume. The request can be the\nnumber, `previous` or `next`.\n\nThis change resets the title by virtue of loading the\nvolume but does not reroute the app or change the page.",
            "itemtype": "method",
            "name": "onTimePointRequest",
            "params": [
                {
                    "name": "request",
                    "description": "the number request",
                    "type": "String|number"
                }
            ],
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 352,
            "itemtype": "method",
            "name": "sessionCount",
            "return": {
                "description": "the number of parent subject sessions",
                "type": "Number"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 362,
            "description": "Replaces the current\n{{#crossLink \"VolumeComponent/volume:property\"}}{{/crossLink}}\nwith a comparable session image sequence volume. The volume\nhierarchy is the same except for the session number. The request\ncan be the session number, `previous` or `next`.\n\nFor example, if the current volume has hierarchy:\n\n    /QIN/Breast/Subject008/Session01/scan/1/registration/1/volume003\n\nand the requested session number is `2`, then the new volume is\"\n\n    /QIN/Breast/Subject008/Session02/scan/1/registration/1/volume003\n\nThis change resets the title by virtue of loading the\nnew session but does not reroute the app or change the page.",
            "itemtype": "method",
            "name": "onSessionRequest",
            "params": [
                {
                    "name": "request",
                    "description": "the number request",
                    "type": "String|number"
                }
            ],
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 403,
            "description": "Sets the\n{{#crossLink \"VolumeComponent/intensities:property\"}}{{/crossLink}}\nproperty for the new coordinate.",
            "itemtype": "method",
            "name": "onCoordinateChanged",
            "params": [
                {
                    "name": "coordinate",
                    "description": "the new coordinate",
                    "type": "Object"
                }
            ],
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 424,
            "description": "Shows the Physical Intensity Gradient modal help pop-up.",
            "itemtype": "method",
            "name": "openPhysicalIntensityHelp",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 438,
            "description": "Shows the Time Point Intensity Gradient modal help pop-up.",
            "itemtype": "method",
            "name": "openTimePointIntensityHelp",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 496,
            "description": "The pip density is the larger of 10 or (100 / *count*()).",
            "itemtype": "method",
            "name": "pipDensity",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "count",
                    "description": "the number of slider values",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the preferred pip density",
                "type": "Number"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 510,
            "description": "The _value_ => 0|1|2 slider pip function, where\n* 0 => don't show the value\n* 1 => show a value in large text\n* 2 => show a value in small text\n\nThe values in large text are as follows:\n* the start and end\n* if there are 5 or fewer values, then all remaining values\n* if there are 6-20 values, then every fifth value\n* if there are more than 20 values, then every tenth value\nThe remaining values are in small text, unless there are more\nthan 20 values, in which case only intermittent values are\ndisplayed in small text and the remaining values are not\ndisplayed next to their pip.",
            "itemtype": "method",
            "name": "pipFilter",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "count",
                    "description": "a function returning the number of\n  slider values",
                    "type": "() => number"
                },
                {
                    "name": "value",
                    "description": "the input slider value",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the pip display designator",
                "type": "Number"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 561,
            "description": "The physical intensity gradient domain is the 101 voxels centered\nat the current coordinate.",
            "itemtype": "property",
            "name": "PHYSICAL_GRADIENT_DOMAIN",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 571,
            "description": "Makes the _coordinate_ => {_orientation_: _intensities_, ...}\nfunction, where\n* _orientation_ is `axial`, `coronal` or `sagittal`\n* _intensities_ is the voxel values over the\n  {{#crossLink \"VolumeComponent/PHYSICAL_GRADIENT_DOMAIN:property\"}}{{/crossLink}}\n  offset from the _coordinate_ _orientation_ x, y or z index.",
            "itemtype": "method",
            "name": "createPhysicalIntensitiesFactory",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "the gradient voxel values factory",
                "type": "Function"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 622,
            "description": "Mimic the Papaya container height = body width / 1.5.\nThe Papaya parent element width is specified in the\nCSS as 60% of the body width.\n\nNothing is laid out when this method is initially called,\nso we can't rely on\n{{#crossLink \"PapayaService/viewerDimensions\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "imageViewHeight",
            "return": {
                "description": "the image view height truncated to the nearest\n  integer"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 645,
            "description": "The body width exclusive of the 15px left and right paddding.",
            "itemtype": "method",
            "name": "bodyInnerWidth",
            "return": {
                "description": "the body inner width in pixels"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 656,
            "description": "The gutters on either side of the image display are 20%\nof the\n{{#crossLink \"VolumeComponent/bodyInnerWidth\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "gutterWidth",
            "return": {
                "description": "the width of the gutter in pixels"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 668,
            "description": "The slider height is the image view height less the\ntitle and player heights.",
            "itemtype": "method",
            "name": "calculateTimePointSliderHeight",
            "params": [
                {
                    "name": "imageViewHeight",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the preferred slider height"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 685,
            "itemtype": "method",
            "name": "calculateIntensityGradientWidth",
            "return": {
                "description": "the preferred gradient width"
            },
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 695,
            "description": "Determines the requested volume number. The request\ncan be the number, `previous` or `next`.",
            "itemtype": "method",
            "name": "timePointRequestVolume",
            "params": [
                {
                    "name": "request",
                    "description": "the number request",
                    "type": "String|number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 719,
            "description": "Determines the requested session number. The request\ncan be the number, `previous` or `next`.",
            "itemtype": "method",
            "name": "requestedSessionNumber",
            "params": [
                {
                    "name": "request",
                    "description": "the number request",
                    "type": "String|number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.component.ts",
            "line": 743,
            "description": "Fetches the volume specified by the given parameters.\nThis method sets the\n{{#crossLink \"VolumeComponent/volume:property\"}}{{/crossLink}} to\na {{#crossLink \"VolumeService/placeHolder\"}}{{/crossLink}} and then\nattempts to fetch the specified object. If successful, the\n{{#crossLink \"VolumeComponent/volume:property\"}}{{/crossLink}} is\nset to the fetched object. Otherwise, this component's\n{{#crossLink \"PageComponent/error:property\"}}{{/crossLink}} is\nset to an error message, which is then displayed in a pop-up.\n\nSetting the\n{{#crossLink \"VolumeComponent/volume:property\"}}{{/crossLink}}\nproperty value triggers the image component image load. When\nthe image is loaded the\n{{#crossLink \"PageComponent/onLoaded\"}}{{/crossLink}} callback\nnotifies the choosers.",
            "itemtype": "method",
            "name": "getVolume",
            "params": [
                {
                    "name": "params",
                    "description": "the search parameters",
                    "type": "Object"
                }
            ],
            "class": "VolumeComponent",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.data.js",
            "line": 16,
            "description": "Adds the following volume properties to the given volume\nimage:\n* resource - the image store resource name\n* number - the one-based volume number\n* scan, if the volume parent is a scan, or\n* registration, if the volume parent is a registration\n* imageSequence - the parent scan or registration",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "image",
                    "description": "the volume image object to extend"
                },
                {
                    "name": "imageSequence",
                    "description": "the parent object"
                },
                {
                    "name": "number",
                    "description": "the one-based volume number"
                }
            ],
            "class": "Volume",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.data.js",
            "line": 36,
            "description": "The one-based volume index relative to the parent image sequence.",
            "itemtype": "property",
            "name": "number",
            "type": "Number",
            "class": "Volume",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.data.js",
            "line": 43,
            "description": "The parent scan or registration.",
            "itemtype": "property",
            "name": "imageSequence",
            "type": "ImageSequence",
            "class": "Volume",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.data.js",
            "line": 50,
            "description": "The scan which contains this volume. If the parent\n{{#crossLink \"ImageSequence\"}}{{/crossLink}} is a\n{{#crossLink \"Registration\"}}{{/crossLink}}, then\nthis volume's scan is the parent registration's scan.",
            "itemtype": "property",
            "name": "scan",
            "type": "Scan",
            "class": "Volume",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.data.js",
            "line": 78,
            "itemtype": "property",
            "name": "title  the display title",
            "type": "String",
            "class": "Volume",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.data.js",
            "line": 87,
            "itemtype": "property",
            "name": "resource  the volume resource name",
            "type": "String",
            "class": "Volume",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.data.js",
            "line": 99,
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "imageSequence",
                    "description": "the parent scan or registration to search"
                },
                {
                    "name": "number",
                    "description": "the volume number"
                }
            ],
            "return": {
                "description": "the volume object"
            },
            "throws": {
                "description": "ReferenceError if the parent image sequence does not\n  have the volume"
            },
            "class": "Volume",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.service.spec.ts",
            "line": 33,
            "itemtype": "method",
            "name": "getImagSequence",
            "params": [
                {
                    "name": "params",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the hard-coded image sequence object",
                "type": "Observable<any>"
            },
            "class": "VolumeImageSequenceServiceStub",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.service.spec.ts",
            "line": 50,
            "description": "Runs the given test body on the injected component and service.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "body",
                    "description": "the test body",
                    "type": "Function(SubjectsComponent, SubjectService)"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "VolumeServiceSpec",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.service.ts",
            "line": 19,
            "description": "Makes the {_sequence_, _number_} secondary\nkey from the given route parameters, where:\n* _sequence_ is the parent image sequence secondary key\n* _number_ is the _volume_ parameter\nThe image sequence secondary key is the scan or registration\nnumber and the sequence parent secondary key, recursively\ndefined up to the subject secondary key.",
            "example": [
                "\n    {\n      scan: {\n        session: {\n          subject: {project: 'QIN', collection: 'Breast', number: 4},\n          number: 3\n        },\n        number: 1\n      },\n      number: 12\n    }"
            ],
            "itemtype": "method",
            "name": "secondaryKey",
            "params": [
                {
                    "name": "params",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the corresponding secondary key",
                "type": "Object"
            },
            "class": "VolumeService",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.service.ts",
            "line": 59,
            "description": "Makes a place-holder volume sufficient to display a title.\nThe place-holder extends the\n{{#crossLink \"VolumeService/secondaryKey\"}}{{/crossLink}}\nusing the various data utility service `extend` methods,\nwhich in turn enables the {{#crossLink \"Volume/title\"}}{{/crossLink}}\nvirtual property.",
            "itemtype": "method",
            "name": "placeHolder",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the place-holder volume object",
                "type": "Volume"
            },
            "class": "VolumeService",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.service.ts",
            "line": 84,
            "itemtype": "method",
            "name": "getVolume",
            "params": [
                {
                    "name": "routeParams",
                    "description": "the route parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the REST volume image object, or null if not found",
                "type": "Any"
            },
            "class": "VolumeService",
            "module": "volume"
        },
        {
            "file": "build/src/volume/volume.service.ts",
            "line": 100,
            "description": "Finds the volume in the given image sequence.\nThe default volume is the\n{{#crossLink \"ImageSequence/maximalIntensityVolume\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "findVolume",
            "params": [
                {
                    "name": "imageSequence",
                    "description": "the image sequence object holding the volume",
                    "type": "Object"
                },
                {
                    "name": "volume",
                    "description": "the optional one-based volume number",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the REST volume image object, or null if not found",
                "type": "Any"
            },
            "class": "VolumeService",
            "module": "volume"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/collection/collection.component.spec.ts:67"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/collections/collections.component.spec.ts:64"
        },
        {
            "message": "unknown tag: abstract",
            "line": " build/src/page/page.component.ts:1"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/projects/projects.component.spec.ts:52"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/session/image-sequence.service.spec.ts:48"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/session/session.component.spec.ts:88"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/session/session.service.spec.ts:92"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/subject/subject.component.spec.ts:85"
        },
        {
            "message": "unknown tag: raise",
            "line": " build/src/subject/subject.component.ts:181"
        },
        {
            "message": "unknown tag: raise",
            "line": " build/src/subject/subject.component.ts:208"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/subject/subject.service.spec.ts:55"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " build/src/volume/volume.service.spec.ts:50"
        },
        {
            "message": "Missing item type\nFormats the database TNM size object to a display value.",
            "line": " build/src/clinical/tnm-size.pipe.ts:5"
        },
        {
            "message": "Missing item type\nFormats the database TNM object to a stage display value.",
            "line": " build/src/clinical/tnm-stage.pipe.ts:5"
        },
        {
            "message": "Missing item type\nFormats the display value of a three-valued boolean input.",
            "line": " build/src/common/boolean.pipe.ts:3"
        },
        {
            "message": "Missing item type\nCapitalizes string input.",
            "line": " build/src/common/capitalize.pipe.ts:4"
        },
        {
            "message": "Missing item type\nTransforms a database value to a display value.",
            "line": " build/src/common/choice.pipe.ts:7"
        },
        {
            "message": "Missing item type\nAdds `Not Specified` as the value for missing data.",
            "line": " build/src/common/notSpecified.pipe.ts:4"
        },
        {
            "message": "Missing item type\nReturns whether this table's\n{{#crossLink \"PropertyTableComponent/object:property\"}}{{/crossLink}}\nhas no displayable properties.",
            "line": " build/src/common/property-table.component.ts:328"
        },
        {
            "message": "Missing item type\nTransforms a database value to a display value.",
            "line": " build/src/date/moment.pipe.ts:3"
        },
        {
            "message": "Missing item type\nMonkey-patches Papaya to disable drag-and-drop, replace the\nerror handler, disable the non-View menu items, inject a finished\nload callback and fix several bugs.",
            "line": " build/src/image/papaya.service.ts:84"
        },
        {
            "message": "Missing item type\nTransforms an Arabic integer to a Roman numberal (seriously).",
            "line": " build/src/roman/romanize.pipe.ts:5"
        },
        {
            "message": "Missing item type\nHandle the following changes:\n* If the\n  {{#crossLink \"ScatterPlotDirective/selection:property\"}}{{/crossLink}}\n  changed, then reset the visibility.\n* If the\n  {{#crossLink \"ScatterPlotDirective/x:property\"}}{{/crossLink}} or\n  {{#crossLink \"ScatterPlotDirective/y:property\"}}{{/crossLink}}\n  property changed, then reset the data point coordinates.",
            "line": " build/src/visualization/scatter-plot.directive.ts:254"
        },
        {
            "message": "Missing item type\nMakes the D3 SVG root group element and draws the plot.",
            "line": " build/src/visualization/spark-line.directive.ts:130"
        },
        {
            "message": "Missing item type\nHandle the following changes:\n* If the data changed, then reset the line data, which will\n  induce d3 to replot the line.\n\n_Note_: the other inputs are for initialization only, and\nchanges to them are ignored. For example, resizing the window\nresets the width input, but that is ignored. Handling a resize\nnecessitates detaching and recreating the entire plot, which\nresults in a DOM memory leak.",
            "line": " build/src/visualization/spark-line.directive.ts:251"
        }
    ]
}